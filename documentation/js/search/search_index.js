var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"0.7.2","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["amplifi","angular","appsync","aw","cognito","dynamodb","graphql","index","ionic","match","node","npm","readm","result","s3","typescript","v12.18.4","v6.14.8","want"],"overview.html":["11","12","19","21","23","browser","compon","inject","interfac","match","modul","out","overview","reset","result","rout","support","svg","zoom"],"modules.html":["appmodul","brows","browser","commentpagemodul","commentpageroutingmodul","confirmpagemodul","confirmpageroutingmodul","homepagemodul","homepageroutingmodul","loginpagemodul","loginpageroutingmodul","match","modul","owntaskpagemodul","owntaskpageroutingmodul","result","roommemberspagemodul","roommemberspageroutingmodul","settingpagemodul","settingpageroutingmodul","sharedmodul","signuppagemodul","signuppageroutingmodul","support","svg","tabspagemodul","taskdetailpagemodul","taskdetailpageroutingmodul","taskpagemodul","taskpageroutingmodul"],"modules/AppModule.html":["angular/cor","angular/platform","angular/rout","app","app.compon","appcompon","appmodul","approutingmodul","bar/ngx","bootstrap","browser","browsermodul","class","declar","entrycompon","export","file","import","info","ionic","ionic/angular","ionicmodul","ionicmodule.forroot","ionicroutestrategi","match","modul","native/splash","native/statu","ngmodul","out","provid","reset","result","routereusestrategi","routing.modul","screen/ngx","shared/shared.modul","sharedmodul","sourc","splashscreen","src/app/app.module.t","statusbar","support","svg","useclass","zoom"],"modules/CommentPageModule.html":["angular/common","angular/cor","angular/form","browser","class","comment","comment.pag","commentpag","commentpagemodul","commentpageroutingmodul","commonmodul","declar","export","file","formsmodul","import","info","ionic/angular","ionicmodul","match","modul","ngmodul","out","reset","result","routing.modul","sourc","src/app/pages/comment/comment.module.t","support","svg","zoom"],"modules/CommentPageRoutingModule.html":["angular/cor","angular/rout","browser","class","comment.pag","commentpag","commentpageroutingmodul","compon","const","export","file","import","info","match","modul","ngmodul","out","path","reset","result","rout","routermodul","routermodule.forchild(rout","routing.module.t","sourc","src/app/pages/comment/com","support","svg","zoom"],"modules/ConfirmPageModule.html":["angular/common","angular/cor","angular/form","browser","class","commonmodul","confirm","confirm.pag","confirmlog","confirmpag","confirmpagemodul","confirmpageroutingmodul","declar","export","file","formsmodul","import","info","ionic/angular","ionicmodul","logic/confirm.log","match","modul","ngmodul","out","provid","reactiveformsmodul","reset","result","routing.modul","sourc","src/app/pages/confirm/confirm.module.t","support","svg","zoom"],"modules/ConfirmPageRoutingModule.html":["angular/cor","angular/rout","browser","class","compon","confirm.pag","confirmpag","confirmpageroutingmodul","const","export","file","import","info","match","modul","ngmodul","out","path","reset","result","rout","routermodul","routermodule.forchild(rout","routing.module.t","sourc","src/app/pages/confirm/confirm","support","svg","zoom"],"modules/HomePageModule.html":["angular/common","angular/cor","browser","class","commonmodul","componet/list","declar","entrycompon","export","file","home","home.pag","homelog","homepag","homepagemodul","homepageroutingmodul","homeservic","import","info","ionic/angular","ionicmodul","listroomcompon","logic/home.log","match","modul","ngmodul","out","provid","reset","result","room.compon","room/list","routing.modul","service/home.servic","shared/shared.modul","sharedmodul","sourc","src/app/pages/home/home.module.t","support","svg","zoom"],"modules/HomePageRoutingModule.html":["angular/cor","angular/rout","browser","class","compon","const","export","file","home.pag","homepag","homepageroutingmodul","import","info","match","modul","ngmodul","out","path","reset","result","rout","routermodul","routermodule.forchild(rout","routing.module.t","sourc","src/app/pages/home/hom","support","svg","zoom"],"modules/LoginPageModule.html":["angular/common","angular/cor","angular/form","browser","class","commonmodul","declar","export","file","formsmodul","import","info","ionic/angular","ionicmodul","logic.servic","logic/login","login","login.pag","loginlog","loginpag","loginpagemodul","loginpageroutingmodul","match","modul","ngmodul","out","provid","reactiveformsmodul","reset","result","routing.modul","sourc","src/app/pages/login/login.module.t","support","svg","zoom"],"modules/LoginPageRoutingModule.html":["angular/cor","angular/rout","browser","class","compon","const","export","file","import","info","login.pag","loginpag","loginpageroutingmodul","match","modul","ngmodul","out","path","reset","result","rout","routermodul","routermodule.forchild(rout","routing.module.t","sourc","src/app/pages/login/login","support","svg","zoom"],"modules/OwnTaskPageModule.html":["angular/common","angular/cor","angular/form","browser","class","commonmodul","declar","export","file","formsmodul","import","info","ionic/angular","ionicmodul","match","modul","ngmodul","out","owntaskpag","owntaskpagemodul","owntaskpageroutingmodul","reset","result","routing.modul","sourc","src/app/pages/own","support","svg","task","task.module.t","task.pag","task/own","zoom"],"modules/OwnTaskPageRoutingModule.html":["angular/cor","angular/rout","browser","class","compon","const","export","file","import","info","match","modul","ngmodul","out","owntaskpag","owntaskpageroutingmodul","path","reset","result","rout","routermodul","routermodule.forchild(rout","routing.module.t","sourc","src/app/pages/own","support","svg","task","task.pag","task/own","zoom"],"modules/RoomMembersPageModule.html":["angular/common","angular/cor","angular/form","browser","class","commonmodul","declar","export","file","formsmodul","import","info","ionic/angular","ionicmodul","match","member","members.module.t","members.pag","members/room","modul","ngmodul","out","reset","result","room","roommemberspag","roommemberspagemodul","roommemberspageroutingmodul","routing.modul","sourc","src/app/pages/room","support","svg","zoom"],"modules/RoomMembersPageRoutingModule.html":["angular/cor","angular/rout","browser","class","compon","const","export","file","import","info","match","member","members.pag","members/room","modul","ngmodul","out","path","reset","result","room","roomid/:companyid","roommemberspag","roommemberspageroutingmodul","rout","routermodul","routermodule.forchild(rout","routing.module.t","sourc","src/app/pages/room","support","svg","zoom"],"modules/SettingPageModule.html":["angular/common","angular/cor","angular/form","browser","class","commonmodul","declar","export","file","formsmodul","import","info","ionic/angular","ionicmodul","match","modul","ngmodul","out","reset","result","routing.modul","set","setting.pag","settingpag","settingpagemodul","settingpageroutingmodul","sourc","src/app/pages/setting/setting.module.t","support","svg","zoom"],"modules/SettingPageRoutingModule.html":["angular/cor","angular/rout","browser","class","compon","const","export","file","import","info","match","modul","ngmodul","out","path","reset","result","rout","routermodul","routermodule.forchild(rout","routing.module.t","setting.pag","settingpag","settingpageroutingmodul","sourc","src/app/pages/setting/set","support","svg","zoom"],"modules/SharedModule.html":["addpersonmodalcompon","addroommodalcompon","addtaskmodalcompon","angular/common","angular/cor","angular/form","browser","class","commonmodul","component/modal/add","component/modal/delet","component/modal/edit","component/no","content.compon","content/no","declar","deletetaskmodalcompon","editprofilemodalcompon","entrycompon","export","file","formsmodul","imagepick","import","info","ionic","ionic/angular","ionicmodul","logic.servic","logic/shar","match","modal.compon","modal/add","modal/delet","modal/edit","modul","native/imag","ngmodul","nocontentcompon","out","pages/task/component/add","person","picker/ngx","profil","provid","reactiveformsmodul","reset","result","room","service/session.servic","sessionservic","sharedlogicservic","sharedmodul","sourc","src/app/shared/shared.module.t","support","svg","task","zoom"],"modules/SignupPageModule.html":["angular/common","angular/cor","angular/form","browser","class","commonmodul","declar","export","file","formsmodul","import","info","ionic/angular","ionicmodul","logic.servic","logic/signup","match","modul","ngmodul","out","provid","reactiveformsmodul","reset","result","routing.modul","shared/shared.modul","sharedmodul","signup","signup.pag","signuplogicservic","signuppag","signuppagemodul","signuppageroutingmodul","sourc","src/app/pages/signup/signup.module.t","support","svg","zoom"],"modules/SignupPageRoutingModule.html":["angular/cor","angular/rout","browser","class","compon","const","export","file","import","info","match","modul","ngmodul","out","path","reset","result","rout","routermodul","routermodule.forchild(rout","routing.module.t","signup.pag","signuppag","signuppageroutingmodul","sourc","src/app/pages/signup/signup","support","svg","zoom"],"modules/TabsPageModule.html":["angular/common","angular/cor","angular/form","browser","class","commonmodul","declar","export","file","formsmodul","import","info","ionic/angular","ionicmodul","match","modul","ngmodul","out","reset","result","routing.modul","sourc","src/app/pages/tabs/tabs.module.t","support","svg","tab","tabs.pag","tabspag","tabspagemodul","tabspageroutingmodul","zoom"],"modules/TaskDetailPageModule.html":["angular/common","angular/cor","angular/form","browser","class","commonmodul","declar","detail","detail.module.t","detail.pag","detail/task","export","file","formsmodul","import","info","ionic/angular","ionicmodul","match","modul","ngmodul","out","reset","result","routing.modul","shared/shared.modul","sharedmodul","sourc","src/app/pages/task","support","svg","task","taskdetailpag","taskdetailpagemodul","taskdetailpageroutingmodul","zoom"],"modules/TaskDetailPageRoutingModule.html":["angular/common","angular/cor","angular/rout","browser","class","commonmodul","compon","const","detail","detail.pag","detail/task","export","extraopt","file","full","id","id/:seg","import","info","match","modul","ngmodul","out","path","pathmatch","redirectto","reset","result","rout","routermodul","routermodule.forchild(rout","routing.module.t","sourc","src/app/pages/task","support","svg","task","taskdetailpag","taskdetailpageroutingmodul","zoom"],"modules/TaskPageModule.html":["angular/common","angular/cor","angular/form","browser","class","commonmodul","declar","export","file","formsmodul","import","info","ionic/angular","ionicmodul","logic/task.log","match","modul","ngmodul","out","provid","reset","result","routing.modul","service/task.servic","sourc","src/app/pages/task/task.module.t","support","svg","task","task.pag","tasklog","taskpag","taskpagemodul","taskpageroutingmodul","taskservic","zoom"],"modules/TaskPageRoutingModule.html":["angular/cor","angular/rout","browser","class","compon","const","export","file","id","import","info","match","modul","ngmodul","out","path","reset","result","rout","routermodul","routermodule.forchild(rout","routing.module.t","sourc","src/app/pages/task/task","support","svg","task.pag","taskpag","taskpageroutingmodul","zoom"],"components/AddPersonModalComponent.html":["0","1","add","addpersonmodalcompon","addpersontotask","angular/cor","app","array","arrayselectedpersonid","cancelsearch","cancelsearch(ev","changecheckus","changecheckuser(memb","checknotassignmemb","checknotassignmember(companymemb","class","clearsearch","clearsearch(ev","companyid","companymemb","companymember.id","companymembers.filter((companymemb","compon","console.log('cancelsearch","console.log('clearsearch","const","constructor","constructor(modalctrl","customev","dismiss","dismissmod","ev","ev.detail.valu","export","fals","file","implement","import","indextargetid","info","inputsearch","inputsearch(ev","ionic/angular","item","item.id","logic","logic/task.log","map","match","member","member.id","member.model","membertask","metadata","method","modal","modal.component.html","modal.component.scss","modal.component.t","modal/add","modalcontrol","modalctrl","model/task","ngoninit","notassignmemb","null","oninit","person","pipe(map((result","privat","properti","result","result.item","return","roomid","roommemb","roommember.id","roommembers.some((roommemb","rxjs/oper","selector","sourc","src/app/pages/task/component/add","string","styleurl","subscrib","subscribe((item","success","targetindex","tasklog","templateurl","this.arrayselectedpersonid","this.arrayselectedpersonid.findindex(item","this.arrayselectedpersonid.push(member.id","this.arrayselectedpersonid.splice(indextargetid","this.checknotassignmember(this.notassignmemb","this.logic.addmemberstoanyroom(this.arrayselectedpersonid","this.logic.fetchcompanymember(this.companyid","this.memb","this.members.findindex(item","this.members[targetindex].check","this.modalctrl.dismiss","this.notassignmemb","this.roomid","true","user","void"],"components/AddRoomModalComponent.html":["abstractcontrol","add","addroommodalcompon","angular/cor","angular/form","app","class","compon","constructor","constructor(modalctrl","createitem","descriptionitem","dismissmod","export","file","formcontrol","formgroup","implement","import","info","ionic/angular","match","metadata","method","modal","modal.component.html","modal.component.scss","modal.component.t","modal/add","modalcontrol","modalctrl","nameitem","new","ngoninit","oninit","privat","properti","result","return","room","roomitemgroup","selector","sourc","src/app/shared/component/modal/add","styleurl","templateurl","this.modalctrl.dismiss","this.modalctrl.dismiss(this.roomitemgroup.valu","this.roomitemgroup.get('descriptionitem","this.roomitemgroup.get('nameitem","valid","validators.requir","void"],"components/AddTaskModalComponent.html":["1).tostr","add","addtaskmodalcompon","angular/cor","angular/form","app","changed","chargepersonid","class","compon","console.log('changed","const","constructor","constructor(modalctrl","createtaskitem","currentd","currentdate.getfullyear","currentdate.getfullyear()).tostr","currentdate.toisostr","currentisostr","date","descriptionitem","dismissmod","export","file","formcontrol","formgroup","implement","import","info","ionic/angular","listroomgroupsqueri","match","maxyear","metadata","method","minyear","modal","modal.component.html","modal.component.scss","modal.component.t","modal/add","modalcontrol","modalctrl","nameitem","new","ngoninit","oninit","privat","properti","result","return","room","roommemb","scheduledateitem","selector","sourc","src/app/shared/component/modal/add","src/app/shared/service/amplify.servic","string","styleurl","task","taskdetail","taskform","templateurl","this.currentisostr","this.maxyear","this.minyear","this.modalctrl.dismiss","this.modalctrl.dismiss(this.taskform.valu","this.room","this.taskdetail","this.taskdetail.chargeperson.id","this.taskdetail.descript","this.taskdetail.room","this.taskdetail.scheduled","this.taskdetail.titl","this.taskform.patchvalu","this.userid","undefin","userid","userlist","valid","validators.requir","void"],"components/AppComponent.html":["angular/cor","app","app.component.html","app.component.scss","appcompon","bar/ngx","class","compon","constructor","constructor(platform","export","file","import","info","initializeapp","ionic","ionic/angular","match","metadata","method","native/splash","native/statu","platform","privat","result","return","root","screen/ngx","selector","sourc","splashscreen","src/app/app.component.t","statusbar","styleurl","templateurl","this.initializeapp","this.platform.ready().then","this.splashscreen.hid","this.statusbar.styledefault","void"],"components/CommentPage.html":["angular/cor","app","class","comment","comment.page.html","comment.page.scss","commentpag","compon","constructor","export","file","implement","import","info","match","metadata","ngoninit","oninit","result","selector","sourc","src/app/pages/comment/comment.page.t","styleurl","templateurl"],"components/ConfirmPage.html":["angular/cor","angular/form","angular/rout","app","class","compon","confirm","confirm.page.html","confirm.page.scss","confirmform","confirmlog","confirmnumb","confirmpag","confirmsignup","confirmtargetemail","console.log('resendsignup","constructor","constructor(log","export","file","formcontrol","formgroup","implement","import","info","logic","logic/confirm.log","match","metadata","method","new","ngoninit","oninit","privat","properti","resendsignup","result","return","router","selector","sourc","src/app/pages/confirm/confirm.page.t","string","styleurl","templateurl","this.confirmform.get('confirmnumber').value).subscrib","this.confirmtargetemail","this.logic.sendconfirmuser(this.confirmtargetemail","this.router.getcurrentnavigation().extras.state.data.email","this.router.navigate(['/login","valid","validators.requir","void"],"components/DeleteTaskModalComponent.html":["angular/cor","app","class","compon","constructor","constructor(modalctrl","delet","deletetargettask","deletetargettask(taskitem","deletetaskmodalcompon","export","file","implement","import","info","ionic/angular","match","metadata","method","modal","modal.component.html","modal.component.scss","modal.component.t","modal/delet","modalcontrol","modalctrl","ngoninit","oncancel","oninit","privat","properti","result","return","selector","sourc","src/app/shared/component/modal/delet","styleurl","task","templateurl","this.modalctrl.dismiss","this.modalctrl.dismiss(taskitem","void"],"components/EditProfileModalComponent.html":["0","1","30","400","angular/cor","angular/form","app","class","compon","console.log('respons","console.log(result","const","constructor","constructor(modalctrl","dismissmod","edit","editprofileform","editprofilemodalcompon","email","export","file","formcontrol","formgroup","height","homelog","iconimag","id","imagepick","implement","import","info","input","ionic","ionic/angular","logic","match","maximumimagescount","metadata","method","modal","modal.component.html","modal.component.scss","modal.component.t","modal/edit","modalcontrol","modalctrl","native/imag","new","ngoninit","oninit","option","outputtyp","pages/home/logic/home.log","picker/ngx","pickerimag","positionnam","privat","profil","properti","qualiti","re","result","return","saveprofil","selector","sourc","src/app/shared/component/modal/edit","statu","string","styleurl","subscrib","subscribe((r","targetemail","tel","templateurl","then((result","this.editprofileform.patchvalu","this.email","this.imagepicker.getpictures(opt","this.logic.createuser(this.editprofileform","this.logic.updateuser(this.editprofileform","this.modalctrl.dismiss","this.statu","this.titl","this.user.email","this.user.id","this.user.positionnam","this.user.tel","this.user.usernam","this.userid","titl","type","user","userid","usernam","valid","validators.email","validators.requir","void","width"],"components/HomePage.html":["0","alreadi","angular/cor","app","async","attribut","await","boolean","catcherror","class","compon","componentprop","concatmap","const","constructor","constructor(log","data","dismissobserv","editprofilemodalcompon","email","email_verifi","export","file","filter","flatmap","from(modal.ondiddismiss","home","home.page.html","home.page.scss","homelog","homepag","implement","import","info","ionic/angular","item","items.length","logic","logic/home.log","map","match","metadata","method","modal","modal.compon","modal.pres","modal/edit","modalcontrol","modalctrl","new","ngoninit","of('alreadi","oninit","pipe(concatmap","pipe(filt","pipe(flatmap","pipe(map((attribut","presentregistrationus","privat","profil","properti","result","return","rxj","rxjs/oper","selector","sourc","src/app/pages/home/home.page.t","src/app/shared/component/modal/edit","statu","string","styleurl","sub","subscribe((data","templateurl","this.attribut","this.attributes.email","this.attributes.sub","this.logic.checkregistrationuser(this.attribut","this.logic.fetchcurrentus","this.modalctrl.cr","this.presentregistrationus","userid","void"],"components/ListRoomComponent.html":["0","addroommodalcompon","angular/cor","angular/rout","app","array","async","await","class","companyid","compon","concatmap","const","constructor","constructor(modalctrl","currentuserid","data","data.length","data.sub","default","deleteroom","deleteroom(roomid","deleteroomitem","deleteroomitem(roomid","export","file","from(modal.ondiddismiss","homelog","implement","import","info","ionic/angular","list","listroomcompon","logic","logic/home.log","map","match","metadata","method","modal","modal.compon","modal.pres","modal/add","modalcontrol","modalctrl","navigatetotask","navigatetotask(room","ngoninit","observ","oninit","pipe((concatmap","pipe(concatmap","pipe(concatmap((data","pipe(concatmap((room","pipe(map((data","pipe(switchmap((data","presentaddroomitem","presentaddroomitem(companyid","privat","properti","removeownfromroom","removeownfromroom(roomid","respons","responselistroomgroupsqueryitem","result","return","room","room.component.html","room.component.scss","room.component.t","room.id","room/list","roomgroupsitem","router","rxj","rxjs/oper","selector","service/reponse/response.model","shared/component/modal/add","sourc","src/app/pages/home/componet/list","string","styleurl","subscribe((data","subscribe((respons","subscribe((result","switchmap","takucloudcon","templateurl","this.currentuserid","this.deleteroomitem(roomid","this.logic.createroom(data","this.logic.createuserroomgroup(this.currentuserid","this.logic.deleteroomitem(roomid","this.logic.fetchcurrentus","this.logic.fetchroomlist(this.currentuserid","this.logic.fetchroommembers(roomid","this.logic.removemefromroom(roomid","this.logic.setexitsroomanduser(data","this.modalctrl.cr","this.removeownfromroom(roomid","this.roomgroupsitem","this.router.navigate(['task","valu","void"],"components/LoginPage.html":["angular/cor","angular/form","angular/rout","app","class","compon","const","constructor","constructor(log","email","export","file","formcontrol","formgroup","implement","import","info","logic","logic.servic","logic/login","login","login.page.html","login.page.scss","loginform","loginlog","loginpag","match","metadata","method","navigatetosignup","new","ngoninit","oninit","password","password).subscrib","privat","properti","readonli","result","return","router","selector","sourc","src/app/pages/login/login.page.t","styleurl","templateurl","this.logic.sendlogininfo(email","this.loginform.get('email').valu","this.loginform.get('password').valu","this.router.navig","this.router.navigate(['/signup","valid","validators.email","validators.requir","void"],"components/NoContentComponent.html":["angular/cor","app","class","compon","const","constructor","content","content.component.html","content.component.scss","content.component.t","content/no","export","file","implement","import","info","input","item.valu","match","metadata","name","ngoninit","nocontentcompon","oninit","pagekind","properti","result","room","selector","sourc","src/app/shared/component/no","string","styleurl","task","templateurl","this.pagekind","this.viewvalu","type","valu","viewkind","viewkind.find(item","viewvalu"],"components/OwnTaskPage.html":["activ","afterviewinit","angular/cor","angular/rout","app","array","async","await","backdropdismiss","class","compon","concatmap","const","constructor","constructor(rout","cssclass","custom","data","detail","export","file","implement","import","info","ionic/angular","item","item.task.id","load","loading.ondiddismiss","loading.pres","loadingcontrol","loadingctrl","logic","logic/own","map","match","messag","metadata","method","navigatetotaskdetail","navigatetotaskdetail(item","ngafterviewinit","ngoninit","oninit","owntaskitem","owntasklog","owntaskpag","pipe(concatmap","pipe(concatmap((currentuserid","pipe(map(result","presentload","privat","properti","result","result.sub","return","role","router","rxjs/oper","selector","sourc","src/app/pages/own","styleurl","subscribe((item","task","task.log","task.page.html","task.page.scss","task.page.t","task/own","templateurl","this.loadingctrl.cr","this.logic.fetchcurrentus","this.logic.gettaskchargeitems(currentuserid","this.logic.settaskperroom(item","this.owntaskitem","this.router.navigate(['task","transluc","true","void"],"components/RoomMembersPage.html":["activatedrout","activeeditmod","addmemberonroom","addpersonmodalcompon","angular/common","angular/cor","angular/rout","app","array","async","await","checknotassignmemb","checknotassignmember(companymemb","class","companyid","companymemb","companymember.id","companymembers.filter((companymemb","compon","componentprop","concatmap","console.log('activeeditmod","console.log('searchbarがnul","const","constructor","constructor(log","currentus","currentuserid","customev","data","data.result","dismiss","ev.detail.valu","export","file","gobacktoroom","implement","import","info","ionic/angular","item","locat","logic","logic/room","map","match","member","members.log","members.page.html","members.page.scss","members.page.t","members/room","metadata","method","modal","modal.compon","modal.ondiddismiss().then","modal.pres","modal/add","modalcontrol","modalctrl","namequeri","ngoninit","notassignmemb","null","number","oninit","person","pipe(concatmap","pipe(concatmap((result","pipe(map((currentuserid","pipe(map((memb","pipe(map((result","privat","properti","result","result.item","return","room","roomid","roommemb","roommember.id","roommembers.some((roommemb","roommemberslog","roommemberspag","rout","rxjs/oper","searchroommemb","searchroommembers(ev","selector","sourc","src/app/pages/room","string","styleurl","subscrib","subscribe((item","task/component/add","templateurl","this.checknotassignmember(this.companymemb","this.companyid","this.companymemb","this.currentus","this.currentuserid","this.location.back","this.logic.fetchcompanymember(this.companyid","this.logic.fetchcurrentuser(this.currentuserid","this.logic.fetchcurrentuserid","this.logic.fetchroommembergroup(this.roomid","this.logic.fetchroommembers(this.roomid","this.logic.setroommembers(item","this.logic.setroommembers(result","this.modalctrl.cr","this.notassignmemb","this.roomid","this.roommemb","this.roommembers.unshift(this.currentus","this.route.snapshot.parammap.get('companyid","this.route.snapshot.parammap.get('roomid","void"],"components/SettingPage.html":["__typenam","actionlogout","actionsheetcontrol","actionsheetctrl","alreadi","angular/cor","angular/rout","app","async","author","await","boolean","button","cancel","class","companyid","compon","componentprop","concatmap","confirmlogout","const","constructor","constructor(actionsheetctrl","createdat","cssclass","custom","data","destruct","dismissobserv","editprofilemodalcompon","email","export","file","flatmap","from(modal.ondiddismiss","handler","id","implement","import","info","interfac","ionic/angular","logic","logic/setting.log","logoutactionsheet","logoutactionsheet.pres","match","metadata","method","modal","modal.compon","modal.pres","modal/edit","modalcontrol","modalctrl","ngoninit","oninit","ownus","pipe(concatmap","pipe(flatmap((result","positionnam","presenteditmod","privat","profil","promis","properti","regist","result","return","role","router","rxj","rxjs/oper","selector","set","setting.page.html","setting.page.scss","settinglog","settingpag","shared/component/modal/edit","sourc","src/app/pages/setting/setting.page.t","statu","string","styleurl","subscrib","subscribe((data","templateurl","text","this.actionlogout","this.actionsheetctrl.cr","this.logic.fetchcurrentus","this.logic.fetchuserinfo(result.usernam","this.logic.signout","this.modalctrl.cr","this.router.navigate(['/login","this.us","updatedat","user","usernam","void"],"components/SignupPage.html":["angular/common","angular/cor","angular/form","angular/rout","app","checkpassword","checkpasswords(group","class","compon","confirmpassword","confirmpasswordform","const","constructor","constructor(rout","data","email","export","file","formcontrol","formgroup","gobacktologin","group.get('confirmpasswordform').valu","group.get('passwordform').valu","implement","import","info","interfaces/signup.interfac","interfacesignup","locat","logic","logic.servic","logic/signup","match","metadata","method","new","ngoninit","notsam","null","oninit","onsubmit","password","passwordform","privat","properti","result","return","router","selector","signup","signup.page.html","signup.page.scss","signupform","signuplogicservic","signuppag","sourc","src/app/pages/signup/signup.page.t","state","styleurl","subscrib","templateurl","this.checkpassword","this.location.back","this.logic.entrysignupuser(valu","this.router.navigate(['/confirm","this.signupform.invalid","this.signupform.valu","true","valid","validators.email","validators.minlength(8","validators.requir","valu","value.email","void"],"components/TabsPage.html":["angular/cor","app","class","compon","constructor","export","file","import","info","match","metadata","result","selector","sourc","src/app/pages/tabs/tabs.page.t","styleurl","tab","tabs.page.html","tabs.page.scss","tabspag","templateurl"],"components/TaskDetailPage.html":["0","1","10","2000","50","actionsheetcontrol","actionsheetctrl","activ","activatedrout","activeactionsheet","activeactionsheet.pres","addtaskmodalcompon","alert","alert.pres","alertcontrol","alertctrl","allowedit","angular/common","angular/cor","angular/rout","app","array","arrayimagebase64data","async","await","button","camera","camera.getphoto","cameraresulttyp","cameraresulttype.dataurl","cancel","capacitor/cor","child","class","comment","compon","componentprop","concatmap","const","constructor","constructor(loc","content","cssclass","currentuserinfo","custom","data","data.item","data.key","default","deleteimag","deleteimage(indextarget","deletetask","deletetask(taskdetail","destruct","detail","detail.log","detail.page.html","detail.page.scss","detail.page.t","detail/task","dismissobserv","done","doneactionsheet","doneactionsheet.pres","donetask","donetask(taskdetail","durat","export","fals","file","filter","fragmentcom","from(modal.ondiddismiss","from(this.platform.readi","from(this.presentdonetoast","from(this.presentmovetask","gobacktoroom","handler","header","htmlelement","imag","implement","import","info","info.interfac","initializeapp","ioncont","ionic/angular","item","link","listmessagesqueri","listroomgroupsqueri","locat","logic","logic/task","map","match","messag","metadata","method","modal","modal.compon","modal.pres","modal/add","modalcontrol","modalctrl","movetask","movetask(taskdetail","newmsg","ngafterviewinit","ngoninit","number","observ","oninit","pipe(concatmap","pipe(concatmap((data","pipe(concatmap((result","pipe(filt","pipe(map((data","pipe(tap","pipe(toarray","platform","plugin","presentactionsheet","presentactionsheet(taskdetail","presentalert","presentdonetoast","presentmodaledittask","presentmodaledittask(taskdetail","presentmovetask","presenttoast","privat","promis","promptlabelcancel","promptlabelhead","promptlabelphoto","promptlabelpictur","properti","qualiti","readonli","res.sub","result","result.item","resulttyp","return","role","roommemb","rout","rxj","rxjs/oper","scroll","segment","selectfil","selector","sendmessag","sourc","src/app/api.servic","src/app/pages/task","src/app/shared/component/modal/add","src/app/shared/service/amplify.servic","static","string","styleurl","subscrib","subscribe((data","subscribe((result","takephoto","tap","task","task/interface/curr","taskdetail","taskdetaillog","taskdetailpag","taskid","templateurl","text","this.actionsheetctrl.cr","this.alertctrl.cr","this.arrayimagebase64data","this.arrayimagebase64data.length","this.arrayimagebase64data.push(image.dataurl","this.arrayimagebase64data.splice(indextarget","this.deletetask(taskdetail","this.donetask(taskdetail","this.initializeapp","this.location.back","this.logic.fetchanytask(taskdetail.id","this.logic.fetchanytask(this.taskid","this.logic.fetchcurrentuserinfo().subscribe((r","this.logic.fetchmemberlistonroom(this.taskdetail.roomid","this.logic.fetchmessagepertask(this.taskid","this.logic.getstorage(result","this.logic.oncreatemessagelisten","this.logic.sendnewmessage(this.taskid","this.logic.updatetaskitem(taskdetail","this.logic.updatetasktoroom(data","this.logic.uploadfile(this.arrayimagebase64data","this.messag","this.modalctrl.cr","this.movetask(taskdetail","this.newmsg","this.presentmodaledittask(taskdetail","this.roommemb","this.route.fragment.subscribe((result","this.route.snapshot.parammap.get('id","this.route.snapshot.parammap.get('seg","this.scroll.scrolltoanchor(result","this.seg","this.taskdetail","this.taskid","this.toastctrl.cr","this.userid","toarray","toast","toast.pres","toastcontrol","toastctrl","true","undefin","user","userid","uuid","v4","valu","viewchild","viewchild('com","viewchild(ioncont","viewportscrol","void"],"components/TaskPage.html":["0","1)[0","10","2000","actionsheet","actionsheet.pres","actionsheetcontrol","actionsheetctrl","activ","activatedrout","activesorttaskitem","activetaskitem","addcommenttotaskdetail","addcommenttotaskdetail(task","addtaskmodalcompon","angular/common","angular/cor","angular/rout","app","array","async","await","boolean","button","cancel","class","comment","companyid","companymemb","companyus","compon","componentprop","concatmap","console.log('taskactiveitem","const","constructor","constructor(rout","currentuseremail","currentuserid","currentuserinfo","customev","data","data.activetaskitems.sort(this.logic.comparetaskarray","data.companyuser.item","data.donetaskitem","data.room","data.roommemb","deletetask","deletetask(task","destruct","detail","dismissobserv","donetask","donetask(taskformitem","donetaskitem","durat","ev.detail.complet","ev.detail.valu","export","fals","file","flatmap","forkjoin","form.model","fragment","from(modal.ondiddismiss","from(this.presentdonetoast","from(this.taskactiveitem","getroomqueri","getuserqueri","gobacktoroom","handler","implement","import","info","info.interfac","interface/curr","interfacetask","ionic/angular","ionic/cor","ionviewwillent","ischeckfabbutton","isreord","item","itemmov","itemreordereventdetail","items.sort(this.logic.comparetaskarray","listusersqueri","locat","logic","logic/task.log","map","match","member","member.model","messag","metadata","method","modal","modal.compon","modal.pres","modal/add","modalcontrol","modalctrl","model/task","navigatetoroommemb","navigatetotaskdetail","navigatetotaskdetail(task","ngoninit","number","of(this.taskactiveitem","oninit","pipe(concatmap","pipe(concatmap((indexarray","pipe(concatmap((taskactiveitem","pipe(flatmap","pipe(map","pipe(map((r","pipe(map((us","pipe(switchmap","pipe(tap","presentaddtask","presentconfirmdelet","presentconfirmdelete(task","presentdonetoast","presenttoast","privat","promis","properti","reordertask","reordertask(ev","res.email","res.sub","result","return","role","room","roomid","roommemb","rout","router","rxj","rxjs/oper","segment","segmentchang","segmentchanged(ev","selector","shared/component/modal/add","sourc","src/app/interfaces/task.interfac","src/app/pages/task/task.page.t","src/app/shared/model/task","src/app/shared/service/amplify.servic","string","styleurl","subscrib","subscribe((data","subscribe((item","subscribe((result","switchmap","tap","task","task.id","task.page.html","task.page.scss","taskactiveitem","taskdoneitem","taskformdata","taskformmodel","tasklog","taskpag","templateurl","text","this.actionsheetctrl.cr","this.companyid","this.companymemb","this.currentuseremail","this.currentuserid","this.deletetask(task","this.isreord","this.location.back","this.logic.createtasktoroom(this.taskformdata","this.logic.deletetaskitem(task.id","this.logic.fetchactivetaskperroom(this.roomid","this.logic.fetchcompanymember(this.user.companyid","this.logic.fetchcurrentuserinfo","this.logic.fetchdonetaskperroom(this.roomid","this.logic.fetchdonetaskperroom(this.roomid).subscribe((data","this.logic.fetchmemberlistonroom(this.roomid).pipe(map","this.logic.fetchroominfo(this.roomid","this.logic.fetchuserinfofromamplify(this.currentuserid","this.logic.getindexnewarray(this.taskactiveitem","this.logic.updatedonetaskitem(taskformitem","this.logic.updatestatustaskitems(this.taskactiveitem","this.logic.updatetaskitempriority(indexarray","this.modalctrl.cr","this.room","this.roomid","this.roommemb","this.route.snapshot.parammap.get('id","this.router.navigate(['room","this.router.navigate(['task","this.seg","this.taskactiveitem","this.taskactiveitems.length","this.taskactiveitems.splice(ev.detail.from","this.taskactiveitems.splice(ev.detail.to","this.taskdoneitem","this.taskformdata","this.toastctrl.cr","this.us","toast","toast.pres","toastcontrol","toastctrl","true","user","user.companyid","userid","void"],"injectables/APIService.html":["__typenam","_null","amplify/api","angular/cor","api","api.graphql","apiservic","array","async","attachmenturi","attributeexist","attributetyp","author","authorid","aw","await","beginswith","between","binari","binaryset","bool","boolean","chargeperson","chargepersonid","chargetask","class","compani","companyid","companymemb","condit","const","contain","content","createcompani","createcompany($input","createcompany(input","createcompanyinput","createcompanymut","createdat","createmessag","createmessage($input","createmessage(input","createmessageinput","createmessagemut","createroom","createroom($input","createroom(input","createroomgroup","createroomgroup($input","createroomgroup(input","createroomgroupinput","createroomgroupmut","createroominput","createroommut","createtask","createtask($input","createtask(input","createtaskgroup","createtaskgroup($input","createtaskgroup(input","createtaskgroupinput","createtaskgroupmut","createtaskinput","createtaskmut","createus","createuser($input","createuser(input","createuserinput","createusermut","deletecompani","deletecompany($input","deletecompany(input","deletecompanyinput","deletecompanymut","deletemessag","deletemessage($input","deletemessage(input","deletemessageinput","deletemessagemut","deleteroom","deleteroom($input","deleteroom(input","deleteroomgroup","deleteroomgroup($input","deleteroomgroup(input","deleteroomgroupinput","deleteroomgroupmut","deleteroominput","deleteroommut","deletetask","deletetask($input","deletetask(input","deletetaskgroup","deletetaskgroup($input","deletetaskgroup(input","deletetaskgroupinput","deletetaskgroupmut","deletetaskinput","deletetaskmut","deleteus","deleteuser($input","deleteuser(input","deleteuserinput","deleteusermut","descript","domain","email","enum","eq","export","file","filter","ge","getcompani","getcompany($id","getcompany(id","getcompanyqueri","getmessag","getmessage($id","getmessage(id","getmessagequeri","getroom","getroom($id","getroom(id","getroomgroup","getroomgroup($id","getroomgroup(id","getroomgroupqueri","getroomqueri","gettask","gettask($id","gettask(id","gettaskgroup","gettaskgroup($id","gettaskgroup(id","gettaskgroupqueri","gettaskqueri","getus","getuser($id","getuser(id","getuserqueri","gqlapiserviceargu","gqlapiservicearguments.condit","gqlapiservicearguments.filt","gqlapiservicearguments.limit","gqlapiservicearguments.nexttoken","graphql","graphqloper","graphqloperation(stat","graphqlresult","gt","iconimag","id","import","info","inject","input","int","interfac","issent","item","le","limit","list","listcompani","listcompanys($filt","listcompanys(filt","listcompanysqueri","listmessag","listmessages($filt","listmessages(filt","listmessagesqueri","listroom","listroomgroup","listroomgroups($filt","listroomgroups(filt","listroomgroupsqueri","listrooms($filt","listrooms(filt","listroomsqueri","listtask","listtaskgroup","listtaskgroups($filt","listtaskgroups(filt","listtaskgroupsqueri","listtasks($filt","listtasks(filt","listtasksqueri","listus","listusers($filt","listusers(filt","listusersqueri","lt","map","match","messag","method","modelattributetyp","modelbooleaninput","modelcompanyconditioninput","modelcompanyconnect","modelcompanyfilterinput","modelidinput","modelintinput","modelmessageconditioninput","modelmessageconnect","modelmessagefilterinput","modelroomconditioninput","modelroomconnect","modelroomfilterinput","modelroomgroupconditioninput","modelroomgroupconnect","modelroomgroupfilterinput","modelsizeinput","modelstringinput","modeltaskconditioninput","modeltaskconnect","modeltaskfilterinput","modeltaskgroupconditioninput","modeltaskgroupconnect","modeltaskgroupfilterinput","modeluserconditioninput","modeluserconnect","modeluserfilterinput","mutat","name","ne","nexttoken","notcontain","null","number","numberset","observ","oncreatecompani","oncreatecompanylisten","oncreatecompanysubscript","oncreatemessag","oncreatemessagelisten","oncreatemessagesubscript","oncreateroom","oncreateroomgroup","oncreateroomgrouplisten","oncreateroomgroupsubscript","oncreateroomlisten","oncreateroomsubscript","oncreatetask","oncreatetaskgroup","oncreatetaskgrouplisten","oncreatetaskgroupsubscript","oncreatetasklisten","oncreatetasksubscript","oncreateus","oncreateuserlisten","oncreateusersubscript","ondeletecompani","ondeletecompanylisten","ondeletecompanysubscript","ondeletemessag","ondeletemessagelisten","ondeletemessagesubscript","ondeleteroom","ondeleteroomgroup","ondeleteroomgrouplisten","ondeleteroomgroupsubscript","ondeleteroomlisten","ondeleteroomsubscript","ondeletetask","ondeletetaskgroup","ondeletetaskgrouplisten","ondeletetaskgroupsubscript","ondeletetasklisten","ondeletetasksubscript","ondeleteus","ondeleteuserlisten","ondeleteusersubscript","onupdatecompani","onupdatecompanylisten","onupdatecompanysubscript","onupdatemessag","onupdatemessagelisten","onupdatemessagesubscript","onupdateroom","onupdateroomgroup","onupdateroomgrouplisten","onupdateroomgroupsubscript","onupdateroomlisten","onupdateroomsubscript","onupdatetask","onupdatetaskgroup","onupdatetaskgrouplisten","onupdatetaskgroupsubscript","onupdatetasklisten","onupdatetasksubscript","onupdateus","onupdateuserlisten","onupdateusersubscript","positionnam","prioriti","promis","properti","providedin","queri","regist","respons","response.data.createcompani","response.data.createmessag","response.data.createroom","response.data.createroomgroup","response.data.createtask","response.data.createtaskgroup","response.data.createus","response.data.deletecompani","response.data.deletemessag","response.data.deleteroom","response.data.deleteroomgroup","response.data.deletetask","response.data.deletetaskgroup","response.data.deleteus","response.data.getcompani","response.data.getmessag","response.data.getroom","response.data.getroomgroup","response.data.gettask","response.data.gettaskgroup","response.data.getus","response.data.listcompani","response.data.listmessag","response.data.listroom","response.data.listroomgroup","response.data.listtask","response.data.listtaskgroup","response.data.listus","response.data.updatecompani","response.data.updatemessag","response.data.updateroom","response.data.updateroomgroup","response.data.updatetask","response.data.updatetaskgroup","response.data.updateus","result","return","room","roomgroup","roomid","root","scheduled","size","sourc","src/app/api.service.t","statement","statu","string","stringset","subscript","subscriptionrespons","task","taskgroup","taskid","tel","titl","ts","type","updatecompani","updatecompany($input","updatecompany(input","updatecompanyinput","updatecompanymut","updatedat","updatemessag","updatemessage($input","updatemessage(input","updatemessageinput","updatemessagemut","updateroom","updateroom($input","updateroom(input","updateroomgroup","updateroomgroup($input","updateroomgroup(input","updateroomgroupinput","updateroomgroupmut","updateroominput","updateroommut","updatetask","updatetask($input","updatetask(input","updatetaskgroup","updatetaskgroup($input","updatetaskgroup(input","updatetaskgroupinput","updatetaskgroupmut","updatetaskinput","updatetaskmut","updateus","updateuser($input","updateuser(input","updateuserinput","updateusermut","user","userid","usernam","valu","zen"],"injectables/AddPersonLogic.html":["addpersonlog","angular/cor","class","constructor","export","file","import","info","inject","match","person.logic.t","providedin","result","root","sourc","src/app/pages/task/logic/add"],"injectables/AmplifyService.html":["__typenam","_null","amplify/api","amplify/api/lib/typ","amplifyservic","angular/cor","api","api.graphql","array","async","attachmenturi","attributeexist","attributetyp","author","authorid","aw","await","beginswith","between","binari","binaryset","bool","boolean","chargeperson","chargepersonid","chargetask","class","compani","companyid","companymemb","condit","const","contain","content","createcompani","createcompany($input","createcompany(input","createcompanyinput","createcompanymut","createdat","createmessag","createmessage($input","createmessage(input","createmessageinput","createmessagemut","createroom","createroom($input","createroom(input","createroomgroup","createroomgroup($input","createroomgroup(input","createroomgroupinput","createroomgroupmut","createroominput","createroommut","createtask","createtask($input","createtask(input","createtaskgroupinput","createtaskgroupmut","createtaskinput","createtaskmut","createus","createuser($input","createuser(input","createuserinput","createusermut","deletecompani","deletecompany($input","deletecompany(input","deletecompanyinput","deletecompanymut","deletemessag","deletemessage($input","deletemessage(input","deletemessageinput","deletemessagemut","deleteroom","deleteroom($input","deleteroom(input","deleteroomgroup","deleteroomgroup($input","deleteroomgroup(input","deleteroomgroupinput","deleteroomgroupmut","deleteroominput","deleteroommut","deletetask","deletetask($input","deletetask(input","deletetaskgroupinput","deletetaskgroupmut","deletetaskinput","deletetaskmut","deleteus","deleteuser($input","deleteuser(input","deleteuserinput","deleteusermut","descript","domain","email","enum","eq","export","file","filter","ge","getcompani","getcompany($id","getcompany(id","getcompanyqueri","getmessag","getmessage($id","getmessage(id","getmessagequeri","getroom","getroom($id","getroom(id","getroomgroupqueri","getroomqueri","gettask","gettask($id","gettask(id","gettaskgroupqueri","gettaskqueri","getus","getuser($id","getuser(id","getuserqueri","gqlapiserviceargu","gqlapiservicearguments.condit","gqlapiservicearguments.filt","gqlapiservicearguments.limit","gqlapiservicearguments.nexttoken","graphqloper","graphqloperation(stat","graphqlresult","gt","iconimag","id","import","info","inject","input","int","interfac","issent","item","le","limit","list","listcompani","listcompanys($filt","listcompanys(filt","listcompanysqueri","listmessag","listmessages($filt","listmessages(filt","listmessagesqueri","listroom","listroomgroup","listroomgroups($filt","listroomgroups(filt","listroomgroupsqueri","listrooms($filt","listrooms(filt","listroomsqueri","listtask","listtaskgroup","listtaskgroups($filt","listtaskgroups(filt","listtaskgroupsqueri","listtasks($filt","listtasks(filt","listtasksqueri","listus","listusers($filt","listusers(filt","listusersqueri","lt","map","match","member","messag","method","modelattributetyp","modelbooleaninput","modelcompanyconditioninput","modelcompanyconnect","modelcompanyfilterinput","modelidinput","modelintinput","modelmessageconditioninput","modelmessageconnect","modelmessagefilterinput","modelroomconditioninput","modelroomconnect","modelroomfilterinput","modelroomgroupconditioninput","modelroomgroupconnect","modelroomgroupfilterinput","modelsizeinput","modelstringinput","modeltaskconditioninput","modeltaskconnect","modeltaskfilterinput","modeltaskgroupconditioninput","modeltaskgroupconnect","modeltaskgroupfilterinput","modeluserconditioninput","modeluserconnect","modeluserfilterinput","mutat","name","ne","nexttoken","notcontain","null","number","numberset","observ","oncreatecompani","oncreatecompanylisten","oncreatecompanysubscript","oncreatemessag","oncreatemessagelisten","oncreatemessagesubscript","oncreateroom","oncreateroomgroupsubscript","oncreateroomlisten","oncreateroomsubscript","oncreatetask","oncreatetaskgroupsubscript","oncreatetasklisten","oncreatetasksubscript","oncreateus","oncreateuserlisten","oncreateusersubscript","ondeletecompani","ondeletecompanylisten","ondeletecompanysubscript","ondeletemessag","ondeletemessagelisten","ondeletemessagesubscript","ondeleteroom","ondeleteroomgroupsubscript","ondeleteroomlisten","ondeleteroomsubscript","ondeletetask","ondeletetaskgroupsubscript","ondeletetasklisten","ondeletetasksubscript","ondeleteus","ondeleteuserlisten","ondeleteusersubscript","onupdatecompani","onupdatecompanylisten","onupdatecompanysubscript","onupdatemessag","onupdatemessagelisten","onupdatemessagesubscript","onupdateroom","onupdateroomgroupsubscript","onupdateroomlisten","onupdateroomsubscript","onupdatetask","onupdatetaskgroupsubscript","onupdatetasklisten","onupdatetasksubscript","onupdateus","onupdateuserlisten","onupdateusersubscript","positionnam","prioriti","promis","properti","providedin","queri","regist","respons","response.data.createcompani","response.data.createmessag","response.data.createroom","response.data.createroomgroup","response.data.createtask","response.data.createus","response.data.deletecompani","response.data.deletemessag","response.data.deleteroom","response.data.deleteroomgroup","response.data.deletetask","response.data.deleteus","response.data.getcompani","response.data.getmessag","response.data.getroom","response.data.gettask","response.data.getus","response.data.listcompani","response.data.listmessag","response.data.listroom","response.data.listroomgroup","response.data.listtask","response.data.listtaskgroup","response.data.listus","response.data.updatecompani","response.data.updatemessag","response.data.updateroom","response.data.updatetask","response.data.updateus","result","return","room","roomgroup","roomid","root","scheduled","size","sourc","src/app/shared/service/amplify.service.t","statement","statu","string","stringset","subscript","subscriptionrespons","task","taskgroup","taskid","tel","titl","ts","type","updatecompani","updatecompany($input","updatecompany(input","updatecompanyinput","updatecompanymut","updatedat","updatemessag","updatemessage($input","updatemessage(input","updatemessageinput","updatemessagemut","updateroom","updateroom($input","updateroom(input","updateroomgroupinput","updateroomgroupmut","updateroominput","updateroommut","updatetask","updatetask($input","updatetask(input","updatetaskgroupinput","updatetaskgroupmut","updatetaskinput","updatetaskmut","updateus","updateuser($input","updateuser(input","updateuserinput","updateusermut","user","userid","usernam","valu","zen"],"injectables/AuthGuard.html":["activatedroutesnapshot","angular/cor","angular/rout","authguard","canactiv","canactivate(next","class","constructor","constructor(priv","constructor(sessionservic","export","file","implement","import","info","inject","loggedin","match","method","observ","privat","providedin","readonli","result","return","root","router","routerstatesnapshot","rxj","rxjs/oper","sessionservic","shared/service/session.servic","sourc","src/app/guard/auth.guard.t","state","tap","this.router.navigate(['/login","this.sessionservice.isauthenticated().pipe(tap(loggedin"],"injectables/ConfirmLogic.html":["angular/cor","class","code","confirmlog","constructor","constructor(sessionservic","export","file","import","info","inject","match","method","observ","privat","providedin","resendconfirm","resendconfirm(usernam","result","return","root","rxj","sendconfirmus","sendconfirmuser(usernam","sessionservic","shared/service/session.servic","sourc","src/app/pages/confirm/logic/confirm.logic.t","this.sessionservice.confirmsignup(usernam","this.sessionservice.resendconfirmnumberforsignup(usernam"],"injectables/HomeLogic.html":["angular/cor","attribut","boolean","checkregistrationus","checkregistrationuser(attribut","class","companyid","concatmap","const","constructor","constructor(homeservic","content","content.descriptionitem","content.nameitem","createroom","createroom(cont","createus","createuser(formcont","createuserroomgroup","createuserroomgroup(userid","currentuseid","currentuserid","deleteroomitem","deleteroomitem(roomid","descript","email","email_verifi","eq","export","fetchcurrentus","fetchroomgroupsid","fetchroomgroupsid(roomid","fetchroomlist","fetchroomlist(currentuseid","fetchroommemb","fetchroommembers(roomid","file","filter","filtercont","formcontent.get('iconimage').valu","formcontent.get('id').valu","formcontent.get('positionname').valu","formcontent.get('targetemail').valu","formcontent.get('tel').valu","formcontent.get('username').valu","from(data","group","homelog","homeservic","iconimag","id","import","info","inject","interfac","item","item.room","item.us","items[0].id","map","match","meid","method","modelroomgroupfilterinput","name","ne","null","observ","pipe(concatmap((roomgroupid","pipe(filter((item","pipe(map","pipe(map((r","pipe(map((result","pipe(toarray","positionnam","privat","providedin","removemefromroom","removemefromroom(roomid","requestcont","res.attribut","responselistroomgroupsqueryitem","result","result.item","return","room","roomid","root","rxj","rxjs/oper","service/home.servic","service/reponse/response.model","sessionservic","setexitsroomandus","setexitsroomanduser(data","shared/service/session.servic","sourc","src/app/pages/home/logic/home.logic.t","src/app/shared/service/amplify.servic","string","sub","takucloudcom","tel","this.fetchroomgroupsid(roomid","this.homeservice.checkregistrationuser(attribute.email","this.homeservice.createroom(requestcont","this.homeservice.createuser(requestcont","this.homeservice.createuserroomgroup(cont","this.homeservice.deleteroomgroupsitem(roomgroupid","this.homeservice.deleteroomitem(roomid","this.homeservice.fetchroomgroupsid(filtercont","this.homeservice.fetchroomlist(filtercont","this.homeservice.fetchroommembers(filtercont","this.homeservice.updateuser(requestcont","this.sessionservice.fetchcurrentus","toarray","updateus","updateuser(formcont","user","userid","usernam","uuid","v4"],"injectables/HomeService.html":["amplifyservic","angular/cor","checkregistrationus","checkregistrationuser(email","class","console.log('servic","const","constructor","constructor(amplifyservic","constructor(priv","createroom","createroom(cont","createus","createuser(cont","createuserroomgroup","createuserroomgroup(filtercont","deleteroomgroupsitem","deleteroomgroupsitem(roomgroupid","deleteroomitem","deleteroomitem(roomid","email","eq","export","fetchroomgroupsid","fetchroomgroupsid(filtercont","fetchroomlist","fetchroomlist(filtercont","fetchroommemb","fetchroommembers(filtercont","file","filtercont","from(this.amplifyservice.createroom(cont","from(this.amplifyservice.createroomgroup(filtercont","from(this.amplifyservice.createuser(cont","from(this.amplifyservice.deleteroom(requestcont","from(this.amplifyservice.deleteroomgroup(requestcont","from(this.amplifyservice.listroomgroups(filtercont","from(this.amplifyservice.listusers(filtercont","from(this.amplifyservice.updateuser(cont","homeservic","id","import","info","inject","listroomgroupsqueri","listroomsqueri","match","method","modelroomfilterinput","modelroomgroupfilterinput","modeluserfilterinput","observ","providedin","requestcont","result","return","roomgroupid","roomid","root","rxj","shared/service/amplify.servic","sourc","src/app/pages/home/service/home.service.t","string","updateus","updateuser(cont"],"injectables/LoginLogic.html":["angular/cor","catcherror","class","constructor","constructor(sessionservic","error","export","file","import","info","inject","logic.service.t","login","loginlog","match","method","observ","password","pipe(catcherror","privat","providedin","result","return","root","rxj","rxjs/oper","sendlogininfo","sendlogininfo(email","sessionservic","shared/service/session.servic","sourc","src/app/pages/login/logic/login","this.sessionservice.userlogin(email","throw"],"injectables/OwnTaskLogic.html":["angular/cor","class","concat","concatmap","constructor","constructor(owntaskservic","export","fetchcurrentus","fetchroominfo","fetchroominfo(taskitem","file","filter","from(arraytask","gettaskchargeitem","gettaskchargeitems(userid","groupbi","import","info","inject","makeowntaskitem","makeowntaskitems(taskitem","map","match","method","null","observ","owntasklog","owntaskservic","pipe(concatmap((roominfo","pipe(concatmap((taskitem","pipe(filter((result","pipe(map((r","pipe(map((result","pipe(toarray","privat","providedin","res.attribut","result","result.chargetask","return","room","roominfo","root","rxj","rxjs/oper","service/own","sessionservic","settaskperroom","settaskperroom(arraytask","sourc","src/app/pages/own","src/app/shared/service/session.servic","string","task","task.logic.t","task.servic","task/logic/own","taskitem","this.fetchroominfo(taskitem","this.makeowntaskitems(taskitem","this.owntaskservice.fetchroominfoitem(taskitem","this.owntaskservice.getuserinfo(userid","this.sessionservice.fetchcurrentus","toarray"],"injectables/OwnTaskService.html":["amplifyservic","angular/cor","class","const","constructor","constructor(amplifyservic","export","fetchroominfoitem","fetchroominfoitem(taskitem","file","from(this.amplifyservice.getroom(roomid","from(this.amplifyservice.getuser(userid","getuserinfo","getuserinfo(userid","import","info","inject","match","method","observ","owntaskservic","privat","providedin","result","return","roomid","root","rxj","sourc","src/app/pages/own","src/app/shared/service/amplify.servic","string","task.service.t","task/service/own","taskitem.roomid"],"injectables/RoomMemberService.html":["amplifyservic","angular/cor","class","constructor","constructor(amplifyservic","createuserroomgroup","createuserroomgroup(filtercont","export","fetchcompanymemb","fetchcompanymember(cont","fetchcurrentus","fetchcurrentuser(currentuserid","fetchroommemb","fetchroommember(filtercont","file","from(this.amplifyservice.createroomgroup(filtercont","from(this.amplifyservice.getuser(currentuserid","from(this.amplifyservice.listroomgroups(filtercont","from(this.amplifyservice.listusers(cont","import","info","inject","listroomgroupsqueri","match","member.service.t","members/service/room","method","observ","privat","providedin","result","return","roommemberservic","root","rxj","shared/service/amplify.servic","sourc","src/app/pages/room","string"],"injectables/RoomMembersLogic.html":["angular/cor","array","class","companyid","const","constructor","constructor(roommemberservic","contentobject","currentuserid","eq","export","fetchcompanymemb","fetchcompanymember(companyid","fetchcurrentus","fetchcurrentuser(currentuserid","fetchcurrentuserid","fetchnonassignroommembergroup","fetchnonassignroommembergroup(roomid","fetchroommemb","fetchroommembergroup","fetchroommembergroup(roomid","fetchroommembers(roomid","file","filter","filtercont","from(item","import","info","inject","interface/room","interfaceroommemb","item","item.userid","listroommembersinfo","listuserinfo","map","match","member.servic","members.interfac","members.logic.t","members.model","members/logic/room","method","models/room","number","observ","pipe(filter((item","pipe(map","pipe(map((r","pipe(map((result","pipe(toarray","privat","providedin","queryfilterus","queryfilterusernam","res.attributes.sub","result","result.item","result.us","return","roomid","roommemberservic","roommemberslog","root","rxj","rxjs/oper","service/room","sessionservic","setroommemb","setroommembers(item","sourc","src/app/pages/room","src/app/shared/service/session.servic","string","this.roommemberservice.fetchcompanymember(contentobject","this.roommemberservice.fetchcurrentuser(currentuserid","this.roommemberservice.fetchroommemb","this.roommemberservice.fetchroommember(filtercont","this.sessionservice.fetchcurrentus","toarray","undefin"],"injectables/SessionService.html":["amplifi","angular/cor","angular/rout","auth","aw","behaviorsubject","behaviorsubject(fals","catcherror","class","code","confirmsignup","confirmsignup(usernam","constructor","constructor(priv","constructor(rout","entryusersignup","entryusersignup(valueobj","export","fetchcurrentus","file","from(auth.confirmsignup(usernam","from(auth.currentauthenticatedus","from(auth.currentauthenticateduser()).pip","from(auth.resendsignup(usernam","from(auth.signin(email","from(auth.signout","from(auth.signup(valueobj","import","info","inject","isauthent","loggedin","map","match","method","new","observ","of(fals","password","pipe(tap","properti","providedin","readonli","resendconfirmnumberforsignup","resendconfirmnumberforsignup(usernam","result","return","root","router","rxj","rxjs/oper","sessionservic","signout","sourc","src/app/shared/service/session.service.t","tap","this.loggedin","this.loggedin.next(fals","this.loggedin.next(tru","true","userlogin","userlogin(email","void"],"injectables/SettingLogic.html":["angular/cor","catcherror","class","constructor","constructor(sessionservic","error","export","fetchcurrentus","fetchuserinfo","fetchuserinfo(userid","file","import","info","inject","match","method","observ","pipe(catcherror((error","privat","providedin","result","return","root","rxj","rxjs/oper","service/setting.servic","sessionservic","settinglog","settingservic","shared/service/session.servic","signout","sourc","src/app/pages/setting/logic/setting.logic.t","this.sessionservice.fetchcurrentus","this.sessionservice.signout","this.settingservice.fetchuserinfo(userid"],"injectables/SettingService.html":["amplifyservic","angular/cor","class","constructor","constructor(amplifyservic","export","fetchuserinfo","fetchuserinfo(userid","file","from(this.amplifyservice.getuser(userid","import","info","inject","match","method","observ","privat","providedin","result","return","root","rxj","settingservic","shared/service/amplify.servic","sourc","src/app/pages/setting/service/setting.service.t"],"injectables/SharedLogicService.html":["angular/cor","class","constructor","constructor(modalctrl","constructor(publ","export","file","import","info","inject","ionic/angular","logic.service.t","match","modalcontrol","modalctrl","properti","providedin","result","root","sharedlogicservic","sourc","src/app/shared/logic/shar"],"injectables/SignupLogicService.html":["1.amazonaws.com","amplifyservic","angular/cor","attribut","authenticationflowtyp","author","catcherror","class","client","cognitoidentityserviceprovider.47bkbu7qf1aue8v7i0elq754tr.r.taaaaabo+dev03@gmail.com.userdata","companyid","const","constructor","constructor(sessionservic","createus","createuser(valu","date().toisostr","email","endpoint","entrysignupus","entrysignupuser(valu","export","fals","fetchopt","file","formvalu","formvalue.email","formvalue.usernam","from(this.amplifyservice.createuser(createus","https://cognito","id","idp.ap","import","info","inject","isonowd","isonowdate}_${uuid","logic.service.t","match","member","method","new","northeast","null","observ","password","privat","providedin","r.taaaaabo+dev03@gmail.com","regist","result","return","root","rxj","rxjs/oper","session","sessionservic","shared/service/amplify.servic","shared/service/session.servic","signupcont","signuplogicservic","sourc","src/app/pages/signup/logic/signup","this.sessionservice.entryusersignup(signupcont","user","user_srp_auth","userdatakey","usernam","uuid","v4","valu","value.email","value.passwordform"],"injectables/TaskDetailLogic.html":["0","00","1)).slice","2","604800","amplifi","angular/cor","array","arrayattachmenturi","arraybase64data","atob(base64data.replac","attachment_${uuid()}_${taskid","attachmenturi","authorid","aw","base64data","base64data.split","base64result","base64toblob","base64toblob(base64data","blob","blobfil","block","block[0].split(\":\")[1","buffer","bytecharact","capacitor/cor","class","concatmap","const","constructor","constructor(taskdetailservic","content","contenttyp","currentuserinfo","data","date","descript","detail.logic.t","detail.servic","detail/logic/task","directori","dirnam","dirname}/${filename}.${ext","dismissdata","dismissdata.descriptionitem","dismissdata.nameitem","dismissdata.scheduledateitem","dt","dt.getminutes()).slic","dt.getmonth","dt.gettim","dt.getutcdate()).slic","dt.getutcfullyear()).slic","dt.getutchours()).slic","dt.getutcseconds()).slic","encod","eq","expir","export","ext","fetchanytask","fetchanytask(taskid","fetchcurrentuserinfo","fetchmemberlistonroom","fetchmemberlistonroom(roomid","fetchmessagepertask","fetchmessagepertask(taskid","file","filedata","filedelet","filedelete(filenam","filedeleteresult","filenam","fileread","fileread(filenam","filereadresult","filesystem","filesystemdirectori","filesystemdirectory.docu","filesystemencod","filesystemencoding.utf8","filewrit","filewrite(filenam","filewriteresult","filtercont","from(arraybase64data","from(filesystem.deletefil","from(filesystem.readfil","from(filesystem.writefil","from(storage.get(filenam","from(storage.put(filenam","from(this.taskdetailservice.gettask(taskid","getcontenttyp","getcontenttype(base64data","getdirstr","getdirstring(dt","getstorag","getstorage(filenam","id","import","info","info.interfac","inject","inputcont","issent","makeext","makeext(contenttyp","map","match","math.floor(100000","math.random","messag","messagecont","messageをsubscrib","method","new","number","observ","observable型でcreatemessageitem","observable型でcurrentuserinfo","observable型でfetchroommemb","observable型でonmessagelisten","observable型でs3","observable型でupdatetaskitem","of(contenttyp","of(contenttype.match(/([^/]+?)?$/)[0","oncreatemessagelisten","oneweeksecond","param","paramet","path","pipe(concatmap","pipe(concatmap((base64data","pipe(concatmap((blobfil","pipe(concatmap((contenttyp","pipe(map","pipe(map((base64result","pipe(map((r","pipe(map((result","privat","providedin","putstorag","putstorage(filenam","random","randomfloor","randommath","randommath.tostring(16","res.attribut","result","return","room","roomid","roomにtask","root","rxj","rxjs/oper","s3","scheduled","sendnewmessag","sendnewmessage(taskid","service/task","sessionservic","sourc","src/app/pages/task","src/app/shared/service/session.servic","statu","storag","string","task","task/interface/curr","taskdetaillog","taskdetailservic","taskid","taskitem","taskitem.id","taskitemのobject","this.base64toblob(base64data","this.getcontenttype(base64data","this.getdirstring(dt","this.makeext(contenttyp","this.putstorage(uploadfilenam","this.sessionservice.fetchcurrentus","this.taskdetailservice.createmessageitem(inputcont","this.taskdetailservice.fetchmessagepertask(filtercont","this.taskdetailservice.fetchroommember(filtercont","this.taskdetailservice.onmessagelisten","this.taskdetailservice.updatetaskitem(cont","titl","true","uint8array(bytecharacters.length","updatetaskitem","updatetaskitem(taskitem","updatetasktoroom","updatetasktoroom(dismissdata","uploadfil","uploadfile(arraybase64data","uploadfilenam","user","userid","uuid","v4","void"],"injectables/TaskDetailService.html":["amplifyservic","angular/cor","class","constructor","constructor(amplifyservic","createmessageitem","createmessageitem(inputcont","detail.service.t","detail/service/task","export","fetchmessagepertask","fetchmessagepertask(filterinfo","fetchroommemb","fetchroommember(cont","file","from(this.amplifyservice.createmessage(inputcont","from(this.amplifyservice.gettask(taskid","from(this.amplifyservice.listmessages(filterinfo","from(this.amplifyservice.listroomgroups(cont","from(this.amplifyservice.updatetask(inputcont","gettask","gettask(taskid","gettaskqueri","import","info","inject","match","method","observ","oncreatemessagesubscript","onmessagelisten","privat","providedin","result","return","root","rxj","shared/service/amplify.servic","sourc","src/app/pages/task","string","taskdetailservic","this.amplifyservice.oncreatemessagelisten","updatetaskitem","updatetaskitem(inputcont","void"],"injectables/TaskLogic.html":["0","10","a.prior","addmemberstoanyroom","addmemberstoanyroom(arrayuserid","amplifi","angular/cor","array","authorid","aw","b","b.prioriti","chargepersonid","class","companyid","comparetaskarray","comparetaskarray(a","concatmap","concatmap((result","const","constructor","constructor(taskservic","contain","content","createdat","createroomgroup","createroomgroup(userid","createroomgroupmut","createtaskmut","createtasktoroom","createtasktoroom(taskformdata","createuserroomgroup","createuserroomgroup(userid","currentuserinfo","data.statu","date().toisostr","deletetaskitem","deletetaskitem(taskid","deletetaskmut","descript","eq","export","fetchactivetaskperroom","fetchactivetaskperroom(roomid","fetchcompanymemb","fetchcompanymember(companyid","fetchcurrentus","fetchcurrentuserinfo","fetchdonetaskperroom","fetchdonetaskperroom(roomid","fetchmemberlistonroom","fetchmemberlistonroom(roomid","fetchroominfo","fetchroominfo(roomid","fetchtaskitemsperroom(filtercont","fetchuserinfofromamplifi","fetchuserinfofromamplify(userid","file","filter","filtercont","findindex","from(arrayuserid).pipe(concatmap((userid","from(taskactiveitem","from(taskitem","getindexnewarray","getindexnewarray(taskactiveitem","getroomqueri","getuserqueri","group","group${uuid","id","import","indexarray","info","info.interfac","inject","interface/curr","interfacetask","isostringd","listroomgroupsqueri","listusersqueri","map","match","method","new","number","observ","pipe","pipe(concatmap((r","pipe(filter((data","pipe(findindex(taskitem","pipe(map((r","pipe(toarray","prioriti","prioritya","priorityb","privat","providedin","queryfilterus","res.attribut","res.item","result","return","room","roomid","root","rxj","rxjs/oper","scheduled","service/task.servic","sessionservic","shared/service/session.servic","sourc","src/app/interfaces/task.interfac","src/app/pages/task/logic/task.logic.t","src/app/shared/service/amplify.servic","statu","storag","string","targettaskitem","targettaskitem.id","taskactiveitem","taskactiveitem.id","taskactiveitems[indexarray","taskformdata","taskformdata.chargepersonid","taskformdata.descriptionitem","taskformdata.nameitem","taskformdata.scheduledateitem","taskformitem.id","taskid","taskitem.id","tasklog","taskservic","this.createuserroomgroup(userid","this.sessionservic","this.taskservic","this.taskservice.createroomgroup(cont","this.taskservice.createtaskitem(cont","this.taskservice.createuserroomgroup(cont","this.taskservice.deletetaskitem(cont","this.taskservice.fetchcompanymember(filtercont","this.taskservice.fetchroominfo(roomid","this.taskservice.fetchroommember(filtercont","this.taskservice.fetchuserinfo(userid","this.taskservice.updatetaskitem(cont","this.taskservice.updatetaskstatusforreorder(cont","this.taskservice.updatetaskstatusitem(result","titl","toarray","undefin","updatedonetaskitem","updatedonetaskitem(taskformitem","updatestatustaskitem","updatestatustaskitems(taskitem","updatetaskitemprior","updatetaskitempriority(indexarray","updatetaskmut","user","userid","usernam","uuid","v4"],"injectables/TaskService.html":["1","amplifyservic","angular/cor","class","const","constructor","constructor(amplifyservic","constructor(priv","content","createroomgroup","createroomgroup(cont","createroomgroupmut","createtaskitem","createtaskitem(cont","createtaskmut","createuserroomgroup","createuserroomgroup(filtercont","deletetaskitem","deletetaskitem(cont","deletetaskmut","export","fetchcompanymemb","fetchcompanymember(cont","fetchroominfo","fetchroominfo(roomid","fetchroommemb","fetchroommember(cont","fetchtaskitemsperroom","fetchtaskitemsperroom(cont","fetchuserinfo","fetchuserinfo(userid","file","from(this.amplifyservice.createroomgroup(cont","from(this.amplifyservice.createroomgroup(filtercont","from(this.amplifyservice.createtask(cont","from(this.amplifyservice.deletetask(cont","from(this.amplifyservice.getroom(roomid","from(this.amplifyservice.getuser(userid","from(this.amplifyservice.listroomgroups(cont","from(this.amplifyservice.listtasks(cont","from(this.amplifyservice.listusers(cont","from(this.amplifyservice.updatetask(cont","getroomqueri","getuserqueri","id","import","info","inject","listroomgroupsqueri","listtasksqueri","listusersqueri","match","method","number","observ","prioriti","providedin","result","return","root","rxj","shared/service/amplify.servic","sourc","src/app/pages/task/service/task.service.t","string","targetitem","targetitem.id","targetitem.prior","taskitem.id","taskitem.prior","taskservic","updatetaskitem","updatetaskitem(cont","updatetaskmut","updatetaskstatusforreord","updatetaskstatusforreorder(targetitem","updatetaskstatusitem","updatetaskstatusitem(taskitem"],"routes.html":["commentpag","compon","confirmpag","full","homepag","id","id/:seg","loginpag","match","owntaskpag","path","pathmatch","redirectto","result","roomid/:companyid","roommemberspag","rout","settingpag","signuppag","taskdetailpag","taskpag"],"interfaces/Attribute.html":["angular/cor","attribut","boolean","checkregistrationuser(attribut","class","companyid","concatmap","const","constructor","content","content.descriptionitem","content.nameitem","createroom(cont","createuser(formcont","createuserroomgroup(userid","currentuseid","currentuserid","deleteroomitem(roomid","descript","email","email_verifi","eq","export","fetchcurrentus","fetchroomgroupsid(roomid","fetchroomlist(currentuseid","fetchroommembers(roomid","file","filter","filtercont","formcontent.get('iconimage').valu","formcontent.get('id').valu","formcontent.get('positionname').valu","formcontent.get('targetemail').valu","formcontent.get('tel').valu","formcontent.get('username').valu","from(data","group","homelog","homeservic","iconimag","id","import","info","inject","interfac","item","item.room","item.us","items[0].id","map","match","meid","modelroomgroupfilterinput","name","ne","null","observ","pipe(concatmap((roomgroupid","pipe(filter((item","pipe(map","pipe(map((r","pipe(map((result","pipe(toarray","positionnam","privat","properti","providedin","removemefromroom(roomid","requestcont","res.attribut","responselistroomgroupsqueryitem","result","result.item","return","room","roomid","root","rxj","rxjs/oper","service/home.servic","service/reponse/response.model","sessionservic","setexitsroomanduser(data","shared/service/session.servic","sourc","src/app/pages/home/logic/home.logic.t","src/app/shared/service/amplify.servic","string","sub","takucloudcom","tel","this.fetchroomgroupsid(roomid","this.homeservice.checkregistrationuser(attribute.email","this.homeservice.createroom(requestcont","this.homeservice.createuser(requestcont","this.homeservice.createuserroomgroup(cont","this.homeservice.deleteroomgroupsitem(roomgroupid","this.homeservice.deleteroomitem(roomid","this.homeservice.fetchroomgroupsid(filtercont","this.homeservice.fetchroomlist(filtercont","this.homeservice.fetchroommembers(filtercont","this.homeservice.updateuser(requestcont","this.sessionservice.fetchcurrentus","toarray","type","updateuser(formcont","user","userid","usernam","uuid","v4"],"interfaces/CompanyMembers.html":["__typenam","author","boolean","capacitor/cor","check","companyid","companymemb","createdat","descript","email","export","file","iconimag","id","import","info","interfac","match","member.model.t","membertask","name","null","positionnam","properti","regist","result","room","roomid","sourc","src/app/pages/task/model/task","statusbarinforesult","string","tel","type","updatedat","user","userid","usernam"],"interfaces/CurrentUserInfo.html":["boolean","currentuserinfo","email","email_verifi","export","file","info","info.interface.t","interfac","match","properti","result","sourc","src/app/pages/task/interface/curr","string","sub","type","user"],"interfaces/InterfaceRoomMembers.html":["___typenam","__typenam","author","companyid","createdat","email","export","file","iconimag","id","info","interfac","interfaceroommemb","interfaceus","match","members.interface.t","members/interface/room","positionnam","properti","regist","result","roomid","sourc","src/app/pages/room","string","tel","type","updatedat","user","userid","usernam"],"interfaces/InterfaceSignup.html":["email","export","file","info","interfac","interfacesignup","match","passwordform","properti","result","sourc","src/app/interfaces/signup.interface.t","string","type","usernam"],"interfaces/InterfaceTask.html":["___typenam","__typenam","authorid","chargepersonid","createdat","descript","export","file","id","info","interfac","interfacetask","match","null","number","prioriti","properti","result","roomid","scheduled","sourc","src/app/interfaces/task.interface.t","statu","string","task","titl","type","updatedat"],"interfaces/InterfaceUser.html":["___typenam","__typenam","author","companyid","createdat","email","export","file","iconimag","id","info","interfac","interfaceroommemb","interfaceus","match","members.interface.t","members/interface/room","positionnam","properti","regist","result","roomid","sourc","src/app/pages/room","string","tel","type","updatedat","user","userid","usernam"],"interfaces/MemberTask.html":["___typenam","__typenam","author","boolean","capacitor/cor","check","companyid","companymemb","createdat","descript","email","export","file","iconimag","id","import","info","interfac","match","member.model.t","membertask","name","null","positionnam","properti","regist","result","room","roomid","sourc","src/app/pages/task/model/task","statusbarinforesult","string","tel","type","updatedat","user","userid","usernam"],"interfaces/OwnUser.html":["___typenam","__typenam","actionlogout","actionsheetcontrol","actionsheetctrl","alreadi","angular/cor","angular/rout","app","async","author","await","boolean","button","cancel","class","companyid","compon","componentprop","concatmap","confirmlogout","const","constructor","createdat","cssclass","custom","data","destruct","dismissobserv","editprofilemodalcompon","email","export","file","flatmap","from(modal.ondiddismiss","handler","id","implement","import","info","interfac","ionic/angular","logic","logic/setting.log","logoutactionsheet","logoutactionsheet.pres","match","modal","modal.compon","modal.pres","modal/edit","modalcontrol","modalctrl","ngoninit","oninit","ownus","pipe(concatmap","pipe(flatmap((result","positionnam","presenteditmod","privat","profil","promis","properti","regist","result","return","role","router","rxj","rxjs/oper","selector","set","setting.page.html","setting.page.scss","settinglog","settingpag","shared/component/modal/edit","sourc","src/app/pages/setting/setting.page.t","statu","string","styleurl","subscrib","subscribe((data","templateurl","text","this.actionlogout","this.actionsheetctrl.cr","this.logic.fetchcurrentus","this.logic.fetchuserinfo(result.usernam","this.logic.signout","this.modalctrl.cr","this.router.navigate(['/login","this.us","type","updatedat","user","usernam"],"interfaces/ResponseListRoomGroupsQueryItems.html":["___typenam","__typenam","author","boolean","companyid","createdat","descript","email","export","file","iconimag","id","info","interfac","item","match","name","null","positionnam","properti","regist","responselistroomgroupsqueryitem","result","room","roomid","sourc","src/app/pages/home/service/reponse/response.model.t","string","tel","type","updatedat","user","userid","usernam"],"interfaces/SubscriptionResponse.html":["__typenam","_null","amplify/api","amplify/api/lib/typ","amplifyservic","angular/cor","api","api.graphql","array","async","attachmenturi","attributeexist","attributetyp","author","authorid","aw","await","beginswith","between","binari","binaryset","bool","boolean","chargeperson","chargepersonid","chargetask","class","compani","companyid","companymemb","condit","const","contain","content","createcompani","createcompany($input","createcompany(input","createcompanyinput","createcompanymut","createdat","createmessag","createmessage($input","createmessage(input","createmessageinput","createmessagemut","createroom","createroom($input","createroom(input","createroomgroup","createroomgroup($input","createroomgroup(input","createroomgroupinput","createroomgroupmut","createroominput","createroommut","createtask","createtask($input","createtask(input","createtaskgroupinput","createtaskgroupmut","createtaskinput","createtaskmut","createus","createuser($input","createuser(input","createuserinput","createusermut","deletecompani","deletecompany($input","deletecompany(input","deletecompanyinput","deletecompanymut","deletemessag","deletemessage($input","deletemessage(input","deletemessageinput","deletemessagemut","deleteroom","deleteroom($input","deleteroom(input","deleteroomgroup","deleteroomgroup($input","deleteroomgroup(input","deleteroomgroupinput","deleteroomgroupmut","deleteroominput","deleteroommut","deletetask","deletetask($input","deletetask(input","deletetaskgroupinput","deletetaskgroupmut","deletetaskinput","deletetaskmut","deleteus","deleteuser($input","deleteuser(input","deleteuserinput","deleteusermut","descript","domain","email","enum","eq","export","file","filter","ge","getcompany($id","getcompany(id","getcompanyqueri","getmessage($id","getmessage(id","getmessagequeri","getroom($id","getroom(id","getroomgroupqueri","getroomqueri","gettask($id","gettask(id","gettaskgroupqueri","gettaskqueri","getuser($id","getuser(id","getuserqueri","gqlapiserviceargu","gqlapiservicearguments.condit","gqlapiservicearguments.filt","gqlapiservicearguments.limit","gqlapiservicearguments.nexttoken","graphqloper","graphqloperation(stat","graphqlresult","gt","iconimag","id","import","info","inject","input","int","interfac","issent","item","le","limit","list","listcompani","listcompanys($filt","listcompanys(filt","listcompanysqueri","listmessag","listmessages($filt","listmessages(filt","listmessagesqueri","listroom","listroomgroup","listroomgroups($filt","listroomgroups(filt","listroomgroupsqueri","listrooms($filt","listrooms(filt","listroomsqueri","listtask","listtaskgroup","listtaskgroups($filt","listtaskgroups(filt","listtaskgroupsqueri","listtasks($filt","listtasks(filt","listtasksqueri","listus","listusers($filt","listusers(filt","listusersqueri","lt","map","match","member","messag","modelattributetyp","modelbooleaninput","modelcompanyconditioninput","modelcompanyconnect","modelcompanyfilterinput","modelidinput","modelintinput","modelmessageconditioninput","modelmessageconnect","modelmessagefilterinput","modelroomconditioninput","modelroomconnect","modelroomfilterinput","modelroomgroupconditioninput","modelroomgroupconnect","modelroomgroupfilterinput","modelsizeinput","modelstringinput","modeltaskconditioninput","modeltaskconnect","modeltaskfilterinput","modeltaskgroupconditioninput","modeltaskgroupconnect","modeltaskgroupfilterinput","modeluserconditioninput","modeluserconnect","modeluserfilterinput","mutat","name","ne","nexttoken","notcontain","null","number","numberset","observ","oncreatecompani","oncreatecompanylisten","oncreatecompanysubscript","oncreatemessag","oncreatemessagelisten","oncreatemessagesubscript","oncreateroom","oncreateroomgroupsubscript","oncreateroomlisten","oncreateroomsubscript","oncreatetask","oncreatetaskgroupsubscript","oncreatetasklisten","oncreatetasksubscript","oncreateus","oncreateuserlisten","oncreateusersubscript","ondeletecompani","ondeletecompanylisten","ondeletecompanysubscript","ondeletemessag","ondeletemessagelisten","ondeletemessagesubscript","ondeleteroom","ondeleteroomgroupsubscript","ondeleteroomlisten","ondeleteroomsubscript","ondeletetask","ondeletetaskgroupsubscript","ondeletetasklisten","ondeletetasksubscript","ondeleteus","ondeleteuserlisten","ondeleteusersubscript","onupdatecompani","onupdatecompanylisten","onupdatecompanysubscript","onupdatemessag","onupdatemessagelisten","onupdatemessagesubscript","onupdateroom","onupdateroomgroupsubscript","onupdateroomlisten","onupdateroomsubscript","onupdatetask","onupdatetaskgroupsubscript","onupdatetasklisten","onupdatetasksubscript","onupdateus","onupdateuserlisten","onupdateusersubscript","positionnam","prioriti","promis","properti","providedin","queri","regist","respons","response.data.createcompani","response.data.createmessag","response.data.createroom","response.data.createroomgroup","response.data.createtask","response.data.createus","response.data.deletecompani","response.data.deletemessag","response.data.deleteroom","response.data.deleteroomgroup","response.data.deletetask","response.data.deleteus","response.data.getcompani","response.data.getmessag","response.data.getroom","response.data.gettask","response.data.getus","response.data.listcompani","response.data.listmessag","response.data.listroom","response.data.listroomgroup","response.data.listtask","response.data.listtaskgroup","response.data.listus","response.data.updatecompani","response.data.updatemessag","response.data.updateroom","response.data.updatetask","response.data.updateus","result","return","room","roomgroup","roomid","root","scheduled","size","sourc","src/app/shared/service/amplify.service.t","statement","statu","string","stringset","subscript","subscriptionrespons","task","taskgroup","taskid","tel","titl","ts","type","updatecompani","updatecompany($input","updatecompany(input","updatecompanyinput","updatecompanymut","updatedat","updatemessag","updatemessage($input","updatemessage(input","updatemessageinput","updatemessagemut","updateroom","updateroom($input","updateroom(input","updateroomgroupinput","updateroomgroupmut","updateroominput","updateroommut","updatetask","updatetask($input","updatetask(input","updatetaskgroupinput","updatetaskgroupmut","updatetaskinput","updatetaskmut","updateus","updateuser($input","updateuser(input","updateuserinput","updateusermut","user","userid","usernam","valu","zen"],"interfaces/TaskFormModel.html":["chargepersonid","descriptionitem","export","file","form.model.t","info","interfac","match","nameitem","properti","result","scheduledateitem","sourc","src/app/shared/model/task","string","taskformmodel","type"],"miscellaneous.html":["604800","default","environ","match","miscellan","oneweeksecond","plugin","result","valu","variabl","viewkind"],"coverage.html":["0","0/0","0/1","0/10","0/12","0/13","0/15","0/17","0/2","0/27","0/28","0/3","0/4","0/44","0/5","0/56","0/6","0/7","0/8","0/9","1/1","100","2","50","9/18","addpersonlog","addpersonmodalcompon","addroommodalcompon","addtaskmodalcompon","amplifyservic","apiservic","appcompon","attribut","authguard","commentpag","companymemb","compon","confirmlog","confirmpag","content.component.t","content/no","coverag","currentuserinfo","deletetaskmodalcompon","detail.logic.t","detail.page.t","detail.service.t","detail/logic/task","detail/service/task","detail/task","document","editprofilemodalcompon","file","form.model.t","homelog","homepag","homeservic","identifi","info.interface.t","inject","interfac","interfaceroommemb","interfacesignup","interfacetask","interfaceus","listroomcompon","logic.service.t","loginlog","loginpag","match","member.model.t","member.service.t","members.interface.t","members.logic.t","members.page.t","members/interface/room","members/logic/room","members/room","members/service/room","membertask","modal.component.t","modal/add","modal/delet","modal/edit","nocontentcompon","owntasklog","owntaskpag","owntaskservic","ownus","person","person.logic.t","profil","project","responselistroomgroupsqueryitem","result","room","room.component.t","room/list","roommemberservic","roommemberslog","roommemberspag","sessionservic","settinglog","settingpag","settingservic","sharedlogicservic","signuplogicservic","signuppag","src/app/api.service.t","src/app/app.component.t","src/app/guard/auth.guard.t","src/app/interfaces/signup.interface.t","src/app/interfaces/task.interface.t","src/app/pages/comment/comment.page.t","src/app/pages/confirm/confirm.page.t","src/app/pages/confirm/logic/confirm.logic.t","src/app/pages/home/componet/list","src/app/pages/home/home.page.t","src/app/pages/home/logic/home.logic.t","src/app/pages/home/service/home.service.t","src/app/pages/home/service/reponse/response.model.t","src/app/pages/login/logic/login","src/app/pages/login/login.page.t","src/app/pages/own","src/app/pages/room","src/app/pages/setting/logic/setting.logic.t","src/app/pages/setting/service/setting.service.t","src/app/pages/setting/setting.page.t","src/app/pages/signup/logic/signup","src/app/pages/signup/signup.page.t","src/app/pages/tabs/tabs.page.t","src/app/pages/task","src/app/pages/task/component/add","src/app/pages/task/interface/curr","src/app/pages/task/logic/add","src/app/pages/task/logic/task.logic.t","src/app/pages/task/model/task","src/app/pages/task/service/task.service.t","src/app/pages/task/task.page.t","src/app/shared/component/modal/add","src/app/shared/component/modal/delet","src/app/shared/component/modal/edit","src/app/shared/component/no","src/app/shared/logic/shar","src/app/shared/model/task","src/app/shared/service/amplify.service.t","src/app/shared/service/session.service.t","statement","subscriptionrespons","tabspag","task","task.logic.t","task.page.t","task.service.t","task/logic/own","task/own","task/service/own","taskdetaillog","taskdetailpag","taskdetailservic","taskformmodel","tasklog","taskpag","taskservic","type","user"]},"length":81},"tokenStore":{"root":{"0":{"0":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.01107011070110701}}},"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075},"coverage.html":{"ref":"coverage.html","tf":0.1529051987767584}},"/":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}},"1":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.009174311926605505}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.012232415902140673}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.009174311926605505}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.01834862385321101}}},"2":{"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.012232415902140673}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.01529051987767584}}},"4":{"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.01834862385321101}}},"5":{"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.012232415902140673}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0061162079510703364}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.009174311926605505}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0061162079510703364}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}},"docs":{}}},"1":{"0":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}},"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}},"1":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456}}},"2":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456}}},"9":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456}}},"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248}}}}}}}},"[":{"0":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}},"docs":{}},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"w":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}}}}}}}}}}}}},"/":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}},"docs":{}}},"2":{"0":{"0":{"0":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}},"docs":{}},"docs":{}},"1":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456}}},"3":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456}}},"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.01107011070110701},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}},"3":{"0":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}},"docs":{}},"4":{"0":{"0":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227}}},"docs":{}},"docs":{}},"5":{"0":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}},"docs":{}},"6":{"0":{"4":{"8":{"0":{"0":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.05}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"docs":{},"/":{"1":{"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}},"docs":{}},"docs":{}}},"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.05},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}},"y":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"/":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":5.0002051282051285},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.027210884353741496},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.05357142857142857},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.05714285714285714},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.0975609756097561},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.043859649122807015},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.046511627906976744},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.024539877300613498},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.05}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0196078431372549},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.023809523809523808},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.016129032258064516},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.01639344262295082},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.023809523809523808},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.018867924528301886},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.022727272727272728},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.01818181818181818},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0196078431372549},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.023809523809523808},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.023809523809523808},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.02040816326530612},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.015873015873015872},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.023255813953488372},"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.02564102564102564},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.02857142857142857},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AddPersonLogic.html":{"ref":"injectables/AddPersonLogic.html","tf":0.043478260869565216},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.019230769230769232},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.024390243902439025},"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":0.030303030303030304},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0196078431372549},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.016129032258064516},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.01639344262295082},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.018867924528301886},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.01818181818181818},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0196078431372549},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.02040816326530612},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.015873015873015872},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.023809523809523808},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.023809523809523808},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.022727272727272728},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.023809523809523808},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.023809523809523808},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.023255813953488372},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0196078431372549},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.03225806451612903},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.01639344262295082},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.018867924528301886},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.01818181818181818},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0196078431372549},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.02040816326530612},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.015873015873015872},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.018518518518518517},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.011560693641618497},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.027777777777777776},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.05128205128205128},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.021739130434782608},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.02531645569620253},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.02},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0273972602739726},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.014705882352941176},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.05714285714285714},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.05}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":5.0256410256410255}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.027777777777777776}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0641025641025641},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.027777777777778},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02564102564102564}}}}}}}}}}}}}}},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"q":{"docs":{},"l":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.004659677150940256},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0045128205128205125},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.004617483471508028}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":5.000166417041105},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.05},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.024390243902439025},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.01953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0029122982193376602},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0029743589743589744},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.003043341378948473}}}}}},"d":{"docs":{},"d":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.028037383177570093},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.05555555555555555},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.03468208092485549}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.04477611940298507},"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":5.009345794392523},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.014018691588785047}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"injectables/AddPersonLogic.html":{"ref":"injectables/AddPersonLogic.html","tf":5.086956521739131},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.04477611940298507},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":5.018518518518518},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.04477611940298507},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":5.011560693641618},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.012396694214876033}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.014018691588785047},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00981860542519554},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.011179487179487179},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.011764705882352941},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.007751937984496124},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.011438765872599434}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.014018691588785047}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375}}}}}}},"docs":{}},"docs":{}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.012915129151291513}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}},"docs":{}},"docs":{}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.018518518518518517}}}}}}}}}}}}}}}},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375}}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.01171875},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0029122982193376602},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0029743589743589744},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.003043341378948473}}}}}},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.03597122302158273},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.01056338028169014},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":5.012875536480687},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000419771224682548}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000419771224682548}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0027458811782326512},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"u":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"}":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.012396694214876033},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.046153846153846156}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.012396694214876033}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.016666666666666666},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.016666666666666666},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102}}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008}},"o":{"docs":{},"r":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0109003161923781},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.011384615384615385},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.023255813953488372},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.010869565217391304},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.02564102564102564},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.024691358024691357},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.015151515151515152},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.006622516556291391},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.011648651484940707}},"i":{"docs":{},"d":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.008071226493592943},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.006051282051282051},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.02912621359223301},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.0061916255640675835}}}}}},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":5.030769230769231},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.05}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"4":{"7":{"docs":{},"b":{"docs":{},"k":{"docs":{},"b":{"docs":{},"u":{"7":{"docs":{},"q":{"docs":{},"f":{"1":{"docs":{},"a":{"docs":{},"u":{"docs":{},"e":{"8":{"docs":{},"v":{"7":{"docs":{},"i":{"0":{"docs":{},"e":{"docs":{},"l":{"docs":{},"q":{"7":{"5":{"4":{"docs":{},"t":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"+":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"0":{"3":{"docs":{},"@":{"docs":{},"g":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.023809523809523808},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.023809523809523808},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.022727272727272728},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.023809523809523808},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.023809523809523808},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.023255813953488372},"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":5.014018691588785},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":5.027777777777778},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":5.017341040462428},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.041666666666667},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":5.076923076923077},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":5.032608695652174},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":5.037974683544304},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":5.0144927536231885},"components/HomePage.html":{"ref":"components/HomePage.html","tf":5.028776978417266},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":5.019323671497585},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":5.03},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":5.041095890410959},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":5.024390243902439},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":5.016528925619835},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":5.022222222222222},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":5.022058823529412},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":5.085714285714285},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":5.0078125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":5.008639308855291},"routes.html":{"ref":"routes.html","tf":0.041666666666666664},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.015151515151515152},"coverage.html":{"ref":"coverage.html","tf":0.0581039755351682}},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888}}}}}}}},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.014925373134328358}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.014018691588785047},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.014492753623188406},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.01652892561983471},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.01655849558994841},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.016717948717948718},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.01056338028169014},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.011764705882352941},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.03508771929824561},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.012919896640826873},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.012875536480686695},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.040697674418604654},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.010869565217391304},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.02564102564102564},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.030864197530864196},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.015151515151515152},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.039735099337748346},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.01710567740581383}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.014018691588785047},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.01652892561983471},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.01079913606911447},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0035779663837576968},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0021538461538461538},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":5.011627906976744},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.006172839506172839},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.002203798929583377},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}}}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.01472790813779331},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.014666666666666666},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.015006821282401092}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}},"(":{"docs":{},"a":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0196078431372549},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.05128205128205128},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.058823529411764705},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.047619047619047616},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":5.051282051282051},"routes.html":{"ref":"routes.html","tf":0.041666666666666664},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":5.03921568627451}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.058823529411764705},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":5.0476190476190474}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0196078431372549},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.023809523809523808}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.05128205128205128}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.05128205128205128}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0392156862745098},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.03225806451612903},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.027777777777777776},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.03278688524590164},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.03773584905660377},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.03636363636363636},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0392156862745098},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.014925373134328358},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.030303030303030304},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.04081632653061224},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.03333333333333333},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.031746031746031744}}}}}}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.016129032258064516},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.021739130434782608}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.04838709677419355},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.047619047619047616},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":5.021739130434782},"routes.html":{"ref":"routes.html","tf":0.041666666666666664},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":5.032258064516129}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.04838709677419355},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":5.0476190476190474}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.014705882352941176}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.016129032258064516},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.023809523809523808}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.021739130434782608}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.021739130434782608}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.04838709677419355},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.03260869565217391},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":5.038461538461538},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.016666666666666666},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.03260869565217391}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.03260869565217391},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.016}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.03260869565217391}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.023809523809523808},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.023809523809523808},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.022727272727272728},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.023809523809523808},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.023809523809523808},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.023255813953488372},"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.02},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.016666666666666666},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.021484375},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.012958963282937365},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.008736894658012981},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.008923076923076922},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.02464788732394366},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.02040816326530612},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.01764705882352941},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.02631578947368421},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.025830258302583026},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.03617571059431524},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.012269938650306749},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.030042918454935622},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.015151515151515152},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.00913002413684542}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.018518518518518517},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.011560693641618497},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.027777777777777776},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.07692307692307693},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.021739130434782608},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.02531645569620253},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.02},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0410958904109589},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.014705882352941176},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.08571428571428572},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"injectables/AddPersonLogic.html":{"ref":"injectables/AddPersonLogic.html","tf":0.13043478260869565},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.038461538461538464},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.038461538461538464},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.018018018018018018},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.03571428571428571},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.02857142857142857},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.011764705882352941},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.028169014084507043},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.04878048780487805},"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":0.030303030303030304},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.017543859649122806},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.023255813953488372},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":0.030303030303030304}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":0.030303030303030304}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}},"c":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008}}}},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.024390243902439025},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.019230769230769232},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"が":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}}}}}}}}}}}},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0273972602739726},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0027458811782326512},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.002358974358974359},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.005535055350553505},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.015503875968992248},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.012269938650306749},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.002413684541924651}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0273972602739726}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0273972602739726}}}}}},"t":{"docs":{"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}},"/":{"docs":{},"n":{"docs":{},"o":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.02029520295202952}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.012231652521218172},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.012205128205128205},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.010704166229404974}}}}}},"d":{"docs":{},"e":{"docs":{"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.057692307692307696},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.024}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.003058103975535}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0196078431372549},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.023809523809523808},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.016129032258064516},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.01639344262295082},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.023809523809523808},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.018867924528301886},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.022727272727272728},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.01818181818181818},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0196078431372549},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.023809523809523808},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.023809523809523808},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.02040816326530612},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.015873015873015872},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.023255813953488372},"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.02564102564102564},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.02857142857142857},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AddPersonLogic.html":{"ref":"injectables/AddPersonLogic.html","tf":0.043478260869565216},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.019230769230769232},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.024390243902439025},"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":0.030303030303030304},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.017543859649122806}}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.046153846153846156}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.03076923076923077}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.016},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.005813953488372093},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.006172839506172839}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364}}}}}}}}}}}}}}}},"d":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.017341040462427744}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0035779663837576968},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0024615384615384616},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.002518627348095288}},"i":{"docs":{},"d":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.017341040462427744},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.005325345315360293},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.003076923076923077},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.02912621359223301},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.00314828418511911},"interfaces/TaskFormModel.html":{"ref":"interfaces/TaskFormModel.html","tf":0.06976744186046512}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.005907804959227825},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0041025641025641026},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.00419771224682548}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.005813953488372093},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.018518518518518517}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588}},"s":{"docs":{},"(":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.013605442176870748}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}},"e":{"docs":{},"v":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248}},"(":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.017341040462427744}}}}}}}},"u":{"docs":{},"s":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.012396694214876033}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.028985507246376812},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.01652892561983471},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.01056338028169014},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.01764705882352941},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.008583690987124463}}},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/CurrentUserInfo.html":{"ref":"interfaces/CurrentUserInfo.html","tf":5.054054054054054},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.027777777777777776}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.017341040462427744},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.012269938650306749}}}}}}}}}},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000314828418511911}}}}}}},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916}},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.039524047262439674},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.035076923076923075},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.05813953488372093},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.043478260869565216},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.02912621359223301},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.03418803418803419},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.037037037037037035},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.015151515151515152},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.046357615894039736},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.03589043971035785}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}},"y":{"docs":{},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000314828418511911}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000314828418511911}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.023255813953488372}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.013605442176870748},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.012269938650306749}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000314828418511911}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000314828418511911}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.017543859649122806},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.013605442176870748}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.017543859649122806}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000314828418511911}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.013605442176870748},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.02857142857142857},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.012269938650306749}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}}}},"d":{"docs":{},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.05}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02564102564102564},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0392156862745098},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.03225806451612903},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.027777777777777776},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.03278688524590164},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.03773584905660377},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.03636363636363636},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0392156862745098},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.014925373134328358},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.030303030303030304},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.04081632653061224},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.03333333333333333},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.031746031746031744}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.0759493670886076}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.04477611940298507},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":5.025316455696203},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625}}}}}}}}}}}},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916}},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000314828418511911}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.012269938650306749}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.02531645569620253}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227}}}}}}}},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.013605442176870748},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000314828418511911}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000314828418511911}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.013605442176870748}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.013605442176870748}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}},"y":{"docs":{},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000314828418511911}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000314828418511911}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000314828418511911}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625}}}}}},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}},"i":{"docs":{},"c":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},"/":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.012314861041770677},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.011794871794871795},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.01744186046511628},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.02912621359223301},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.006172839506172839},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.019867549668874173},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.012068422709623255}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.037037037037037035},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.011560693641618497},"interfaces/TaskFormModel.html":{"ref":"interfaces/TaskFormModel.html","tf":0.06976744186046512}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.1}}}}}}}},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.014018691588785047},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.027777777777777776},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.017341040462427744},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.014492753623188406}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.007380073800738007}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.005535055350553505}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},"e":{"docs":{},"}":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"}":{"docs":{},".":{"docs":{},"$":{"docs":{},"{":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.005535055350553505}},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}},"a":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.015625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.008639308855291577},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}}}}}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.011066733233483108},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.010153846153846154},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.010389337810893063}}}}}},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"q":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.05},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0018305874521551007},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.001641025641025641},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.001679084898730192}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0029122982193376602},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0029743589743589744},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.003043341378948473}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009}}}},"$":{"docs":{},"{":{"docs":{},"u":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.012396694214876033},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.022058823529411766}}}}}}}}}}}}}},"e":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000419771224682548}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}},"i":{"docs":{},"d":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458}},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458}}}}},"i":{"docs":{},"d":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256}},"e":{"docs":{},"r":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}},"i":{"docs":{},"d":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256}}},"y":{"docs":{},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}},"i":{"docs":{},"d":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256}},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}},"i":{"docs":{},"d":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186}},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}},"i":{"docs":{},"d":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.023255813953488372}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458}},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458}}}}},"i":{"docs":{},"d":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009}},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.018018018018018018}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"d":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0058245964386753205},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.005948717948717949},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.006086682757896946}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.001747378931602596},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0017435897435897436},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.001784027704900829}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.000582459643867532},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.000717948717948718},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000734599643194459}}}}}},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.000582459643867532},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.000717948717948718},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000734599643194459}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.000582459643867532},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.000717948717948718},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000734599643194459}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000419771224682548}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":5}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":5.000249625561658},"injectables/AddPersonLogic.html":{"ref":"injectables/AddPersonLogic.html","tf":5.130434782608695},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":5.000307692307692},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":5.046153846153846},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":5.0576923076923075},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":5.01056338028169},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":5.020408163265306},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":5.0576923076923075},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":5.027027027027027},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":5.053571428571429},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":5.042857142857143},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":5.017647058823529},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":5.024},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":5.042253521126761},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":5.073170731707317},"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":5.090909090909091},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":5.026315789473684},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":5.0055350553505535},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":5.034883720930233},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":5.007751937984496},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":5.0184049079754605},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.008583690987124463},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274},"coverage.html":{"ref":"coverage.html","tf":0.06422018348623854}}}}}},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.000582459643867532},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.000717948717948718},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000734599643194459}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":5.008583690987124},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":5.017441860465116},"interfaces/CurrentUserInfo.html":{"ref":"interfaces/CurrentUserInfo.html","tf":5.054054054054054},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":5.032608695652174},"interfaces/InterfaceSignup.html":{"ref":"interfaces/InterfaceSignup.html","tf":5.057142857142857},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":5.019417475728155},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":5.0256410256410255},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":5.018518518518518},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":5.015151515151516},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":5.013245033112582},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":5.000209885612342},"interfaces/TaskFormModel.html":{"ref":"interfaces/TaskFormModel.html","tf":5.046511627906977},"coverage.html":{"ref":"coverage.html","tf":0.03669724770642202}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.014705882352941176},"interfaces/InterfaceSignup.html":{"ref":"interfaces/InterfaceSignup.html","tf":5.057142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}},"/":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.0103359173126615},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":5.019417475728155},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.011764705882352941},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":5.021739130434782},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.008547008547008548},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.043478260869565216},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":5.0256410256410255},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0196078431372549},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.023809523809523808},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.016129032258064516},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.01639344262295082},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.023809523809523808},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.018867924528301886},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.022727272727272728},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.01818181818181818},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0196078431372549},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.023809523809523808},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.023809523809523808},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.02040816326530612},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.015873015873015872},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.023255813953488372},"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.02564102564102564},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.02857142857142857},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AddPersonLogic.html":{"ref":"injectables/AddPersonLogic.html","tf":0.043478260869565216},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.019230769230769232},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.024390243902439025},"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":0.030303030303030304},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.005813953488372093},"interfaces/CurrentUserInfo.html":{"ref":"interfaces/CurrentUserInfo.html","tf":0.02702702702702703},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.010869565217391304},"interfaces/InterfaceSignup.html":{"ref":"interfaces/InterfaceSignup.html","tf":0.02857142857142857},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.009708737864077669},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.008547008547008548},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.006172839506172839},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.006622516556291391},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637},"interfaces/TaskFormModel.html":{"ref":"interfaces/TaskFormModel.html","tf":0.023255813953488372}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/CurrentUserInfo.html":{"ref":"interfaces/CurrentUserInfo.html","tf":0.02702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.028985507246376812},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0410958904109589},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.005242136794807789},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.005230769230769231},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.005352083114702487}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.041666666666666664},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.1},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02564102564102564},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.027777777777777776},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0196078431372549},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.016129032258064516},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.01639344262295082},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.018867924528301886},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.01818181818181818},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0196078431372549},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.02040816326530612},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.015873015873015872},"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":0.030303030303030304},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0392156862745098},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.03225806451612903},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.027777777777777776},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.03278688524590164},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.03773584905660377},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.03636363636363636},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0392156862745098},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.014925373134328358},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.030303030303030304},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.04081632653061224},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.03333333333333333},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.031746031746031744}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.14102564102564102},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.1568627450980392},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.09523809523809523},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.16129032258064516},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.09523809523809523},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.1527777777777778},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.09523809523809523},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.14754098360655737},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.09523809523809523},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.1509433962264151},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.09090909090909091},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.14545454545454545},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.08695652173913043},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.1568627450980392},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.09523809523809523},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.1044776119402985},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.15151515151515152},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.09523809523809523},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.14285714285714285},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.15},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.09090909090909091},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.15873015873015872},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.09302325581395349},"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.02336448598130841},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.027777777777777776},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.023121387283236993},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.05555555555555555},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.02564102564102564},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.043478260869565216},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.02531645569620253},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.024154589371980676},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.04316546762589928},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.03864734299516908},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.04},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.04065040650406504},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.028925619834710745},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.03888888888888889},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.04411764705882353},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.02857142857142857},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.025390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.03023758099352052},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AddPersonLogic.html":{"ref":"injectables/AddPersonLogic.html","tf":0.043478260869565216},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.07692307692307693},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.057692307692307696},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.028169014084507043},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.02040816326530612},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.07692307692307693},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.04504504504504504},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.05357142857142857},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.04285714285714286},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.041176470588235294},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.04},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.07042253521126761},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.07317073170731707},"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":0.06060606060606061},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.05263157894736842},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.016605166051660517},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.03488372093023256},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.025839793281653745},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.018404907975460124},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.034334763948497854},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.005813953488372093},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.006172839506172839},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.03535353535353535},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000419771224682548}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.02564102564102564},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}}},"a":{"docs":{},"g":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}},"e":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.014925373134328358},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.024154589371980676}}}}}}}}}},"d":{"docs":{"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.023255813953488372},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.014492753623188406},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.042935596605092365},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.03876923076923077},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.014084507042253521},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.013605442176870748},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.00922509225092251},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.015503875968992248},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.024539877300613498},"routes.html":{"ref":"routes.html","tf":0.08333333333333333},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.017167381974248927},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.05813953488372093},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.043478260869565216},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.02912621359223301},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.03418803418803419},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.037037037037037035},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.015151515151515152},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.059602649006622516},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.039668380732500785}},"/":{"docs":{},":":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"routes.html":{"ref":"routes.html","tf":0.041666666666666664}}}}}}},"p":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.02066115702479339},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.012814112165085705},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.011384615384615385},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.01056338028169014},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.011764705882352941},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.012875536480686695},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.006622516556291391},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.011648651484940707}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705}}}}}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}},"docs":{}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}}}}},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.009568979863538026},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.006666666666666667},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.008583690987124463},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.023255813953488372},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.010869565217391304},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.02564102564102564},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.024691358024691357},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.006622516556291391},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.0068212824010914054}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"f":{"docs":{},"a":{"docs":{},"b":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.012958963282937365}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0027458811782326512},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.002358974358974359},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.002413684541924651}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.024}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"d":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"}":{"docs":{},"_":{"docs":{},"$":{"docs":{},"{":{"docs":{},"u":{"docs":{},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"d":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.1},"overview.html":{"ref":"overview.html","tf":0.09090909090909091},"modules.html":{"ref":"modules.html","tf":0.016666666666666666},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02564102564102564},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0392156862745098},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.047619047619047616},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.03225806451612903},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.047619047619047616},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.027777777777777776},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.047619047619047616},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.03278688524590164},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.047619047619047616},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.03773584905660377},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.045454545454545456},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.03636363636363636},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.043478260869565216},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0392156862745098},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.047619047619047616},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.014925373134328358},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.030303030303030304},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.047619047619047616},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.04081632653061224},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.03333333333333333},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.03636363636363636},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.031746031746031744},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.046511627906976744},"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.018518518518518517},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.011560693641618497},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.027777777777777776},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.05128205128205128},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.021739130434782608},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.02531645569620253},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.02},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0273972602739726},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.014705882352941176},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.05714285714285714},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AddPersonLogic.html":{"ref":"injectables/AddPersonLogic.html","tf":0.08695652173913043},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.03076923076923077},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.038461538461538464},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.013605442176870748},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.038461538461538464},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.018018018018018018},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.03571428571428571},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.02857142857142857},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.011764705882352941},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.016},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.028169014084507043},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.04878048780487805},"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":0.06060606060606061},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.017543859649122806},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.023255813953488372},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.012269938650306749},"routes.html":{"ref":"routes.html","tf":0.08333333333333333},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.008583690987124463},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.011627906976744186},"interfaces/CurrentUserInfo.html":{"ref":"interfaces/CurrentUserInfo.html","tf":0.05405405405405406},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.021739130434782608},"interfaces/InterfaceSignup.html":{"ref":"interfaces/InterfaceSignup.html","tf":0.05714285714285714},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.019417475728155338},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.017094017094017096},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.012345679012345678},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.013245033112582781},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274},"interfaces/TaskFormModel.html":{"ref":"interfaces/TaskFormModel.html","tf":0.046511627906976744},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.1},"coverage.html":{"ref":"coverage.html","tf":0.0061162079510703364}}}},"h":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"1":{"0":{"0":{"0":{"0":{"0":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}}}}},"p":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.016},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}}},"x":{"docs":{},"y":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.017341040462427744}}}}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009}},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.018018018018018018}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456},"modules.html":{"ref":"modules.html","tf":10.008333333333333},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":5.012820512820513},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":5.019607843137255},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":5.023809523809524},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":5.016129032258065},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":5.023809523809524},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":5.013888888888889},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":5.023809523809524},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":5.016393442622951},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":5.023809523809524},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":5.018867924528302},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":5.0227272727272725},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":5.0181818181818185},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":5.021739130434782},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":5.019607843137255},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":5.023809523809524},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":5.007462686567164},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":5.015151515151516},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":5.023809523809524},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":5.020408163265306},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":5.016666666666667},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":5.0181818181818185},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":5.015873015873016},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":5.023255813953488}}}},"a":{"docs":{},"l":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.018518518518518517},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.011560693641618497},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.02531645569620253},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.03731343283582089},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.018518518518518517},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.011560693641618497},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.02531645569620253},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.018518518518518517},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.011560693641618497},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.02531645569620253},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227}}}}}},"t":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"coverage.html":{"ref":"coverage.html","tf":0.01529051987767584}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.022388059701492536},"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"coverage.html":{"ref":"coverage.html","tf":0.009174311926605505}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.014018691588785047},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.027777777777777776},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.017341040462427744},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.0379746835443038},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.014492753623188406},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.02158273381294964},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.014492753623188406},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.012396694214876033},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.016666666666666666},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825},"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":0.12121212121212122},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102}}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":0.09090909090909091},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}},"e":{"docs":{},"l":{"docs":{},"/":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0004160426027625229},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0005128205128205128},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000524714030853185}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0004160426027625229},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0005128205128205128},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000524714030853185}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0009152937260775504},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0011282051282051281},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000839542449365096}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0004160426027625229},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0005128205128205128},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000419771224682548}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.00314828418511911}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0004160426027625229},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0005128205128205128},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000524714030853185}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0009152937260775504},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0011282051282051281},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000839542449365096}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.004742885671492761},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.005846153846153846},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.0059817399517263095}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0004160426027625229},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0005128205128205128},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000419771224682548}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0009152937260775504},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0013333333333333333},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000944485255535733}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0018305874521551007},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0022564102564102562},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.002308741735754014}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0004160426027625229},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0005128205128205128},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000419771224682548}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0009152937260775504},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0006153846153846154},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000524714030853185}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.004742885671492761},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.005846153846153846},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.0059817399517263095}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0004160426027625229},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0005128205128205128},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.047619047619047616},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.008583690987124463},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000419771224682548}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000314828418511911}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0029122982193376602},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.003384615384615385},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.003463112603631021}}}}}}}}}}}},"/":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0009152937260775504},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0011282051282051281},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000839542449365096}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.004742885671492761},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.005846153846153846},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.0059817399517263095}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0004160426027625229},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0005128205128205128},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000419771224682548}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0009152937260775504},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.004742885671492761},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.005846153846153846},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.0059817399517263095}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0004160426027625229},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0005128205128205128},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000419771224682548}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0009152937260775504},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0011282051282051281},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000839542449365096}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0018305874521551007},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0022564102564102562},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.002308741735754014}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0004160426027625229},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0005128205128205128},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.013605442176870748},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000419771224682548}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.01818181818181818},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.014018691588785047},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.012396694214876033},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0031794871794871794},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.003253226991289747}},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.01818181818181818}}}}}}},"e":{"docs":{},"l":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.01818181818181818},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356}}}}}},"t":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}},"i":{"docs":{},"c":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.010869565217391304},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.008547008547008548},"coverage.html":{"ref":"coverage.html","tf":0.0061162079510703364}}}}}}}}}}}}}},"/":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.01818181818181818},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},"/":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.010869565217391304},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.008547008547008548},"coverage.html":{"ref":"coverage.html","tf":0.0061162079510703364}}}}}}}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}},".":{"docs":{},"t":{"docs":{"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.005813953488372093},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.006172839506172839},"coverage.html":{"ref":"coverage.html","tf":0.0061162079510703364}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.018691588785046728},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.005813953488372093},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":5.012345679012346},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.02564102564102564},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.02857142857142857},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.019230769230769232},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.024390243902439025},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.01171875},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.010068230986853053},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.007589743589743589},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.01107011070110701},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.007765767656627138}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.012915129151291513}}}}}},"を":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.02112676056338028},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.017167381974248927}}}}},"i":{"docs":{},"n":{"docs":{},"y":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.017341040462427744}}}}}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":10.05}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.001747378931602596},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0017435897435897436},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.001784027704900829}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.05}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.03731343283582089},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":5.027397260273973},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.014018691588785047},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.01652892561983471}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}}}}}}}}}},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}}}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.05}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0547945205479452},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.01805624895989349},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.017025641025641025},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.01744186046511628},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.006172839506172839},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.019867549668874173},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.017420505824325742}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.037037037037037035},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.011560693641618497},"interfaces/TaskFormModel.html":{"ref":"interfaces/TaskFormModel.html","tf":0.06976744186046512}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.012396694214876033}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227}}}}}}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.03}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02564102564102564},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0392156862745098},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.047619047619047616},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.03225806451612903},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.047619047619047616},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.027777777777777776},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.047619047619047616},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.03278688524590164},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.047619047619047616},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.03773584905660377},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.045454545454545456},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.03636363636363636},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.043478260869565216},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0392156862745098},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.047619047619047616},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.014925373134328358},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.030303030303030304},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.047619047619047616},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.04081632653061224},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.03333333333333333},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.03636363636363636},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.031746031746031744},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.046511627906976744}}}}}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.02564102564102564},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.10592444666333832},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.12871794871794873},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.008583690987124463},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.011627906976744186},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.04854368932038835},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.037037037037037035},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.013245033112582781},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.13170322174414945}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.006323847561990348},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.007794871794871795},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.011764705882352941},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.015503875968992248},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.012269938650306749},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.05825242718446602},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.007241053625773953}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}}}}}}}}}},"e":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0004160426027625229},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0005128205128205128},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000524714030853185}},"w":{"docs":{"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.027777777777777776},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.03468208092485549},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.021739130434782608},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.043478260869565216},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.03},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.029411764705882353},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375}}}}}},"x":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.05034115493426527},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.040615384615384616},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.040822751600377793}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":5}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.03225806451612903},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.03278688524590164},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.022388059701492536},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.1},"overview.html":{"ref":"overview.html","tf":0.09090909090909091},"modules.html":{"ref":"modules.html","tf":0.016666666666666666},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02564102564102564},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0392156862745098},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.047619047619047616},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.03225806451612903},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.047619047619047616},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.027777777777777776},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.047619047619047616},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.03278688524590164},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.047619047619047616},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.03773584905660377},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.045454545454545456},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.03636363636363636},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.043478260869565216},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0392156862745098},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.047619047619047616},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.014925373134328358},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.030303030303030304},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.047619047619047616},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.04081632653061224},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.03333333333333333},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.03636363636363636},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.031746031746031744},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.046511627906976744},"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.018691588785046728},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.018518518518518517},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.011560693641618497},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.027777777777777776},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.05128205128205128},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.021739130434782608},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.02531645569620253},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.014492753623188406},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.02},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0273972602739726},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.012396694214876033},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.014705882352941176},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.05714285714285714},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AddPersonLogic.html":{"ref":"injectables/AddPersonLogic.html","tf":0.08695652173913043},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.03076923076923077},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.038461538461538464},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.013605442176870748},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.038461538461538464},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.02702702702702703},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.03571428571428571},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.02857142857142857},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.011764705882352941},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.016},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.028169014084507043},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.04878048780487805},"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":0.06060606060606061},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.017543859649122806},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.007380073800738007},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.023255813953488372},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.012269938650306749},"routes.html":{"ref":"routes.html","tf":0.08333333333333333},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.008583690987124463},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.011627906976744186},"interfaces/CurrentUserInfo.html":{"ref":"interfaces/CurrentUserInfo.html","tf":0.05405405405405406},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.021739130434782608},"interfaces/InterfaceSignup.html":{"ref":"interfaces/InterfaceSignup.html","tf":0.05714285714285714},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.019417475728155338},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.017094017094017096},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.012345679012345678},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.013245033112582781},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274},"interfaces/TaskFormModel.html":{"ref":"interfaces/TaskFormModel.html","tf":0.046511627906976744},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.1},"coverage.html":{"ref":"coverage.html","tf":0.0061162079510703364}},".":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0196078431372549},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.023809523809523808},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.016129032258064516},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.01639344262295082},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.023809523809523808},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.018867924528301886},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.022727272727272728},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.01818181818181818},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0196078431372549},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.023809523809523808},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.023809523809523808},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.02040816326530612},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.015873015873015872},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.023255813953488372}}},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.03260869565217391}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.019230769230769232}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.038461538461538464}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.016}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0029122982193376602},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0029743589743589744},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.003043341378948473}},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.01056338028169014},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.012875536480686695},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":5.013245033112582},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"routes.html":{"ref":"routes.html","tf":0.041666666666666664}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.04672897196261682},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.037037037037037035},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.017341040462427744},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.021739130434782608},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.02531645569620253},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.014492753623188406},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.02158273381294964},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.03864734299516908},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.02},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.04132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.027777777777777776},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.03676470588235294},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.03125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.04103671706263499},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0058245964386753205},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.005948717948717949},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.03076923076923077},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.07692307692307693},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.08450704225352113},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.1360544217687075},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.038461538461538464},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.09009009009009009},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.07142857142857142},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.11428571428571428},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.08823529411764706},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.128},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.09859154929577464},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.04878048780487805},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.03508771929824561},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.08118081180811808},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.13953488372093023},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.09043927648578812},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.147239263803681},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.05150214592274678},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.003043341378948473}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.009568979863538026},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.009846153846153846},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.011627906976744186},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.010869565217391304},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.02564102564102564},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.024691358024691357},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.015151515151515152},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.006622516556291391},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.010074509392381152}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.01056338028169014},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.027210884353741496},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.012875536480686695}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.07142857142857142},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.07142857142857142},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.07142857142857142},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.07142857142857142},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.06818181818181818},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.06521739130434782},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.07142857142857142},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.07142857142857142},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.05454545454545454},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.06976744186046512},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"routes.html":{"ref":"routes.html","tf":10.041666666666666}},"e":{"docs":{},"r":{"docs":{"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.05434782608695652},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.024154589371980676},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.05},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.032520325203252036},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.027777777777777776},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.029411764705882353},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.008639308855291577},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.07692307692307693},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.032},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.015151515151515152}},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02564102564102564}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.047619047619047616},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.047619047619047616},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.047619047619047616},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.047619047619047616},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.045454545454545456},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.043478260869565216},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.047619047619047616},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.047619047619047616},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.03636363636363636},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.046511627906976744}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.023809523809523808},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.023809523809523808},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.022727272727272728},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.023809523809523808},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.023809523809523808},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.046153846153846156}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0196078431372549},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.016129032258064516},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.01639344262295082},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.018867924528301886},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.01818181818181818},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0196078431372549},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.02040816326530612},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.015873015873015872}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.023809523809523808},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.023809523809523808},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.022727272727272728},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.023809523809523808},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.023809523809523808},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.023255813953488372}}}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.03636363636363636},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.014925373134328358},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.07407407407407407},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.017341040462427744},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.01932367149758454},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.024793388429752067},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.01079913606911447},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.017224163754368447},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.015487179487179488},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.01744186046511628},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.006172839506172839},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.019867549668874173},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.015846363731766188},"coverage.html":{"ref":"coverage.html","tf":0.0061162079510703364}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.017341040462427744},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.02066115702479339},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.0078125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.01079913606911447}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.05454545454545454},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.043478260869565216},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":5.008264462809917},"routes.html":{"ref":"routes.html","tf":0.041666666666666664},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":5.036363636363636}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.05454545454545454},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":5.043478260869565}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.012396694214876033},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":5.011764705882353},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":5.0285714285714285},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.023529411764705882},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227}}}}}},"t":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227}}}}},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}},"i":{"docs":{},"d":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.014018691588785047},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.01652892561983471},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.008071226493592943},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.006461538461538461},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.028169014084507043},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.023529411764705882},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.01107011070110701},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.056847545219638244},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.030042918454935622},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.01744186046511628},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.03260869565217391},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.02912621359223301},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.008547008547008548},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.006172839506172839},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.019867549668874173},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.0066113967887501315}},"/":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"routes.html":{"ref":"routes.html","tf":0.041666666666666664}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.027777777777777776}}}}}}}}}},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.036036036036036036}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.000582459643867532},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.000717948717948718},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000734599643194459}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.014492753623188406}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374}}}}}}}}},"に":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.027777777777777776},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AddPersonLogic.html":{"ref":"injectables/AddPersonLogic.html","tf":0.043478260869565216},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.019230769230769232},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.024390243902439025},"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":0.030303030303030304},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}},"l":{"docs":{},"e":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.0078125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102}}}}},"x":{"docs":{},"j":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.019230769230769232},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.024390243902439025},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}},"s":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"+":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"0":{"3":{"docs":{},"@":{"docs":{},"g":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"1":{"6":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"s":{"3":{"docs":{"index.html":{"ref":"index.html","tf":0.05},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}},"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456},"modules.html":{"ref":"modules.html","tf":0.19166666666666668},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0196078431372549},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.023809523809523808},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.016129032258064516},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.01639344262295082},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.023809523809523808},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.018867924528301886},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.022727272727272728},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.01818181818181818},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0196078431372549},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.023809523809523808},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.023809523809523808},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.02040816326530612},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.015873015873015872},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.023255813953488372}}}}}}},"b":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.012875536480686695},"interfaces/CurrentUserInfo.html":{"ref":"interfaces/CurrentUserInfo.html","tf":0.08108108108108109}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.01171875},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}},"r":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102}}}}}}}}}},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.001747378931602596},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0015384615384615385},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.001574142092559555}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":5.000209885612342},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682}}}}}}}},"v":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456},"modules.html":{"ref":"modules.html","tf":0.19166666666666668},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0196078431372549},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.023809523809523808},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.016129032258064516},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.01639344262295082},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.023809523809523808},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.018867924528301886},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.022727272727272728},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.01818181818181818},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0196078431372549},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.023809523809523808},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.023809523809523808},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.02040816326530612},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.015873015873015872},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.023255813953488372}}}},"e":{"docs":{},"t":{"docs":{"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0196078431372549},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.058823529411764705},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.047619047619047616},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":5.011111111111111},"routes.html":{"ref":"routes.html","tf":0.041666666666666664},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":5.03921568627451}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.058823529411764705},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":5.0476190476190474}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0196078431372549},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.023809523809523808}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.016666666666666666},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":5.028169014084507},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.07042253521126761},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":5.048780487804878},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.018018018018018018}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.015873015873015872},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.022388059701492536},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.06153846153846154},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.07692307692307693},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.017605633802816902},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.07692307692307693},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.036036036036036036},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.023529411764705882},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":5.016},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.056338028169014086},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.03508771929824561},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.007380073800738007},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.012919896640826873},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.012875536480686695},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.018518518518518517},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.011560693641618497},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.027777777777777776},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.05128205128205128},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.021739130434782608},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.02531645569620253},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.02},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0273972602739726},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.014705882352941176},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.05714285714285714},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.012958963282937365}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.019230769230769232}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.038461538461538464}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.038461538461538464},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.041666666666666664},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":5.014925373134329},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.045454545454545456},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.05}}}}}}},"/":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.019230769230769232},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.024390243902439025},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.022388059701492536},"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":5.0606060606060606},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.014705882352941176}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.045454545454545456},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.047619047619047616},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":5.014705882352941},"routes.html":{"ref":"routes.html","tf":0.041666666666666664},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":5.03030303030303}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.045454545454545456},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":5.0476190476190474}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.023809523809523808}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.014705882352941176}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.014705882352941176}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.045454545454545456},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.022058823529411766},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":5.017543859649122},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.022058823529411766}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.024},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.04225352112676056}}}}}}},"z":{"docs":{},"e":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625}}}}}},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.005325345315360293},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.004923076923076923},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.02912621359223301},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.005037254696190576}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.017341040462427744},"interfaces/TaskFormModel.html":{"ref":"interfaces/TaskFormModel.html","tf":0.06976744186046512}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0196078431372549},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.023809523809523808},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.016129032258064516},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.01639344262295082},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.023809523809523808},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.018867924528301886},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.022727272727272728},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.01818181818181818},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0196078431372549},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.023809523809523808},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.023809523809523808},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.02040816326530612},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.015873015873015872},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.023255813953488372},"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.02564102564102564},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.02857142857142857},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AddPersonLogic.html":{"ref":"injectables/AddPersonLogic.html","tf":0.043478260869565216},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.019230769230769232},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.024390243902439025},"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":0.030303030303030304},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.005813953488372093},"interfaces/CurrentUserInfo.html":{"ref":"interfaces/CurrentUserInfo.html","tf":0.02702702702702703},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.010869565217391304},"interfaces/InterfaceSignup.html":{"ref":"interfaces/InterfaceSignup.html","tf":0.02857142857142857},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.009708737864077669},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.008547008547008548},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.006172839506172839},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.006622516556291391},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637},"interfaces/TaskFormModel.html":{"ref":"interfaces/TaskFormModel.html","tf":0.023255813953488372}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02564102564102564},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.06944444444444445}}}}}}}}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}},"i":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.023809523809523808}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0196078431372549}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.02564102564102564},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.023809523809523808}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.016129032258064516}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808}},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"coverage.html":{"ref":"coverage.html","tf":0.0061162079510703364}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.006622516556291391},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.023809523809523808}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.01639344262295082}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}},"c":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.018867924528301886},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.022727272727272728},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856},"coverage.html":{"ref":"coverage.html","tf":0.009174311926605505}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.01818181818181818},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.010869565217391304},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.008547008547008548},"coverage.html":{"ref":"coverage.html","tf":0.01529051987767584}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.023809523809523808}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0196078431372549}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051},"coverage.html":{"ref":"coverage.html","tf":0.0061162079510703364}}}}}}}}}}}}}},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.024390243902439025},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},"/":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.023809523809523808}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},"/":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.02040816326530612}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}},"s":{"docs":{},"k":{"docs":{"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"coverage.html":{"ref":"coverage.html","tf":0.009174311926605505}},"/":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.023255813953488372}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.015873015873015872}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"injectables/AddPersonLogic.html":{"ref":"injectables/AddPersonLogic.html","tf":0.043478260869565216},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"/":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.005813953488372093},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.006172839506172839},"coverage.html":{"ref":"coverage.html","tf":0.0061162079510703364}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"interfaces/CurrentUserInfo.html":{"ref":"interfaces/CurrentUserInfo.html","tf":0.02702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"/":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637},"coverage.html":{"ref":"coverage.html","tf":0.0061162079510703364}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"coverage.html":{"ref":"coverage.html","tf":0.0061162079510703364}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"/":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"interfaces/TaskFormModel.html":{"ref":"interfaces/TaskFormModel.html","tf":0.023255813953488372},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},"/":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":0.030303030303030304},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.009708737864077669},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/InterfaceSignup.html":{"ref":"interfaces/InterfaceSignup.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.005325345315360293},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.004923076923076923},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.01107011070110701},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.012919896640826873},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.02912621359223301},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.005037254696190576}},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02564102564102564},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.06944444444444445}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.005813953488372093},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}},"e":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.03076923076923077}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0029122982193376602},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0029743589743589744},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.003043341378948473},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}},"i":{"docs":{},"c":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.02336448598130841},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.046242774566473986},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.021739130434782608},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.03864734299516908},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.04316546762589928},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.05314009661835749},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0821917808219178},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.024793388429752067},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.05},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.01953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.02591792656587473},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.14586453652854053},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.17794871794871794},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.06338028169014084},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.04081632653061224},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.018018018018018018},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.05357142857142857},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.02857142857142857},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.08235294117647059},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.07380073800738007},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.023255813953488372},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.04909560723514212},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.03680981595092025},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.060085836909871244},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.36627906976744184},"interfaces/CurrentUserInfo.html":{"ref":"interfaces/CurrentUserInfo.html","tf":0.16216216216216217},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.32608695652173914},"interfaces/InterfaceSignup.html":{"ref":"interfaces/InterfaceSignup.html","tf":0.2571428571428571},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.2621359223300971},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.358974358974359},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.3271604938271605},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.13636363636363635},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.3841059602649007},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.18081645503200755},"interfaces/TaskFormModel.html":{"ref":"interfaces/TaskFormModel.html","tf":0.27906976744186046}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}}}}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.018518518518518517},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.011560693641618497},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.027777777777777776},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.05128205128205128},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.021739130434782608},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.02531645569620253},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.02},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0273972602739726},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.014705882352941176},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.05714285714285714},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.014492753623188406}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.014492753623188406},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00798801797304044},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.009846153846153846},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.012875536480686695},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.040697674418604654},"interfaces/CurrentUserInfo.html":{"ref":"interfaces/CurrentUserInfo.html","tf":0.08108108108108109},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.07608695652173914},"interfaces/InterfaceSignup.html":{"ref":"interfaces/InterfaceSignup.html","tf":0.08571428571428572},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.11650485436893204},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.10256410256410256},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.08024691358024691},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.050505050505050504},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.052980132450331126},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.01017945219855179},"interfaces/TaskFormModel.html":{"ref":"interfaces/TaskFormModel.html","tf":0.09302325581395349},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.05}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.02040816326530612},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.05714285714285714}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.061224489795918366},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":5.057142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":5.040816326530612}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.04081632653061224}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.02040816326530612}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.05714285714285714}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.05714285714285714}}}}}}}}}}}}}},"s":{"docs":{},"k":{"docs":{"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.018867924528301886},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.022727272727272728},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.029850746268656716},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.03333333333333333},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.015873015873015872},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.046242774566473986},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.13924050632911392},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.015625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.008639308855291577},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.013895822932268265},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.01158974358974359},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.02912621359223301},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.011858537097281982},"coverage.html":{"ref":"coverage.html","tf":0.012232415902140673}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.017341040462427744},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.009765625}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.05},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.03636363636363636},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":5.00390625},"routes.html":{"ref":"routes.html","tf":0.041666666666666664},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":5.033333333333333}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.05},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":5.036363636363636}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":5.003690036900369},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.007380073800738007},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":5.023255813953488},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.047619047619047616},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.046511627906976744},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":5.004319654427646},"routes.html":{"ref":"routes.html","tf":0.041666666666666664},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":5.031746031746032}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.047619047619047616},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":5.046511627906977}}}}}}}}}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.018867924528301886}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.018867924528301886},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.022727272727272728},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.015873015873015872},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.023255813953488372}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}}}}}},"t":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009}},"i":{"docs":{},"c":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}},"/":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.018867924528301886},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.022727272727272728},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},"/":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.047619047619047616},"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.014018691588785047},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":5.0051679586563305},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.047619047619047616},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.0103359173126615},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":5.012269938650307},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.017341040462427744}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"interfaces/TaskFormModel.html":{"ref":"interfaces/TaskFormModel.html","tf":5.046511627906977},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0054917623564653024},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0037948717948717947},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.046125461254612546},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.003882883828313569}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}}}}}}}},"の":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.007380073800738007}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.008639308855291577},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.0103359173126615}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.000582459643867532},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.000717948717948718},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000734599643194459}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.014492753623188406}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}}},"k":{"docs":{},"u":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"u":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227}}},"m":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.01056338028169014},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.012875536480686695}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375}}}}}}}}},"p":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.018518518518518517},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.011560693641618497},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.027777777777777776},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.05128205128205128},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.021739130434782608},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.02531645569620253},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.02},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0273972602739726},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.014705882352941176},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.05714285714285714},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}}}}},"l":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.009568979863538026},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.006564102564102564},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.008583690987124463},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.011627906976744186},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.010869565217391304},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.02564102564102564},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.024691358024691357},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.019867549668874173},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.006716339594920768}}},"x":{"docs":{},"t":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.015625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.011560693641618497}}}}}}}},"u":{"docs":{},"s":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.014492753623188406},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.012396694214876033},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.012396694214876033}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.008639308855291577}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.016}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.016}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.014018691588785047}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}},"[":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625}}}}}}},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.014492753623188406}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"x":{"docs":{},"y":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248}}}}}}},"k":{"docs":{},"e":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"y":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.01652892561983471}}}}}}}}}}}}}},"e":{"docs":{},"w":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.0078125}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}},"i":{"docs":{},"d":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.014492753623188406}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.02066115702479339},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"[":{"docs":{},"'":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.0078125}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.011560693641618497}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.012958963282937365}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}},"t":{"docs":{},"o":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227}}}}},"o":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.016666666666666666},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.015151515151515152}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375}}}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}}}}}},"i":{"docs":{},"d":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.01079913606911447}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227}},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"g":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.008639308855291577}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"d":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"u":{"docs":{},"c":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.014492753623188406},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.005325345315360293},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.004923076923076923},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.02912621359223301},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.005037254696190576}}}}},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}},"s":{"docs":{},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825}}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}}}}}}}}}},"s":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}},"v":{"1":{"2":{"docs":{},".":{"1":{"8":{"docs":{},".":{"4":{"docs":{"index.html":{"ref":"index.html","tf":0.05}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"4":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}},"6":{"docs":{},".":{"1":{"4":{"docs":{},".":{"8":{"docs":{"index.html":{"ref":"index.html","tf":0.05}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.06074766355140187},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.037037037037037035},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.028901734104046242},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.021739130434782608},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.02531645569620253},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.033816425120772944},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.024154589371980676},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.04},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.01652892561983471},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.022058823529411766},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.03125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.04535637149028078},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.02},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.022058823529411766}}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"8":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.014705882352941176}}},"docs":{}}}}}}}}}}}}}}}}}}},"u":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0547945205479452},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000314828418511911},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.1}},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.017543859649122806}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.05}}}}}}}},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.1}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0410958904109589}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.05}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}}}}}},"b":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.19166666666666668}},"e":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456},"modules.html":{"ref":"modules.html","tf":0.19166666666666668},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02564102564102564},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0196078431372549},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.023809523809523808},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.016129032258064516},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.01639344262295082},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.023809523809523808},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.018867924528301886},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.022727272727272728},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.01818181818181818},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0196078431372549},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.023809523809523808},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.023809523809523808},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.02040816326530612},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.015873015873015872},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.023255813953488372}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02564102564102564}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888}}}}}}},"c":{"docs":{},"k":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"6":{"4":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.007380073800738007}},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02564102564102564}}}}}}}},"l":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.012958963282937365},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.005574970877017807},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.006871794871794872},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.012875536480686695},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.011627906976744186},"interfaces/CurrentUserInfo.html":{"ref":"interfaces/CurrentUserInfo.html","tf":0.08108108108108109},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.024691358024691357},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.015151515151515152},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.006622516556291391},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.007031168013432679}}}}}}}},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}}}}}}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000419771224682548}}}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.024}},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}}},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.007380073800738007}}}}}},"c":{"docs":{},"k":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},":":{"docs":{},"\"":{"docs":{},")":{"docs":{},"[":{"1":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0196078431372549},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.023809523809523808},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.016129032258064516},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.01639344262295082},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.023809523809523808},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.018867924528301886},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.022727272727272728},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.01818181818181818},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0196078431372549},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.023809523809523808},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.023809523809523808},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.02040816326530612},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.015873015873015872},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.023255813953488372}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.045454545454545}}}}}}}}},"w":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.05660377358490566},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.045454545454545456},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":5.016260162601626},"routes.html":{"ref":"routes.html","tf":0.041666666666666664},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":5.037735849056604}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.05660377358490566},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":5.045454545454546}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.024390243902439025}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.024390243902439025},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":5.018018018018018},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.036036036036036036},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":5.035714285714286},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.016666666666666666},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":5.015151515151516},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.018518518518518517},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.011560693641618497},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.05128205128205128},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.021739130434782608},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.02531645569620253},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.02},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0273972602739726},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.014705882352941176},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.0379746835443038}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}}},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.005535055350553505},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.022058823529411766}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}}},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}}},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00024962556165751375},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0003076923076923077},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.1}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.03488372093023256}}}}}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}}}}}},"f":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"/":{"docs":{},"(":{"docs":{},"[":{"docs":{},"^":{"docs":{},"/":{"docs":{},"]":{"docs":{},"+":{"docs":{},"?":{"docs":{},")":{"docs":{},"?":{"docs":{},"$":{"docs":{},"/":{"docs":{},")":{"docs":{},"[":{"0":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.033816425120772944},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.005408553835912797},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.004820512820512821},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.046153846153846156},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.09615384615384616},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0880281690140845},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.14285714285714285},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.057692307692307696},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.0990990990990991},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.08928571428571429},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.12857142857142856},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.08823529411764706},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.104},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.09859154929577464},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.07317073170731707},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.043859649122807015},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.07195571955719557},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.12790697674418605},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.082687338501292},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.15337423312883436},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.055793991416309016},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.003358169797460384}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"型":{"docs":{},"で":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}},"s":{"3":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}},"docs":{}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.09090909090909091},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02564102564102564},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0392156862745098},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.047619047619047616},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.03225806451612903},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.047619047619047616},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.027777777777777776},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.047619047619047616},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.03278688524590164},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.047619047619047616},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.03773584905660377},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.045454545454545456},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.03636363636363636},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.043478260869565216},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0392156862745098},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.047619047619047616},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.014925373134328358},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.030303030303030304},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.047619047619047616},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.04081632653061224},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.03333333333333333},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.03636363636363636},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.031746031746031744},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.046511627906976744}}}}},"e":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.041666666666666664},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.047619047619047616},"components/HomePage.html":{"ref":"components/HomePage.html","tf":5.014388489208633},"routes.html":{"ref":"routes.html","tf":0.041666666666666664},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":5.027777777777778}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.041666666666666664},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":5.0476190476190474}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.041666666666666664},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.014492753623188406},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.02158273381294964},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.014492753623188406},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":5.007042253521127},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.041666666666666664},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.014084507042253521},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":5.01360544217687},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.012875536480686695},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}}}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.01171875},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625}}}}}}}}}}},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.01639344262295082},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.05},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.04918032786885246},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.047619047619047616},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":5.02},"routes.html":{"ref":"routes.html","tf":0.041666666666666664},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":5.032786885245901}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.008333333333333333},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.04918032786885246},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":5.0476190476190474}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.01639344262295082},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.023809523809523808}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.02}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.02}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.04918032786885246},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.03},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":5.038461538461538},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.03}}}}}}},"c":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.014705882352941176},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.016129032258064516},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.01639344262295082},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588}}}}}}},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.015873015873015872},"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.01639344262295082},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232},"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":0.030303030303030304},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"coverage.html":{"ref":"coverage.html","tf":0.009174311926605505}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.024}}}}}}}},"a":{"docs":{},"d":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.024390243902439025}}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.016260162601626018}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.02066115702479339},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.03676470588235294},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.0078125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.01079913606911447}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.028985507246376812},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.041666666666666664},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":5.009661835748792},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.011560693641618497},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"(":{"docs":{},"$":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"$":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"e":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"(":{"docs":{},"$":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"(":{"docs":{},"$":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}},"y":{"docs":{},"s":{"docs":{},"(":{"docs":{},"$":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"s":{"docs":{},"(":{"docs":{},"$":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"$":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}}}},"n":{"docs":{},"k":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.004077217507072724},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.005025641025641026},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.004407597859166754}}}}}},"e":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000419771224682548}}},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000419771224682548}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.016}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.017543859649122806}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.2}}}}}}}},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0196078431372549},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.047619047619047616},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.016129032258064516},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.047619047619047616},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.047619047619047616},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.01639344262295082},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.047619047619047616},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.018867924528301886},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.045454545454545456},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.01818181818181818},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.043478260869565216},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0196078431372549},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.047619047619047616},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.022388059701492536},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.047619047619047616},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.02040816326530612},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.03636363636363636},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.015873015873015872},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.046511627906976744},"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.02564102564102564},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.02857142857142857},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.008237643534697954},"injectables/AddPersonLogic.html":{"ref":"injectables/AddPersonLogic.html","tf":0.043478260869565216},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.010153846153846154},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.019230769230769232},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.024390243902439025},"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":0.030303030303030304},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.011627906976744186},"interfaces/CurrentUserInfo.html":{"ref":"interfaces/CurrentUserInfo.html","tf":0.02702702702702703},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.021739130434782608},"interfaces/InterfaceSignup.html":{"ref":"interfaces/InterfaceSignup.html","tf":0.02857142857142857},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.009708737864077669},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.017094017094017096},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.012345679012345678},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.006622516556291391},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.010389337810893063},"interfaces/TaskFormModel.html":{"ref":"interfaces/TaskFormModel.html","tf":0.023255813953488372}}}}},"i":{"docs":{},"r":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}},"r":{"docs":{},"a":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.028985507246376812}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.04477611940298507},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":5.009661835748792},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.014492753623188406}}}}}}}}}}}}}}}},"v":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.04316546762589928},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.02},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.014705882352941176},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.009568979863538026},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.009948717948717949},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.01056338028169014},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.013605442176870748},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.017543859649122806},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.02145922746781116},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.023255813953488372},"interfaces/CurrentUserInfo.html":{"ref":"interfaces/CurrentUserInfo.html","tf":0.08108108108108109},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.010869565217391304},"interfaces/InterfaceSignup.html":{"ref":"interfaces/InterfaceSignup.html","tf":0.08571428571428572},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.02564102564102564},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.024691358024691357},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.015151515151515152},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.019867549668874173},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.01017945219855179}},"_":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.012875536480686695},"interfaces/CurrentUserInfo.html":{"ref":"interfaces/CurrentUserInfo.html","tf":0.08108108108108109}}}}}}}}}}}}},"q":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0004160426027625229},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0005128205128205128},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.014084507042253521},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.01764705882352941},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.012919896640826873},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.017167381974248927},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000524714030853185}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282},"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0196078431372549},"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.023809523809523808},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.016129032258064516},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.013888888888888888},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.01639344262295082},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.023809523809523808},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.018867924528301886},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.022727272727272728},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.01818181818181818},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0196078431372549},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.023809523809523808},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.015151515151515152},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.023809523809523808},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.02040816326530612},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.016666666666666666},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.015873015873015872},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.023255813953488372},"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.013888888888888888},"components/CommentPage.html":{"ref":"components/CommentPage.html","tf":0.02564102564102564},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.02857142857142857},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AddPersonLogic.html":{"ref":"injectables/AddPersonLogic.html","tf":0.043478260869565216},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.019230769230769232},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.024390243902439025},"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":0.030303030303030304},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.005813953488372093},"interfaces/CurrentUserInfo.html":{"ref":"interfaces/CurrentUserInfo.html","tf":0.02702702702702703},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.010869565217391304},"interfaces/InterfaceSignup.html":{"ref":"interfaces/InterfaceSignup.html","tf":0.02857142857142857},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.009708737864077669},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.008547008547008548},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.006172839506172839},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.006622516556291391},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637},"interfaces/TaskFormModel.html":{"ref":"interfaces/TaskFormModel.html","tf":0.023255813953488372},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.005535055350553505}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.012915129151291513}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}},"y":{"docs":{},".":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.005535055350553505}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"u":{"docs":{},"t":{"docs":{},"f":{"8":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}},"docs":{}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.002329838575470128},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.002871794871794872},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.002938398572777836}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.01056338028169014},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.011764705882352941},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.0103359173126615},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.012875536480686695}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/CommentPageModule.html":{"ref":"modules/CommentPageModule.html","tf":0.0392156862745098},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.03225806451612903},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.03278688524590164},"modules/OwnTaskPageModule.html":{"ref":"modules/OwnTaskPageModule.html","tf":0.03773584905660377},"modules/RoomMembersPageModule.html":{"ref":"modules/RoomMembersPageModule.html","tf":0.03636363636363636},"modules/SettingPageModule.html":{"ref":"modules/SettingPageModule.html","tf":0.0392156862745098},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.022388059701492536},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.030303030303030304},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.04081632653061224},"modules/TaskDetailPageModule.html":{"ref":"modules/TaskDetailPageModule.html","tf":0.03333333333333333},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.031746031746031744}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.027777777777777776},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.028901734104046242},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.021739130434782608},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.033816425120772944},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.03},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.029411764705882353}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.008583690987124463}}}}}}}}}}}}}}}}},"d":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.008583690987124463}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.008583690987124463}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.008583690987124463}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.008583690987124463}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.008583690987124463}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.027777777777777776},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.017341040462427744},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.03260869565217391},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.014492753623188406},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.03},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.03676470588235294}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}},".":{"docs":{},"t":{"docs":{"interfaces/TaskFormModel.html":{"ref":"interfaces/TaskFormModel.html","tf":0.023255813953488372},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.017543859649122806}},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}}}}}}}}}}}}},"k":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"routes.html":{"ref":"routes.html","tf":0.041666666666666664}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.02040816326530612},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.018404907975460124}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.024390243902439025},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}},"docs":{}},"docs":{}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008}}}}},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.01056338028169014},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.02702702702702703},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.024},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.04225352112676056},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.02857142857142857},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.011764705882352941}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.01764705882352941}}},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.005535055350553505},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.007751937984496124}}}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.02857142857142857},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.012269938650306749}}}},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.011764705882352941},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.013605442176870748}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374}},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.013605442176870748}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.011764705882352941},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.013605442176870748}}}}}}}}}}}}}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.02857142857142857}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.023255813953488372},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.012269938650306749}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.018018018018018018}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.012269938650306749}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.024390243902439025},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.028169014084507043},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.04878048780487805},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.012269938650306749}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}},"y":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.012269938650306749}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02564102564102564},"modules/ConfirmPageModule.html":{"ref":"modules/ConfirmPageModule.html","tf":0.03225806451612903},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.027777777777777776},"modules/LoginPageModule.html":{"ref":"modules/LoginPageModule.html","tf":0.03278688524590164},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.014925373134328358},"modules/SignupPageModule.html":{"ref":"modules/SignupPageModule.html","tf":0.030303030303030304},"modules/TaskPageModule.html":{"ref":"modules/TaskPageModule.html","tf":0.031746031746031744}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AddPersonLogic.html":{"ref":"injectables/AddPersonLogic.html","tf":0.043478260869565216},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.019230769230769232},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.024390243902439025},"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":0.030303030303030304},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.014925373134328358},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.03864734299516908},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102},"coverage.html":{"ref":"coverage.html","tf":0.0061162079510703364}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.004672897196261682},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.010869565217391304},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01},"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0136986301369863},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008},"injectables/SharedLogicService.html":{"ref":"injectables/SharedLogicService.html","tf":0.030303030303030304},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.005813953488372093},"interfaces/CurrentUserInfo.html":{"ref":"interfaces/CurrentUserInfo.html","tf":0.02702702702702703},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.010869565217391304},"interfaces/InterfaceSignup.html":{"ref":"interfaces/InterfaceSignup.html","tf":0.02857142857142857},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.009708737864077669},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.008547008547008548},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.006172839506172839},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.006622516556291391},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637},"interfaces/TaskFormModel.html":{"ref":"interfaces/TaskFormModel.html","tf":0.023255813953488372}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.01171875},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0029122982193376602},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0029743589743589744},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.003043341378948473}}}},"p":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/AddRoomModalComponent.html":{"ref":"components/AddRoomModalComponent.html","tf":0.009259259259259259},"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.041666666666666664},"components/ConfirmPage.html":{"ref":"components/ConfirmPage.html","tf":0.021739130434782608},"components/DeleteTaskModalComponent.html":{"ref":"components/DeleteTaskModalComponent.html","tf":0.012658227848101266},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.014492753623188406},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.014492753623188406},"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.02},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.024390243902439025},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.01652892561983471},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.022222222222222223},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.022058823529411766},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.017578125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.01511879049676026},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.015384615384615385},"injectables/ConfirmLogic.html":{"ref":"injectables/ConfirmLogic.html","tf":0.019230769230769232},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.018018018018018018},"injectables/OwnTaskService.html":{"ref":"injectables/OwnTaskService.html","tf":0.017857142857142856},"injectables/RoomMemberService.html":{"ref":"injectables/RoomMemberService.html","tf":0.014285714285714285},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.011764705882352941},"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.028169014084507043},"injectables/SettingService.html":{"ref":"injectables/SettingService.html","tf":0.024390243902439025},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.017543859649122806},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.008583690987124463},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.020202020202020204}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.005325345315360293},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.004923076923076923},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.024539877300613498},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.02912621359223301},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.005037254696190576}}},"y":{"docs":{},"a":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}}},"b":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.02158273381294964}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.00966183574879227}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.024390243902439025}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.016666666666666666},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0064794816414686825}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.0078125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"modules/CommentPageRoutingModule.html":{"ref":"modules/CommentPageRoutingModule.html","tf":0.023809523809523808},"modules/ConfirmPageRoutingModule.html":{"ref":"modules/ConfirmPageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/LoginPageRoutingModule.html":{"ref":"modules/LoginPageRoutingModule.html","tf":0.023809523809523808},"modules/OwnTaskPageRoutingModule.html":{"ref":"modules/OwnTaskPageRoutingModule.html","tf":0.022727272727272728},"modules/RoomMembersPageRoutingModule.html":{"ref":"modules/RoomMembersPageRoutingModule.html","tf":0.021739130434782608},"modules/SettingPageRoutingModule.html":{"ref":"modules/SettingPageRoutingModule.html","tf":0.023809523809523808},"modules/SignupPageRoutingModule.html":{"ref":"modules/SignupPageRoutingModule.html","tf":0.023809523809523808},"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.03636363636363636},"modules/TaskPageRoutingModule.html":{"ref":"modules/TaskPageRoutingModule.html","tf":0.023255813953488372},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.005535055350553505},"routes.html":{"ref":"routes.html","tf":0.041666666666666664}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"modules/TaskDetailPageRoutingModule.html":{"ref":"modules/TaskDetailPageRoutingModule.html","tf":0.01818181818181818},"routes.html":{"ref":"routes.html","tf":0.041666666666666664}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/NoContentComponent.html":{"ref":"components/NoContentComponent.html","tf":0.0273972602739726}}}}}}}},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.02},"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.014705882352941176},"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.057692307692307696},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.024},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/LoginPage.html":{"ref":"components/LoginPage.html","tf":0.01}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/SignupPage.html":{"ref":"components/SignupPage.html","tf":0.007352941176470588},"interfaces/InterfaceSignup.html":{"ref":"interfaces/InterfaceSignup.html","tf":0.08571428571428572}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.023985239852398525}},"e":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.012915129151291513}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.014925373134328358},"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.037383177570093455},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.008264462809917356},"coverage.html":{"ref":"coverage.html","tf":0.0061162079510703364}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/AddPersonLogic.html":{"ref":"injectables/AddPersonLogic.html","tf":0.043478260869565216},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.007462686567164179},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.014492753623188406}}}}}}}}}},"p":{"docs":{},"e":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.008583690987124463}},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.009345794392523364},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.012396694214876033},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.011764705882352941},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.014388489208633094}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678}}}}}},"u":{"docs":{},"s":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.004319654427645789}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}},"docs":{}},"docs":{}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.014492753623188406},"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009},"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.01652892561983471},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.009765625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.01079913606911447},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051}},"(":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.014492753623188406},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}},"r":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/RoomMembersPage.html":{"ref":"components/RoomMembersPage.html","tf":0.004132231404958678},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/OwnTaskPage.html":{"ref":"components/OwnTaskPage.html","tf":0.008130081300813009}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}},"docs":{}},"docs":{}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/LoginLogic.html":{"ref":"injectables/LoginLogic.html","tf":0.019230769230769232}},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/SettingLogic.html":{"ref":"injectables/SettingLogic.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.008583690987124463}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.011111111111111112},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135}}}}}}}}}}}},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}},"(":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/ListRoomComponent.html":{"ref":"components/ListRoomComponent.html","tf":0.004830917874396135}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.016}}}},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/OwnTaskLogic.html":{"ref":"injectables/OwnTaskLogic.html","tf":0.009009009009009009},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.05555555555555555},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.009765625}}}}}}}},"u":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.05}}}}}}},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.009568979863538026},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00676923076923077},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.008583690987124463},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.011627906976744186},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.010869565217391304},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.02564102564102564},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.024691358024691357},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.015151515151515152},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.006622516556291391},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.006926225207262042}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01282051282051282}}}}}}},"r":{"docs":{"components/AddPersonModalComponent.html":{"ref":"components/AddPersonModalComponent.html","tf":0.014018691588785047},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.027777777777777776},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.01079913606911447},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.01381261441171576},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.01158974358974359},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.01744186046511628},"interfaces/CurrentUserInfo.html":{"ref":"interfaces/CurrentUserInfo.html","tf":0.02702702702702703},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.03260869565217391},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.008547008547008548},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.006172839506172839},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.015151515151515152},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.019867549668874173},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.011858537097281982},"coverage.html":{"ref":"coverage.html","tf":0.0030581039755351682}},"i":{"docs":{},"d":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.017341040462427744},"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.007194244604316547},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.005859375},"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0054917623564653024},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0029743589743589744},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.017605633802816902},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.012915129151291513},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.01808785529715762},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.02145922746781116},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.01744186046511628},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.03260869565217391},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.008547008547008548},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.006172839506172839},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.019867549668874173},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.003043341378948473}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.017341040462427744}}}}},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.008}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/SessionService.html":{"ref":"injectables/SessionService.html","tf":0.016}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.00966183574879227},"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.009568979863538026},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.009948717948717949},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.02631578947368421},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.008583690987124463},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.011627906976744186},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.010869565217391304},"interfaces/InterfaceSignup.html":{"ref":"interfaces/InterfaceSignup.html","tf":0.08571428571428572},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.02564102564102564},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.024691358024691357},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.015151515151515152},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.019867549668874173},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.01017945219855179}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TaskPage.html":{"ref":"components/TaskPage.html","tf":0.0021598272138228943}}}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"r":{"docs":{},"p":{"docs":{},"_":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.008771929824561403}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/AddTaskModalComponent.html":{"ref":"components/AddTaskModalComponent.html","tf":0.005780346820809248},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125},"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.0058823529411764705},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}}}}}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0401065069063072},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.03435897435897436},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.046511627906976744},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.043478260869565216},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.02912621359223301},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.03418803418803419},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.037037037037037035},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.015151515151515152},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.033112582781456956},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.035155840067163394}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}},"y":{"docs":{},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000314828418511911}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"e":{"docs":{},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000314828418511911}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916}},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000314828418511911}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916}},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000314828418511911}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.005535055350553505},"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.011627906976744186},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskDetailService.html":{"ref":"injectables/TaskDetailService.html","tf":0.023255813953488372}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.012269938650306749}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375},"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.012269938650306749}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.006134969325153374}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskService.html":{"ref":"injectables/TaskService.html","tf":0.012269938650306749}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.0035211267605633804},"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.006802721088435374},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"$":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.007042253521126761},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.004291845493562232}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/HomeService.html":{"ref":"injectables/HomeService.html","tf":0.013605442176870748}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.0003328340822100183},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00041025641025641023},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000314828418511911}}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00008320852055250458},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00010256410256410256},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000104942806170637}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.002583979328165375}},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.00516795865633075}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}},"docs":{}},"docs":{}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0036900369003690036}}}}}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.00390625},"injectables/HomeLogic.html":{"ref":"injectables/HomeLogic.html","tf":0.014084507042253521},"injectables/SignupLogicService.html":{"ref":"injectables/SignupLogicService.html","tf":0.017543859649122806},"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.005535055350553505},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.0103359173126615},"interfaces/Attribute.html":{"ref":"interfaces/Attribute.html","tf":0.017167381974248927}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"8":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/TaskDetailLogic.html":{"ref":"injectables/TaskDetailLogic.html","tf":0.0018450184501845018}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/EditProfileModalComponent.html":{"ref":"components/EditProfileModalComponent.html","tf":0.004830917874396135},"components/TaskDetailPage.html":{"ref":"components/TaskDetailPage.html","tf":0.001953125}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.001164919287735064},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.0012307692307692308},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.001259313674047644}}},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"u":{"docs":{},"s":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.01764705882352941},"injectables/TaskLogic.html":{"ref":"injectables/TaskLogic.html","tf":0.0103359173126615}},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/RoomMembersLogic.html":{"ref":"injectables/RoomMembersLogic.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/SettingPage.html":{"ref":"components/SettingPage.html","tf":0.005555555555555556},"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.08512231652521218},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.06994871794871795},"interfaces/CompanyMembers.html":{"ref":"interfaces/CompanyMembers.html","tf":0.01744186046511628},"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.021739130434782608},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.009708737864077669},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.017094017094017096},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.018518518518518517},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.005050505050505051},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.046357615894039736},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.07157099380837444}}}}}}}}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"interfaces/InterfaceRoomMembers.html":{"ref":"interfaces/InterfaceRoomMembers.html","tf":0.021739130434782608},"interfaces/InterfaceTask.html":{"ref":"interfaces/InterfaceTask.html","tf":0.019417475728155338},"interfaces/InterfaceUser.html":{"ref":"interfaces/InterfaceUser.html","tf":0.017094017094017096},"interfaces/MemberTask.html":{"ref":"interfaces/MemberTask.html","tf":0.012345679012345678},"interfaces/OwnUser.html":{"ref":"interfaces/OwnUser.html","tf":0.010101010101010102},"interfaces/ResponseListRoomGroupsQueryItems.html":{"ref":"interfaces/ResponseListRoomGroupsQueryItems.html","tf":0.013245033112582781}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"injectables/APIService.html":{"ref":"injectables/APIService.html","tf":0.00016641704110500916},"injectables/AmplifyService.html":{"ref":"injectables/AmplifyService.html","tf":0.00020512820512820512},"interfaces/SubscriptionResponse.html":{"ref":"interfaces/SubscriptionResponse.html","tf":0.000209885612341274}}}}}}}},"length":5527},"corpusTokens":["0","0/0","0/1","0/10","0/12","0/13","0/15","0/17","0/2","0/27","0/28","0/3","0/4","0/44","0/5","0/56","0/6","0/7","0/8","0/9","00","1","1)).slice","1).tostr","1)[0","1.amazonaws.com","1/1","10","100","11","12","19","2","2000","21","23","30","400","50","604800","9/18","___typenam","__typenam","_null","a.prior","abstractcontrol","actionlogout","actionsheet","actionsheet.pres","actionsheetcontrol","actionsheetctrl","activ","activatedrout","activatedroutesnapshot","activeactionsheet","activeactionsheet.pres","activeeditmod","activesorttaskitem","activetaskitem","add","addcommenttotaskdetail","addcommenttotaskdetail(task","addmemberonroom","addmemberstoanyroom","addmemberstoanyroom(arrayuserid","addpersonlog","addpersonmodalcompon","addpersontotask","addroommodalcompon","addtaskmodalcompon","afterviewinit","alert","alert.pres","alertcontrol","alertctrl","allowedit","alreadi","amplifi","amplify/api","amplify/api/lib/typ","amplifyservic","angular","angular/common","angular/cor","angular/form","angular/platform","angular/rout","api","api.graphql","apiservic","app","app.compon","app.component.html","app.component.scss","appcompon","appmodul","approutingmodul","appsync","array","arrayattachmenturi","arraybase64data","arrayimagebase64data","arrayselectedpersonid","async","atob(base64data.replac","attachment_${uuid()}_${taskid","attachmenturi","attribut","attributeexist","attributetyp","auth","authenticationflowtyp","authguard","author","authorid","aw","await","b","b.prioriti","backdropdismiss","bar/ngx","base64data","base64data.split","base64result","base64toblob","base64toblob(base64data","beginswith","behaviorsubject","behaviorsubject(fals","between","binari","binaryset","blob","blobfil","block","block[0].split(\":\")[1","bool","boolean","bootstrap","brows","browser","browsermodul","buffer","button","bytecharact","camera","camera.getphoto","cameraresulttyp","cameraresulttype.dataurl","canactiv","canactivate(next","cancel","cancelsearch","cancelsearch(ev","capacitor/cor","catcherror","changecheckus","changecheckuser(memb","changed","chargeperson","chargepersonid","chargetask","check","checknotassignmemb","checknotassignmember(companymemb","checkpassword","checkpasswords(group","checkregistrationus","checkregistrationuser(attribut","checkregistrationuser(email","child","class","clearsearch","clearsearch(ev","client","code","cognito","cognitoidentityserviceprovider.47bkbu7qf1aue8v7i0elq754tr.r.taaaaabo+dev03@gmail.com.userdata","comment","comment.pag","comment.page.html","comment.page.scss","commentpag","commentpagemodul","commentpageroutingmodul","commonmodul","compani","companyid","companymemb","companymember.id","companymembers.filter((companymemb","companyus","comparetaskarray","comparetaskarray(a","compon","component/modal/add","component/modal/delet","component/modal/edit","component/no","componentprop","componet/list","concat","concatmap","concatmap((result","condit","confirm","confirm.pag","confirm.page.html","confirm.page.scss","confirmform","confirmlog","confirmlogout","confirmnumb","confirmpag","confirmpagemodul","confirmpageroutingmodul","confirmpassword","confirmpasswordform","confirmsignup","confirmsignup(usernam","confirmtargetemail","console.log('activeeditmod","console.log('cancelsearch","console.log('changed","console.log('clearsearch","console.log('resendsignup","console.log('respons","console.log('searchbarがnul","console.log('servic","console.log('taskactiveitem","console.log(result","const","constructor","constructor(actionsheetctrl","constructor(amplifyservic","constructor(homeservic","constructor(loc","constructor(log","constructor(modalctrl","constructor(owntaskservic","constructor(platform","constructor(priv","constructor(publ","constructor(roommemberservic","constructor(rout","constructor(sessionservic","constructor(taskdetailservic","constructor(taskservic","contain","content","content.compon","content.component.html","content.component.scss","content.component.t","content.descriptionitem","content.nameitem","content/no","contentobject","contenttyp","coverag","createcompani","createcompany($input","createcompany(input","createcompanyinput","createcompanymut","createdat","createitem","createmessag","createmessage($input","createmessage(input","createmessageinput","createmessageitem","createmessageitem(inputcont","createmessagemut","createroom","createroom($input","createroom(cont","createroom(input","createroomgroup","createroomgroup($input","createroomgroup(cont","createroomgroup(input","createroomgroup(userid","createroomgroupinput","createroomgroupmut","createroominput","createroommut","createtask","createtask($input","createtask(input","createtaskgroup","createtaskgroup($input","createtaskgroup(input","createtaskgroupinput","createtaskgroupmut","createtaskinput","createtaskitem","createtaskitem(cont","createtaskmut","createtasktoroom","createtasktoroom(taskformdata","createus","createuser($input","createuser(cont","createuser(formcont","createuser(input","createuser(valu","createuserinput","createusermut","createuserroomgroup","createuserroomgroup(filtercont","createuserroomgroup(userid","cssclass","currentd","currentdate.getfullyear","currentdate.getfullyear()).tostr","currentdate.toisostr","currentisostr","currentus","currentuseid","currentuseremail","currentuserid","currentuserinfo","custom","customev","data","data.activetaskitems.sort(this.logic.comparetaskarray","data.companyuser.item","data.donetaskitem","data.item","data.key","data.length","data.result","data.room","data.roommemb","data.statu","data.sub","date","date().toisostr","declar","default","delet","deletecompani","deletecompany($input","deletecompany(input","deletecompanyinput","deletecompanymut","deleteimag","deleteimage(indextarget","deletemessag","deletemessage($input","deletemessage(input","deletemessageinput","deletemessagemut","deleteroom","deleteroom($input","deleteroom(input","deleteroom(roomid","deleteroomgroup","deleteroomgroup($input","deleteroomgroup(input","deleteroomgroupinput","deleteroomgroupmut","deleteroomgroupsitem","deleteroomgroupsitem(roomgroupid","deleteroominput","deleteroomitem","deleteroomitem(roomid","deleteroommut","deletetargettask","deletetargettask(taskitem","deletetask","deletetask($input","deletetask(input","deletetask(task","deletetask(taskdetail","deletetaskgroup","deletetaskgroup($input","deletetaskgroup(input","deletetaskgroupinput","deletetaskgroupmut","deletetaskinput","deletetaskitem","deletetaskitem(cont","deletetaskitem(taskid","deletetaskmodalcompon","deletetaskmut","deleteus","deleteuser($input","deleteuser(input","deleteuserinput","deleteusermut","descript","descriptionitem","destruct","detail","detail.log","detail.logic.t","detail.module.t","detail.pag","detail.page.html","detail.page.scss","detail.page.t","detail.servic","detail.service.t","detail/logic/task","detail/service/task","detail/task","directori","dirnam","dirname}/${filename}.${ext","dismiss","dismissdata","dismissdata.descriptionitem","dismissdata.nameitem","dismissdata.scheduledateitem","dismissmod","dismissobserv","document","domain","done","doneactionsheet","doneactionsheet.pres","donetask","donetask(taskdetail","donetask(taskformitem","donetaskitem","dt","dt.getminutes()).slic","dt.getmonth","dt.gettim","dt.getutcdate()).slic","dt.getutcfullyear()).slic","dt.getutchours()).slic","dt.getutcseconds()).slic","durat","dynamodb","edit","editprofileform","editprofilemodalcompon","email","email_verifi","encod","endpoint","entrycompon","entrysignupus","entrysignupuser(valu","entryusersignup","entryusersignup(valueobj","enum","environ","eq","error","ev","ev.detail.complet","ev.detail.valu","expir","export","ext","extraopt","fals","fetchactivetaskperroom","fetchactivetaskperroom(roomid","fetchanytask","fetchanytask(taskid","fetchcompanymemb","fetchcompanymember(companyid","fetchcompanymember(cont","fetchcurrentus","fetchcurrentuser(currentuserid","fetchcurrentuserid","fetchcurrentuserinfo","fetchdonetaskperroom","fetchdonetaskperroom(roomid","fetchmemberlistonroom","fetchmemberlistonroom(roomid","fetchmessagepertask","fetchmessagepertask(filterinfo","fetchmessagepertask(taskid","fetchnonassignroommembergroup","fetchnonassignroommembergroup(roomid","fetchopt","fetchroomgroupsid","fetchroomgroupsid(filtercont","fetchroomgroupsid(roomid","fetchroominfo","fetchroominfo(roomid","fetchroominfo(taskitem","fetchroominfoitem","fetchroominfoitem(taskitem","fetchroomlist","fetchroomlist(currentuseid","fetchroomlist(filtercont","fetchroommemb","fetchroommember(cont","fetchroommember(filtercont","fetchroommembergroup","fetchroommembergroup(roomid","fetchroommembers(filtercont","fetchroommembers(roomid","fetchtaskitemsperroom","fetchtaskitemsperroom(cont","fetchtaskitemsperroom(filtercont","fetchuserinfo","fetchuserinfo(userid","fetchuserinfofromamplifi","fetchuserinfofromamplify(userid","file","filedata","filedelet","filedelete(filenam","filedeleteresult","filenam","fileread","fileread(filenam","filereadresult","filesystem","filesystemdirectori","filesystemdirectory.docu","filesystemencod","filesystemencoding.utf8","filewrit","filewrite(filenam","filewriteresult","filter","filtercont","findindex","flatmap","forkjoin","form.model","form.model.t","formcontent.get('iconimage').valu","formcontent.get('id').valu","formcontent.get('positionname').valu","formcontent.get('targetemail').valu","formcontent.get('tel').valu","formcontent.get('username').valu","formcontrol","formgroup","formsmodul","formvalu","formvalue.email","formvalue.usernam","fragment","fragmentcom","from(arraybase64data","from(arraytask","from(arrayuserid).pipe(concatmap((userid","from(auth.confirmsignup(usernam","from(auth.currentauthenticatedus","from(auth.currentauthenticateduser()).pip","from(auth.resendsignup(usernam","from(auth.signin(email","from(auth.signout","from(auth.signup(valueobj","from(data","from(filesystem.deletefil","from(filesystem.readfil","from(filesystem.writefil","from(item","from(modal.ondiddismiss","from(storage.get(filenam","from(storage.put(filenam","from(taskactiveitem","from(taskitem","from(this.amplifyservice.createmessage(inputcont","from(this.amplifyservice.createroom(cont","from(this.amplifyservice.createroomgroup(cont","from(this.amplifyservice.createroomgroup(filtercont","from(this.amplifyservice.createtask(cont","from(this.amplifyservice.createuser(cont","from(this.amplifyservice.createuser(createus","from(this.amplifyservice.deleteroom(requestcont","from(this.amplifyservice.deleteroomgroup(requestcont","from(this.amplifyservice.deletetask(cont","from(this.amplifyservice.getroom(roomid","from(this.amplifyservice.gettask(taskid","from(this.amplifyservice.getuser(currentuserid","from(this.amplifyservice.getuser(userid","from(this.amplifyservice.listmessages(filterinfo","from(this.amplifyservice.listroomgroups(cont","from(this.amplifyservice.listroomgroups(filtercont","from(this.amplifyservice.listtasks(cont","from(this.amplifyservice.listusers(cont","from(this.amplifyservice.listusers(filtercont","from(this.amplifyservice.updatetask(cont","from(this.amplifyservice.updatetask(inputcont","from(this.amplifyservice.updateuser(cont","from(this.platform.readi","from(this.presentdonetoast","from(this.presentmovetask","from(this.taskactiveitem","from(this.taskdetailservice.gettask(taskid","full","ge","getcompani","getcompany($id","getcompany(id","getcompanyqueri","getcontenttyp","getcontenttype(base64data","getdirstr","getdirstring(dt","getindexnewarray","getindexnewarray(taskactiveitem","getmessag","getmessage($id","getmessage(id","getmessagequeri","getroom","getroom($id","getroom(id","getroomgroup","getroomgroup($id","getroomgroup(id","getroomgroupqueri","getroomqueri","getstorag","getstorage(filenam","gettask","gettask($id","gettask(id","gettask(taskid","gettaskchargeitem","gettaskchargeitems(userid","gettaskgroup","gettaskgroup($id","gettaskgroup(id","gettaskgroupqueri","gettaskqueri","getus","getuser($id","getuser(id","getuserinfo","getuserinfo(userid","getuserqueri","gobacktologin","gobacktoroom","gqlapiserviceargu","gqlapiservicearguments.condit","gqlapiservicearguments.filt","gqlapiservicearguments.limit","gqlapiservicearguments.nexttoken","graphql","graphqloper","graphqloperation(stat","graphqlresult","group","group${uuid","group.get('confirmpasswordform').valu","group.get('passwordform').valu","groupbi","gt","handler","header","height","home","home.pag","home.page.html","home.page.scss","homelog","homepag","homepagemodul","homepageroutingmodul","homeservic","htmlelement","https://cognito","iconimag","id","id/:seg","identifi","idp.ap","imag","imagepick","implement","import","index","indexarray","indextargetid","info","info.interfac","info.interface.t","initializeapp","inject","input","inputcont","inputsearch","inputsearch(ev","int","interfac","interface/curr","interface/room","interfaceroommemb","interfaces/signup.interfac","interfacesignup","interfacetask","interfaceus","ioncont","ionic","ionic/angular","ionic/cor","ionicmodul","ionicmodule.forroot","ionicroutestrategi","ionviewwillent","isauthent","ischeckfabbutton","isonowd","isonowdate}_${uuid","isostringd","isreord","issent","item","item.id","item.room","item.task.id","item.us","item.userid","item.valu","itemmov","itemreordereventdetail","items.length","items.sort(this.logic.comparetaskarray","items[0].id","le","limit","link","list","listcompani","listcompanys($filt","listcompanys(filt","listcompanysqueri","listmessag","listmessages($filt","listmessages(filt","listmessagesqueri","listroom","listroomcompon","listroomgroup","listroomgroups($filt","listroomgroups(filt","listroomgroupsqueri","listroommembersinfo","listrooms($filt","listrooms(filt","listroomsqueri","listtask","listtaskgroup","listtaskgroups($filt","listtaskgroups(filt","listtaskgroupsqueri","listtasks($filt","listtasks(filt","listtasksqueri","listus","listuserinfo","listusers($filt","listusers(filt","listusersqueri","load","loading.ondiddismiss","loading.pres","loadingcontrol","loadingctrl","locat","loggedin","logic","logic.servic","logic.service.t","logic/confirm.log","logic/home.log","logic/login","logic/own","logic/room","logic/setting.log","logic/shar","logic/signup","logic/task","logic/task.log","login","login.pag","login.page.html","login.page.scss","loginform","loginlog","loginpag","loginpagemodul","loginpageroutingmodul","logoutactionsheet","logoutactionsheet.pres","lt","makeext","makeext(contenttyp","makeowntaskitem","makeowntaskitems(taskitem","map","match","math.floor(100000","math.random","maximumimagescount","maxyear","meid","member","member.id","member.model","member.model.t","member.servic","member.service.t","members.interfac","members.interface.t","members.log","members.logic.t","members.model","members.module.t","members.pag","members.page.html","members.page.scss","members.page.t","members/interface/room","members/logic/room","members/room","members/service/room","membertask","messag","messagecont","messageをsubscrib","metadata","method","minyear","miscellan","modal","modal.compon","modal.component.html","modal.component.scss","modal.component.t","modal.ondiddismiss().then","modal.pres","modal/add","modal/delet","modal/edit","modalcontrol","modalctrl","model/task","modelattributetyp","modelbooleaninput","modelcompanyconditioninput","modelcompanyconnect","modelcompanyfilterinput","modelidinput","modelintinput","modelmessageconditioninput","modelmessageconnect","modelmessagefilterinput","modelroomconditioninput","modelroomconnect","modelroomfilterinput","modelroomgroupconditioninput","modelroomgroupconnect","modelroomgroupfilterinput","models/room","modelsizeinput","modelstringinput","modeltaskconditioninput","modeltaskconnect","modeltaskfilterinput","modeltaskgroupconditioninput","modeltaskgroupconnect","modeltaskgroupfilterinput","modeluserconditioninput","modeluserconnect","modeluserfilterinput","modul","movetask","movetask(taskdetail","mutat","name","nameitem","namequeri","native/imag","native/splash","native/statu","navigatetoroommemb","navigatetosignup","navigatetotask","navigatetotask(room","navigatetotaskdetail","navigatetotaskdetail(item","navigatetotaskdetail(task","ne","new","newmsg","nexttoken","ngafterviewinit","ngmodul","ngoninit","nocontentcompon","node","northeast","notassignmemb","notcontain","notsam","npm","null","number","numberset","observ","observable型でcreatemessageitem","observable型でcurrentuserinfo","observable型でfetchroommemb","observable型でonmessagelisten","observable型でs3","observable型でupdatetaskitem","of('alreadi","of(contenttyp","of(contenttype.match(/([^/]+?)?$/)[0","of(fals","of(this.taskactiveitem","oncancel","oncreatecompani","oncreatecompanylisten","oncreatecompanysubscript","oncreatemessag","oncreatemessagelisten","oncreatemessagesubscript","oncreateroom","oncreateroomgroup","oncreateroomgrouplisten","oncreateroomgroupsubscript","oncreateroomlisten","oncreateroomsubscript","oncreatetask","oncreatetaskgroup","oncreatetaskgrouplisten","oncreatetaskgroupsubscript","oncreatetasklisten","oncreatetasksubscript","oncreateus","oncreateuserlisten","oncreateusersubscript","ondeletecompani","ondeletecompanylisten","ondeletecompanysubscript","ondeletemessag","ondeletemessagelisten","ondeletemessagesubscript","ondeleteroom","ondeleteroomgroup","ondeleteroomgrouplisten","ondeleteroomgroupsubscript","ondeleteroomlisten","ondeleteroomsubscript","ondeletetask","ondeletetaskgroup","ondeletetaskgrouplisten","ondeletetaskgroupsubscript","ondeletetasklisten","ondeletetasksubscript","ondeleteus","ondeleteuserlisten","ondeleteusersubscript","oneweeksecond","oninit","onmessagelisten","onsubmit","onupdatecompani","onupdatecompanylisten","onupdatecompanysubscript","onupdatemessag","onupdatemessagelisten","onupdatemessagesubscript","onupdateroom","onupdateroomgroup","onupdateroomgrouplisten","onupdateroomgroupsubscript","onupdateroomlisten","onupdateroomsubscript","onupdatetask","onupdatetaskgroup","onupdatetaskgrouplisten","onupdatetaskgroupsubscript","onupdatetasklisten","onupdatetasksubscript","onupdateus","onupdateuserlisten","onupdateusersubscript","option","out","outputtyp","overview","owntaskitem","owntasklog","owntaskpag","owntaskpagemodul","owntaskpageroutingmodul","owntaskservic","ownus","pagekind","pages/home/logic/home.log","pages/task/component/add","param","paramet","password","password).subscrib","passwordform","path","pathmatch","person","person.logic.t","picker/ngx","pickerimag","pipe","pipe((concatmap","pipe(catcherror","pipe(catcherror((error","pipe(concatmap","pipe(concatmap((base64data","pipe(concatmap((blobfil","pipe(concatmap((contenttyp","pipe(concatmap((currentuserid","pipe(concatmap((data","pipe(concatmap((indexarray","pipe(concatmap((r","pipe(concatmap((result","pipe(concatmap((room","pipe(concatmap((roomgroupid","pipe(concatmap((roominfo","pipe(concatmap((taskactiveitem","pipe(concatmap((taskitem","pipe(filt","pipe(filter((data","pipe(filter((item","pipe(filter((result","pipe(findindex(taskitem","pipe(flatmap","pipe(flatmap((result","pipe(map","pipe(map((attribut","pipe(map((base64result","pipe(map((currentuserid","pipe(map((data","pipe(map((memb","pipe(map((r","pipe(map((result","pipe(map((us","pipe(map(result","pipe(switchmap","pipe(switchmap((data","pipe(tap","pipe(toarray","platform","plugin","positionnam","presentactionsheet","presentactionsheet(taskdetail","presentaddroomitem","presentaddroomitem(companyid","presentaddtask","presentalert","presentconfirmdelet","presentconfirmdelete(task","presentdonetoast","presenteditmod","presentload","presentmodaledittask","presentmodaledittask(taskdetail","presentmovetask","presentregistrationus","presenttoast","prioriti","prioritya","priorityb","privat","profil","project","promis","promptlabelcancel","promptlabelhead","promptlabelphoto","promptlabelpictur","properti","provid","providedin","putstorag","putstorage(filenam","qualiti","queri","queryfilterus","queryfilterusernam","r.taaaaabo+dev03@gmail.com","random","randomfloor","randommath","randommath.tostring(16","re","reactiveformsmodul","readm","readonli","redirectto","regist","removemefromroom","removemefromroom(roomid","removeownfromroom","removeownfromroom(roomid","reordertask","reordertask(ev","requestcont","res.attribut","res.attributes.sub","res.email","res.item","res.sub","resendconfirm","resendconfirm(usernam","resendconfirmnumberforsignup","resendconfirmnumberforsignup(usernam","resendsignup","reset","respons","response.data.createcompani","response.data.createmessag","response.data.createroom","response.data.createroomgroup","response.data.createtask","response.data.createtaskgroup","response.data.createus","response.data.deletecompani","response.data.deletemessag","response.data.deleteroom","response.data.deleteroomgroup","response.data.deletetask","response.data.deletetaskgroup","response.data.deleteus","response.data.getcompani","response.data.getmessag","response.data.getroom","response.data.getroomgroup","response.data.gettask","response.data.gettaskgroup","response.data.getus","response.data.listcompani","response.data.listmessag","response.data.listroom","response.data.listroomgroup","response.data.listtask","response.data.listtaskgroup","response.data.listus","response.data.updatecompani","response.data.updatemessag","response.data.updateroom","response.data.updateroomgroup","response.data.updatetask","response.data.updatetaskgroup","response.data.updateus","responselistroomgroupsqueryitem","result","result.chargetask","result.item","result.sub","result.us","resulttyp","return","role","room","room.compon","room.component.html","room.component.scss","room.component.t","room.id","room/list","roomgroup","roomgroupid","roomgroupsitem","roomid","roomid/:companyid","roominfo","roomitemgroup","roommemb","roommember.id","roommembers.some((roommemb","roommemberservic","roommemberslog","roommemberspag","roommemberspagemodul","roommemberspageroutingmodul","roomにtask","root","rout","router","routereusestrategi","routermodul","routermodule.forchild(rout","routerstatesnapshot","routing.modul","routing.module.t","rxj","rxjs/oper","s3","saveprofil","scheduled","scheduledateitem","screen/ngx","scroll","searchroommemb","searchroommembers(ev","segment","segmentchang","segmentchanged(ev","selectfil","selector","sendconfirmus","sendconfirmuser(usernam","sendlogininfo","sendlogininfo(email","sendmessag","sendnewmessag","sendnewmessage(taskid","service/home.servic","service/own","service/reponse/response.model","service/room","service/session.servic","service/setting.servic","service/task","service/task.servic","session","sessionservic","set","setexitsroomandus","setexitsroomanduser(data","setroommemb","setroommembers(item","settaskperroom","settaskperroom(arraytask","setting.pag","setting.page.html","setting.page.scss","settinglog","settingpag","settingpagemodul","settingpageroutingmodul","settingservic","shared/component/modal/add","shared/component/modal/edit","shared/service/amplify.servic","shared/service/session.servic","shared/shared.modul","sharedlogicservic","sharedmodul","signout","signup","signup.pag","signup.page.html","signup.page.scss","signupcont","signupform","signuplogicservic","signuppag","signuppagemodul","signuppageroutingmodul","size","sourc","splashscreen","src/app/api.servic","src/app/api.service.t","src/app/app.component.t","src/app/app.module.t","src/app/guard/auth.guard.t","src/app/interfaces/signup.interface.t","src/app/interfaces/task.interfac","src/app/interfaces/task.interface.t","src/app/pages/comment/com","src/app/pages/comment/comment.module.t","src/app/pages/comment/comment.page.t","src/app/pages/confirm/confirm","src/app/pages/confirm/confirm.module.t","src/app/pages/confirm/confirm.page.t","src/app/pages/confirm/logic/confirm.logic.t","src/app/pages/home/componet/list","src/app/pages/home/hom","src/app/pages/home/home.module.t","src/app/pages/home/home.page.t","src/app/pages/home/logic/home.logic.t","src/app/pages/home/service/home.service.t","src/app/pages/home/service/reponse/response.model.t","src/app/pages/login/logic/login","src/app/pages/login/login","src/app/pages/login/login.module.t","src/app/pages/login/login.page.t","src/app/pages/own","src/app/pages/room","src/app/pages/setting/logic/setting.logic.t","src/app/pages/setting/service/setting.service.t","src/app/pages/setting/set","src/app/pages/setting/setting.module.t","src/app/pages/setting/setting.page.t","src/app/pages/signup/logic/signup","src/app/pages/signup/signup","src/app/pages/signup/signup.module.t","src/app/pages/signup/signup.page.t","src/app/pages/tabs/tabs.module.t","src/app/pages/tabs/tabs.page.t","src/app/pages/task","src/app/pages/task/component/add","src/app/pages/task/interface/curr","src/app/pages/task/logic/add","src/app/pages/task/logic/task.logic.t","src/app/pages/task/model/task","src/app/pages/task/service/task.service.t","src/app/pages/task/task","src/app/pages/task/task.module.t","src/app/pages/task/task.page.t","src/app/shared/component/modal/add","src/app/shared/component/modal/delet","src/app/shared/component/modal/edit","src/app/shared/component/no","src/app/shared/logic/shar","src/app/shared/model/task","src/app/shared/service/amplify.servic","src/app/shared/service/amplify.service.t","src/app/shared/service/session.servic","src/app/shared/service/session.service.t","src/app/shared/shared.module.t","state","statement","static","statu","statusbar","statusbarinforesult","storag","string","stringset","styleurl","sub","subscrib","subscribe((data","subscribe((item","subscribe((r","subscribe((respons","subscribe((result","subscript","subscriptionrespons","success","support","svg","switchmap","tab","tabs.pag","tabs.page.html","tabs.page.scss","tabspag","tabspagemodul","tabspageroutingmodul","takephoto","takucloudcom","takucloudcon","tap","targetemail","targetindex","targetitem","targetitem.id","targetitem.prior","targettaskitem","targettaskitem.id","task","task.id","task.log","task.logic.t","task.module.t","task.pag","task.page.html","task.page.scss","task.page.t","task.servic","task.service.t","task/component/add","task/interface/curr","task/logic/own","task/own","task/service/own","taskactiveitem","taskactiveitem.id","taskactiveitems[indexarray","taskdetail","taskdetaillog","taskdetailpag","taskdetailpagemodul","taskdetailpageroutingmodul","taskdetailservic","taskdoneitem","taskform","taskformdata","taskformdata.chargepersonid","taskformdata.descriptionitem","taskformdata.nameitem","taskformdata.scheduledateitem","taskformitem.id","taskformmodel","taskgroup","taskid","taskitem","taskitem.id","taskitem.prior","taskitem.roomid","taskitemのobject","tasklog","taskpag","taskpagemodul","taskpageroutingmodul","taskservic","tel","templateurl","text","then((result","this.actionlogout","this.actionsheetctrl.cr","this.alertctrl.cr","this.amplifyservice.oncreatemessagelisten","this.arrayimagebase64data","this.arrayimagebase64data.length","this.arrayimagebase64data.push(image.dataurl","this.arrayimagebase64data.splice(indextarget","this.arrayselectedpersonid","this.arrayselectedpersonid.findindex(item","this.arrayselectedpersonid.push(member.id","this.arrayselectedpersonid.splice(indextargetid","this.attribut","this.attributes.email","this.attributes.sub","this.base64toblob(base64data","this.checknotassignmember(this.companymemb","this.checknotassignmember(this.notassignmemb","this.checkpassword","this.companyid","this.companymemb","this.confirmform.get('confirmnumber').value).subscrib","this.confirmtargetemail","this.createuserroomgroup(userid","this.currentisostr","this.currentus","this.currentuseremail","this.currentuserid","this.deleteroomitem(roomid","this.deletetask(task","this.deletetask(taskdetail","this.donetask(taskdetail","this.editprofileform.patchvalu","this.email","this.fetchroomgroupsid(roomid","this.fetchroominfo(taskitem","this.getcontenttype(base64data","this.getdirstring(dt","this.homeservice.checkregistrationuser(attribute.email","this.homeservice.createroom(requestcont","this.homeservice.createuser(requestcont","this.homeservice.createuserroomgroup(cont","this.homeservice.deleteroomgroupsitem(roomgroupid","this.homeservice.deleteroomitem(roomid","this.homeservice.fetchroomgroupsid(filtercont","this.homeservice.fetchroomlist(filtercont","this.homeservice.fetchroommembers(filtercont","this.homeservice.updateuser(requestcont","this.imagepicker.getpictures(opt","this.initializeapp","this.isreord","this.loadingctrl.cr","this.location.back","this.loggedin","this.loggedin.next(fals","this.loggedin.next(tru","this.logic.addmemberstoanyroom(this.arrayselectedpersonid","this.logic.checkregistrationuser(this.attribut","this.logic.createroom(data","this.logic.createtasktoroom(this.taskformdata","this.logic.createuser(this.editprofileform","this.logic.createuserroomgroup(this.currentuserid","this.logic.deleteroomitem(roomid","this.logic.deletetaskitem(task.id","this.logic.entrysignupuser(valu","this.logic.fetchactivetaskperroom(this.roomid","this.logic.fetchanytask(taskdetail.id","this.logic.fetchanytask(this.taskid","this.logic.fetchcompanymember(this.companyid","this.logic.fetchcompanymember(this.user.companyid","this.logic.fetchcurrentus","this.logic.fetchcurrentuser(this.currentuserid","this.logic.fetchcurrentuserid","this.logic.fetchcurrentuserinfo","this.logic.fetchcurrentuserinfo().subscribe((r","this.logic.fetchdonetaskperroom(this.roomid","this.logic.fetchdonetaskperroom(this.roomid).subscribe((data","this.logic.fetchmemberlistonroom(this.roomid).pipe(map","this.logic.fetchmemberlistonroom(this.taskdetail.roomid","this.logic.fetchmessagepertask(this.taskid","this.logic.fetchroominfo(this.roomid","this.logic.fetchroomlist(this.currentuserid","this.logic.fetchroommembergroup(this.roomid","this.logic.fetchroommembers(roomid","this.logic.fetchroommembers(this.roomid","this.logic.fetchuserinfo(result.usernam","this.logic.fetchuserinfofromamplify(this.currentuserid","this.logic.getindexnewarray(this.taskactiveitem","this.logic.getstorage(result","this.logic.gettaskchargeitems(currentuserid","this.logic.oncreatemessagelisten","this.logic.removemefromroom(roomid","this.logic.sendconfirmuser(this.confirmtargetemail","this.logic.sendlogininfo(email","this.logic.sendnewmessage(this.taskid","this.logic.setexitsroomanduser(data","this.logic.setroommembers(item","this.logic.setroommembers(result","this.logic.settaskperroom(item","this.logic.signout","this.logic.updatedonetaskitem(taskformitem","this.logic.updatestatustaskitems(this.taskactiveitem","this.logic.updatetaskitem(taskdetail","this.logic.updatetaskitempriority(indexarray","this.logic.updatetasktoroom(data","this.logic.updateuser(this.editprofileform","this.logic.uploadfile(this.arrayimagebase64data","this.loginform.get('email').valu","this.loginform.get('password').valu","this.makeext(contenttyp","this.makeowntaskitems(taskitem","this.maxyear","this.memb","this.members.findindex(item","this.members[targetindex].check","this.messag","this.minyear","this.modalctrl.cr","this.modalctrl.dismiss","this.modalctrl.dismiss(taskitem","this.modalctrl.dismiss(this.roomitemgroup.valu","this.modalctrl.dismiss(this.taskform.valu","this.movetask(taskdetail","this.newmsg","this.notassignmemb","this.owntaskitem","this.owntaskservice.fetchroominfoitem(taskitem","this.owntaskservice.getuserinfo(userid","this.pagekind","this.platform.ready().then","this.presentmodaledittask(taskdetail","this.presentregistrationus","this.putstorage(uploadfilenam","this.removeownfromroom(roomid","this.room","this.roomgroupsitem","this.roomid","this.roomitemgroup.get('descriptionitem","this.roomitemgroup.get('nameitem","this.roommemb","this.roommembers.unshift(this.currentus","this.roommemberservice.fetchcompanymember(contentobject","this.roommemberservice.fetchcurrentuser(currentuserid","this.roommemberservice.fetchroommemb","this.roommemberservice.fetchroommember(filtercont","this.route.fragment.subscribe((result","this.route.snapshot.parammap.get('companyid","this.route.snapshot.parammap.get('id","this.route.snapshot.parammap.get('roomid","this.route.snapshot.parammap.get('seg","this.router.getcurrentnavigation().extras.state.data.email","this.router.navig","this.router.navigate(['/confirm","this.router.navigate(['/login","this.router.navigate(['/signup","this.router.navigate(['room","this.router.navigate(['task","this.scroll.scrolltoanchor(result","this.seg","this.sessionservic","this.sessionservice.confirmsignup(usernam","this.sessionservice.entryusersignup(signupcont","this.sessionservice.fetchcurrentus","this.sessionservice.isauthenticated().pipe(tap(loggedin","this.sessionservice.resendconfirmnumberforsignup(usernam","this.sessionservice.signout","this.sessionservice.userlogin(email","this.settingservice.fetchuserinfo(userid","this.signupform.invalid","this.signupform.valu","this.splashscreen.hid","this.statu","this.statusbar.styledefault","this.taskactiveitem","this.taskactiveitems.length","this.taskactiveitems.splice(ev.detail.from","this.taskactiveitems.splice(ev.detail.to","this.taskdetail","this.taskdetail.chargeperson.id","this.taskdetail.descript","this.taskdetail.room","this.taskdetail.scheduled","this.taskdetail.titl","this.taskdetailservice.createmessageitem(inputcont","this.taskdetailservice.fetchmessagepertask(filtercont","this.taskdetailservice.fetchroommember(filtercont","this.taskdetailservice.onmessagelisten","this.taskdetailservice.updatetaskitem(cont","this.taskdoneitem","this.taskform.patchvalu","this.taskformdata","this.taskid","this.taskservic","this.taskservice.createroomgroup(cont","this.taskservice.createtaskitem(cont","this.taskservice.createuserroomgroup(cont","this.taskservice.deletetaskitem(cont","this.taskservice.fetchcompanymember(filtercont","this.taskservice.fetchroominfo(roomid","this.taskservice.fetchroommember(filtercont","this.taskservice.fetchuserinfo(userid","this.taskservice.updatetaskitem(cont","this.taskservice.updatetaskstatusforreorder(cont","this.taskservice.updatetaskstatusitem(result","this.titl","this.toastctrl.cr","this.us","this.user.email","this.user.id","this.user.positionnam","this.user.tel","this.user.usernam","this.userid","this.viewvalu","throw","titl","toarray","toast","toast.pres","toastcontrol","toastctrl","transluc","true","ts","type","typescript","uint8array(bytecharacters.length","undefin","updatecompani","updatecompany($input","updatecompany(input","updatecompanyinput","updatecompanymut","updatedat","updatedonetaskitem","updatedonetaskitem(taskformitem","updatemessag","updatemessage($input","updatemessage(input","updatemessageinput","updatemessagemut","updateroom","updateroom($input","updateroom(input","updateroomgroup","updateroomgroup($input","updateroomgroup(input","updateroomgroupinput","updateroomgroupmut","updateroominput","updateroommut","updatestatustaskitem","updatestatustaskitems(taskitem","updatetask","updatetask($input","updatetask(input","updatetaskgroup","updatetaskgroup($input","updatetaskgroup(input","updatetaskgroupinput","updatetaskgroupmut","updatetaskinput","updatetaskitem","updatetaskitem(cont","updatetaskitem(inputcont","updatetaskitem(taskitem","updatetaskitemprior","updatetaskitempriority(indexarray","updatetaskmut","updatetaskstatusforreord","updatetaskstatusforreorder(targetitem","updatetaskstatusitem","updatetaskstatusitem(taskitem","updatetasktoroom","updatetasktoroom(dismissdata","updateus","updateuser($input","updateuser(cont","updateuser(formcont","updateuser(input","updateuserinput","updateusermut","uploadfil","uploadfile(arraybase64data","uploadfilenam","useclass","user","user.companyid","user_srp_auth","userdatakey","userid","userlist","userlogin","userlogin(email","usernam","uuid","v12.18.4","v4","v6.14.8","valid","validators.email","validators.minlength(8","validators.requir","valu","value.email","value.passwordform","variabl","viewchild","viewchild('com","viewchild(ioncont","viewkind","viewkind.find(item","viewportscrol","viewvalu","void","want","width","zen","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \nwant-to-ionic\n\nnode v12.18.4\nnpm v6.14.8\n\n開発\n言語\n\nTypeScript\n\nフレームワーク\n\nAngular\nIonic\n\nツール\n\nAWS Amplify\nGraphQL\nDynamoDB\nAppSync\nS3\nCognito\n\nサービスの考え方\nターゲット\n\n社内のメンバー\n\n概要\n\nテレワークが進む中で希薄になりつつあるチーム間の相互理解\nチーム間のイノベーションを生む\nチーム間の透明性\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \nOverview\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        \n                            23 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        19 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        21 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        12 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            11 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n        \n            \n                \n                    AppModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    CommentPageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    CommentPageRoutingModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    ConfirmPageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    ConfirmPageRoutingModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    HomePageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    HomePageRoutingModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    LoginPageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    LoginPageRoutingModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    OwnTaskPageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    OwnTaskPageRoutingModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    RoomMembersPageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    RoomMembersPageRoutingModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    SettingPageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    SettingPageRoutingModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    SharedModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    SignupPageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    SignupPageRoutingModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    TabsPageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    TaskDetailPageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    TaskDetailPageRoutingModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    TaskPageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    TaskPageRoutingModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n  Modules\n  AppModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    SharedModule\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommentPageModule.html":{"url":"modules/CommentPageModule.html","title":"module - CommentPageModule","body":"\n                   \n\n\n  Modules\n  CommentPageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/comment/comment.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CommentPage\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CommentPageRoutingModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CommentPageRoutingModule } from './comment-routing.module';\n\nimport { CommentPage } from './comment.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CommentPageRoutingModule\n  ],\n  declarations: [CommentPage]\n})\nexport class CommentPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommentPageRoutingModule.html":{"url":"modules/CommentPageRoutingModule.html","title":"module - CommentPageRoutingModule","body":"\n                   \n\n\n  Modules\n  CommentPageRoutingModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/comment/comment-routing.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CommentPage } from './comment.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CommentPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CommentPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfirmPageModule.html":{"url":"modules/ConfirmPageModule.html","title":"module - ConfirmPageModule","body":"\n                   \n\n\n  Modules\n  ConfirmPageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/confirm/confirm.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ConfirmPage\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                ConfirmLogic\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ConfirmPageRoutingModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ConfirmPageRoutingModule } from './confirm-routing.module';\nimport { ConfirmPage } from './confirm.page';\nimport { ConfirmLogic } from './logic/confirm.logic';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    ConfirmPageRoutingModule\n  ],\n  declarations: [ConfirmPage],\n  providers: [ConfirmLogic],\n})\nexport class ConfirmPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfirmPageRoutingModule.html":{"url":"modules/ConfirmPageRoutingModule.html","title":"module - ConfirmPageRoutingModule","body":"\n                   \n\n\n  Modules\n  ConfirmPageRoutingModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/confirm/confirm-routing.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ConfirmPage } from './confirm.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConfirmPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConfirmPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n  Modules\n  HomePageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HomePage\n                            \n                            \n                                ListRoomComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                HomeService\n                            \n                            \n                                HomeLogic\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HomePageRoutingModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { SharedModule } from '../../shared/shared.module';\nimport { HomePage } from './home.page';\nimport { ListRoomComponent } from './componet/list-room/list-room.component';\nimport { HomeService } from './service/home.service';\nimport { HomeLogic } from './logic/home.logic';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    HomePageRoutingModule,\n    SharedModule,\n  ],\n  entryComponents: [\n\n  ],\n  declarations: [HomePage, ListRoomComponent],\n  providers: [HomeService, HomeLogic]\n})\nexport class HomePageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n  Modules\n  HomePageRoutingModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/home/home-routing.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageModule.html":{"url":"modules/LoginPageModule.html","title":"module - LoginPageModule","body":"\n                   \n\n\n  Modules\n  LoginPageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/login/login.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginPage\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                LoginLogic\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    LoginPageRoutingModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { LoginPageRoutingModule } from './login-routing.module';\nimport { LoginPage } from './login.page';\nimport { LoginLogic } from './logic/login-logic.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage],\n  providers: [LoginLogic],\n})\nexport class LoginPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageRoutingModule.html":{"url":"modules/LoginPageRoutingModule.html","title":"module - LoginPageRoutingModule","body":"\n                   \n\n\n  Modules\n  LoginPageRoutingModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/login/login-routing.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OwnTaskPageModule.html":{"url":"modules/OwnTaskPageModule.html","title":"module - OwnTaskPageModule","body":"\n                   \n\n\n  Modules\n  OwnTaskPageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/own-task/own-task.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                OwnTaskPage\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    OwnTaskPageRoutingModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OwnTaskPageRoutingModule } from './own-task-routing.module';\n\nimport { OwnTaskPage } from './own-task.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OwnTaskPageRoutingModule\n  ],\n  declarations: [OwnTaskPage]\n})\nexport class OwnTaskPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OwnTaskPageRoutingModule.html":{"url":"modules/OwnTaskPageRoutingModule.html","title":"module - OwnTaskPageRoutingModule","body":"\n                   \n\n\n  Modules\n  OwnTaskPageRoutingModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/own-task/own-task-routing.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OwnTaskPage } from './own-task.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OwnTaskPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OwnTaskPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoomMembersPageModule.html":{"url":"modules/RoomMembersPageModule.html","title":"module - RoomMembersPageModule","body":"\n                   \n\n\n  Modules\n  RoomMembersPageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/room-members/room-members.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                RoomMembersPage\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    RoomMembersPageRoutingModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RoomMembersPageRoutingModule } from './room-members-routing.module';\n\nimport { RoomMembersPage } from './room-members.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RoomMembersPageRoutingModule\n  ],\n  declarations: [RoomMembersPage]\n})\nexport class RoomMembersPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoomMembersPageRoutingModule.html":{"url":"modules/RoomMembersPageRoutingModule.html","title":"module - RoomMembersPageRoutingModule","body":"\n                   \n\n\n  Modules\n  RoomMembersPageRoutingModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/room-members/room-members-routing.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RoomMembersPage } from './room-members.page';\n\nconst routes: Routes = [\n  {\n    path: ':roomId/:companyId',\n    component: RoomMembersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RoomMembersPageRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingPageModule.html":{"url":"modules/SettingPageModule.html","title":"module - SettingPageModule","body":"\n                   \n\n\n  Modules\n  SettingPageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/setting/setting.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                SettingPage\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SettingPageRoutingModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingPageRoutingModule } from './setting-routing.module';\n\nimport { SettingPage } from './setting.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingPageRoutingModule\n  ],\n  declarations: [SettingPage]\n})\nexport class SettingPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingPageRoutingModule.html":{"url":"modules/SettingPageRoutingModule.html","title":"module - SettingPageRoutingModule","body":"\n                   \n\n\n  Modules\n  SettingPageRoutingModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/setting/setting-routing.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingPage } from './setting.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n  Modules\n  SharedModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AddRoomModalComponent\n                            \n                            \n                                AddTaskModalComponent\n                            \n                            \n                                DeleteTaskModalComponent\n                            \n                            \n                                EditProfileModalComponent\n                            \n                            \n                                AddPersonModalComponent\n                            \n                            \n                                NoContentComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                SessionService\n                            \n                            \n                                SharedLogicService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AddRoomModalComponent\n                            \n                            \n                                    AddTaskModalComponent\n                            \n                            \n                                    DeleteTaskModalComponent\n                            \n                            \n                                    EditProfileModalComponent\n                            \n                            \n                                    AddPersonModalComponent\n                            \n                            \n                                    NoContentComponent\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { SessionService } from './service/session.service';\nimport { SharedLogicService } from './logic/shared-logic.service';\nimport { AddRoomModalComponent } from './component/modal/add-room-modal/add-room-modal.component';\nimport { AddTaskModalComponent } from './component/modal/add-task-modal/add-task-modal.component';\nimport { DeleteTaskModalComponent } from './component/modal/delete-task-modal/delete-task-modal.component';\nimport { EditProfileModalComponent } from './component/modal/edit-profile-modal/edit-profile-modal.component';\nimport { AddPersonModalComponent } from '../pages/task/component/add-person-modal/add-person-modal.component';\nimport { NoContentComponent } from './component/no-content/no-content.component';\nimport { ImagePicker } from '@ionic-native/image-picker/ngx';\n\n\n@NgModule({\n  declarations: [\n    AddRoomModalComponent,\n    AddTaskModalComponent,\n    DeleteTaskModalComponent,\n    EditProfileModalComponent,\n    AddPersonModalComponent,\n    NoContentComponent,\n  ],\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  entryComponents: [\n    AddRoomModalComponent,\n    AddTaskModalComponent,\n    DeleteTaskModalComponent,\n    EditProfileModalComponent,\n    AddPersonModalComponent,\n  ],\n  exports: [\n    AddRoomModalComponent,\n    AddTaskModalComponent,\n    DeleteTaskModalComponent,\n    EditProfileModalComponent,\n    AddPersonModalComponent,\n    NoContentComponent,\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n  providers: [\n    SessionService,\n    SharedLogicService,\n    ImagePicker,\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SignupPageModule.html":{"url":"modules/SignupPageModule.html","title":"module - SignupPageModule","body":"\n                   \n\n\n  Modules\n  SignupPageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/signup/signup.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                SignupPage\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                SignupLogicService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    SignupPageRoutingModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { SharedModule } from '../../shared/shared.module';\nimport { SignupPageRoutingModule } from './signup-routing.module';\nimport { SignupPage } from './signup.page';\nimport { SignupLogicService } from './logic/signup-logic.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    ReactiveFormsModule,\n    SignupPageRoutingModule\n  ],\n  declarations: [SignupPage],\n  providers: [SignupLogicService],\n})\nexport class SignupPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SignupPageRoutingModule.html":{"url":"modules/SignupPageRoutingModule.html","title":"module - SignupPageRoutingModule","body":"\n                   \n\n\n  Modules\n  SignupPageRoutingModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/signup/signup-routing.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SignupPage } from './signup.page';\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignupPageRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageModule.html":{"url":"modules/TabsPageModule.html","title":"module - TabsPageModule","body":"\n                   \n\n\n  Modules\n  TabsPageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/tabs/tabs.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TabsPage\n                            \n                    \n                \n            \n        \n    \n    \n        import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { TabsPageRoutingModule } from './tabs-routing.module';\n\nimport { TabsPage } from './tabs.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    TabsPageRoutingModule\n  ],\n  declarations: [TabsPage]\n})\nexport class TabsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskDetailPageModule.html":{"url":"modules/TaskDetailPageModule.html","title":"module - TaskDetailPageModule","body":"\n                   \n\n\n  Modules\n  TaskDetailPageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/task-detail/task-detail.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TaskDetailPage\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    TaskDetailPageRoutingModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { TaskDetailPageRoutingModule } from './task-detail-routing.module';\n\nimport { TaskDetailPage } from './task-detail.page';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    TaskDetailPageRoutingModule\n  ],\n  declarations: [TaskDetailPage]\n})\nexport class TaskDetailPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskDetailPageRoutingModule.html":{"url":"modules/TaskDetailPageRoutingModule.html","title":"module - TaskDetailPageRoutingModule","body":"\n                   \n\n\n  Modules\n  TaskDetailPageRoutingModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/task-detail/task-detail-routing.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, ExtraOptions } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { TaskDetailPage } from './task-detail.page';\n\nconst routes: Routes = [\n  {\n    path: ':id/:segment',\n    component: TaskDetailPage\n  },\n  {\n    path: '',\n    redirectTo: ':id',\n    pathMatch: 'full'\n  }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TaskDetailPageRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskPageModule.html":{"url":"modules/TaskPageModule.html","title":"module - TaskPageModule","body":"\n                   \n\n\n  Modules\n  TaskPageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/task/task.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TaskPage\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                TaskLogic\n                            \n                            \n                                TaskService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TaskPageRoutingModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TaskPageRoutingModule } from './task-routing.module';\n\nimport { TaskPage } from './task.page';\nimport { TaskLogic } from './logic/task.logic';\nimport { TaskService } from './service/task.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TaskPageRoutingModule\n  ],\n  declarations: [TaskPage],\n  providers: [TaskLogic, TaskService],\n})\nexport class TaskPageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskPageRoutingModule.html":{"url":"modules/TaskPageRoutingModule.html","title":"module - TaskPageRoutingModule","body":"\n                   \n\n\n  Modules\n  TaskPageRoutingModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/task/task-routing.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TaskPage } from './task.page';\n\nconst routes: Routes = [\n  {\n    path: ':id',\n    component: TaskPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TaskPageRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddPersonModalComponent.html":{"url":"components/AddPersonModalComponent.html","title":"component - AddPersonModalComponent","body":"\n                   \n\n\n\n  Components\n  AddPersonModalComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/task/component/add-person-modal/add-person-modal.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-person-modal\n            \n\n            \n                styleUrls\n                add-person-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                add-person-modal.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(modalCtrl: ModalController, logic: TaskLogic)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             dismissModal\n                        \n                    \n    \n                    \n                        \n    dismissModal()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             addPersonToTask\n                        \n                    \n    \n                    \n                        \n    addPersonToTask()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             changeCheckUser\n                        \n                    \n    \n                    \n                        \n    changeCheckUser(member: MemberTask)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             inputSearch\n                        \n                    \n    \n                    \n                        \n    inputSearch(ev: CustomEvent)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             checkNotAssignMember\n                        \n                    \n    \n                    \n                        \n    checkNotAssignMember(companyMembers: any, roomMembers: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any[]\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             cancelSearch\n                        \n                    \n    \n                    \n                        \n    cancelSearch(ev: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             clearSearch\n                        \n                    \n    \n                    \n                        \n    clearSearch(ev: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             arraySelectedPersonId\n                        \n                    \n                    \n                        \n                            arraySelectedPersonId:     string[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             companyId\n                        \n                    \n                    \n                        \n                            companyId:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             companyMembers\n                        \n                    \n                    \n                        \n                            companyMembers:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             members\n                        \n                    \n                    \n                        \n                            members:     MemberTask[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             notAssignMembers\n                        \n                    \n                    \n                        \n                            notAssignMembers:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             roomId\n                        \n                    \n                    \n                        \n                            roomId:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             users\n                        \n                    \n                    \n                        \n                            users:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { map } from 'rxjs/operators';\nimport { TaskLogic } from '../../logic/task.logic';\nimport { MemberTask } from '../../model/task-member.model';\n\n@Component({\n  selector: 'app-add-person-modal',\n  templateUrl: './add-person-modal.component.html',\n  styleUrls: ['./add-person-modal.component.scss'],\n})\nexport class AddPersonModalComponent implements OnInit {\n\n  arraySelectedPersonId: Array;\n  notAssignMembers;\n  members: Array;\n  companyMembers;\n  users;\n  companyId: string;\n  roomId: string;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private logic: TaskLogic,\n  ) { }\n\n  ngOnInit(): void {\n    this.arraySelectedPersonId = [];\n    this.members = this.notAssignMembers;\n  }\n\n  dismissModal(): void {\n    this.modalCtrl.dismiss({ result: 'dismiss' });\n  }\n\n  addPersonToTask(): void {\n    this.logic.addMembersToAnyRoom(this.arraySelectedPersonId, this.roomId)\n      .subscribe(() => {\n        this.modalCtrl.dismiss({ result: 'success' });\n      })\n  }\n\n  changeCheckUser(member: MemberTask): void {\n    const indexTargetId = this.arraySelectedPersonId.findIndex(item => item === member.id);\n    const targetIndex = this.members.findIndex(item => item.id === member.id);\n    if (indexTargetId >= 0) {\n      this.arraySelectedPersonId.splice(indexTargetId, 1);\n      this.members[targetIndex].checked = false;\n    } else {\n      this.arraySelectedPersonId.push(member.id);\n      this.members[targetIndex].checked = true;\n    }\n  }\n\n  inputSearch(ev: CustomEvent): void {\n    if (ev.detail.value !== null) {\n      this.logic.fetchCompanyMember(this.companyId, ev.detail.value)\n        .pipe(map((result) => result.items))\n        .subscribe((items) => {\n          this.members = this.checkNotAssignMember(this.notAssignMembers, items)\n        })\n    } else {\n      this.logic.fetchCompanyMember(this.companyId)\n        .pipe(map((result) => result.items))\n        .subscribe(() => {\n          this.members = this.notAssignMembers;\n        })\n    }\n  }\n\n  checkNotAssignMember(companyMembers, roomMembers): Array {\n    return companyMembers.filter((companyMember) => {\n      return roomMembers.some((roomMember) => {\n        return companyMember.id === roomMember.id;\n      })\n    });\n  }\n\n  cancelSearch(ev): void {\n    console.log('cancelSearch', ev);\n  }\n\n  clearSearch(ev): void {\n    console.log('clearSearch', ev);\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddRoomModalComponent.html":{"url":"components/AddRoomModalComponent.html","title":"component - AddRoomModalComponent","body":"\n                   \n\n\n\n  Components\n  AddRoomModalComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/shared/component/modal/add-room-modal/add-room-modal.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-room-modal\n            \n\n            \n                styleUrls\n                add-room-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                add-room-modal.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(modalCtrl: ModalController)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             dismissModal\n                        \n                    \n    \n                    \n                        \n    dismissModal()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             createItem\n                        \n                    \n    \n                    \n                        \n    createItem()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             descriptionItem\n                        \n                    \n                    \n                        \n                            descriptionItem:     AbstractControl\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             nameItem\n                        \n                    \n                    \n                        \n                            nameItem:     AbstractControl\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             roomItemGroup\n                        \n                    \n                    \n                        \n                            roomItemGroup:     FormGroup\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-room-modal',\n  templateUrl: './add-room-modal.component.html',\n  styleUrls: ['./add-room-modal.component.scss'],\n})\nexport class AddRoomModalComponent implements OnInit {\n\n  roomItemGroup = new FormGroup({\n    nameItem: new FormControl('', [Validators.required]),\n    descriptionItem: new FormControl(''),\n  });\n\n  constructor(\n    private modalCtrl: ModalController,\n  ) { }\n\n  get nameItem() {\n    return this.roomItemGroup.get('nameItem');\n  }\n\n  get descriptionItem() {\n    return this.roomItemGroup.get('descriptionItem');\n  }\n\n  ngOnInit() { }\n\n  dismissModal(): void {\n    this.modalCtrl.dismiss();\n  }\n\n  createItem(): void {\n    this.modalCtrl.dismiss(this.roomItemGroup.value);\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddTaskModalComponent.html":{"url":"components/AddTaskModalComponent.html","title":"component - AddTaskModalComponent","body":"\n                   \n\n\n\n  Components\n  AddTaskModalComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/shared/component/modal/add-task-modal/add-task-modal.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-task-modal\n            \n\n            \n                styleUrls\n                add-task-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                add-task-modal.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(modalCtrl: ModalController)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             dismissModal\n                        \n                    \n    \n                    \n                        \n    dismissModal()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             createTaskItem\n                        \n                    \n    \n                    \n                        \n    createTaskItem()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             changeDate\n                        \n                    \n    \n                    \n                        \n    changeDate()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             currentIsoString\n                        \n                    \n                    \n                        \n                            currentIsoString:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             maxYear\n                        \n                    \n                    \n                        \n                            maxYear:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             minYear\n                        \n                    \n                    \n                        \n                            minYear:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             room\n                        \n                    \n                    \n                        \n                            room:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             roomMembers\n                        \n                    \n                    \n                        \n                            roomMembers:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             taskDetail\n                        \n                    \n                    \n                        \n                            taskDetail:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             taskForm\n                        \n                    \n                    \n                        \n                            taskForm:     FormGroup\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             userId\n                        \n                    \n                    \n                        \n                            userId:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             userList\n                        \n                    \n                    \n                        \n                            userList:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ListRoomGroupsQuery } from 'src/app/shared/service/amplify.service';\n\n@Component({\n  selector: 'app-add-task-modal',\n  templateUrl: './add-task-modal.component.html',\n  styleUrls: ['./add-task-modal.component.scss'],\n})\nexport class AddTaskModalComponent implements OnInit {\n\n  taskForm = new FormGroup({\n    nameItem: new FormControl('', [Validators.required]),\n    descriptionItem: new FormControl(''),\n    chargePersonId: new FormControl(''),\n    scheduleDateItem: new FormControl(''),\n  });\n\n  userId: string;\n  minYear: string = '';\n  maxYear: string = '';\n  currentIsoString: string;\n  roomMembers: ListRoomGroupsQuery;\n\n  room;\n  taskDetail;\n  userList;\n\n\n  constructor(\n    private modalCtrl: ModalController,\n  ) { }\n\n  ngOnInit() {\n    const currentDate = new Date();\n    this.minYear = (currentDate.getFullYear()).toString();\n    this.maxYear = (currentDate.getFullYear() + 1).toString();\n    if (this.taskDetail !== undefined) {\n      this.taskForm.patchValue({\n        nameItem: this.taskDetail.title,\n        descriptionItem: this.taskDetail.description,\n        chargePersonId: this.taskDetail.chargePerson.id,\n        scheduleDateItem: this.taskDetail.scheduleDate,\n      });\n      this.room = this.taskDetail.room;\n    } else {\n      this.currentIsoString = currentDate.toISOString();\n      this.taskForm.patchValue({\n        scheduleDateItem: this.currentIsoString,\n        chargePersonId: this.userId,\n      });\n    }\n  }\n\n  dismissModal(): void {\n    this.modalCtrl.dismiss();\n  }\n\n  createTaskItem(): void {\n    this.modalCtrl.dismiss(this.taskForm.value);\n  }\n\n  changeDate() {\n    console.log('changeDate');\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             initializeApp\n                        \n                    \n    \n                    \n                        \n    initializeApp()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n        \n            import { Component } from '@angular/core';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar\n  ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentPage.html":{"url":"components/CommentPage.html","title":"component - CommentPage","body":"\n                   \n\n\n\n  Components\n  CommentPage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/comment/comment.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment\n            \n\n            \n                styleUrls\n                comment.page.scss\n            \n\n\n\n            \n                templateUrl\n                comment.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                \n            \n    \n\n\n\n        \n            import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.page.html',\n  styleUrls: ['./comment.page.scss'],\n})\nexport class CommentPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmPage.html":{"url":"components/ConfirmPage.html","title":"component - ConfirmPage","body":"\n                   \n\n\n\n  Components\n  ConfirmPage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/confirm/confirm.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm\n            \n\n            \n                styleUrls\n                confirm.page.scss\n            \n\n\n\n            \n                templateUrl\n                confirm.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(logic: ConfirmLogic, router: Router)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             confirmSignup\n                        \n                    \n    \n                    \n                        \n    confirmSignup()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             reSendSignup\n                        \n                    \n    \n                    \n                        \n    reSendSignup()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             confirmForm\n                        \n                    \n                    \n                        \n                            confirmForm:     FormGroup\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             confirmTargetEmail\n                        \n                    \n                    \n                        \n                            confirmTargetEmail:     string\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ConfirmLogic } from './logic/confirm.logic';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.page.html',\n  styleUrls: ['./confirm.page.scss'],\n})\n\nexport class ConfirmPage implements OnInit {\n  confirmTargetEmail: string;\n  confirmForm = new FormGroup({\n    confirmNumber: new FormControl('', [Validators.required])\n  });\n\n  constructor(\n    private logic: ConfirmLogic,\n    private router: Router,\n  ) {\n  }\n\n  ngOnInit() {\n    this.confirmTargetEmail = this.router.getCurrentNavigation().extras.state.data.email;\n  }\n\n  confirmSignup() {\n    this.logic.sendConfirmUser(this.confirmTargetEmail, this.confirmForm.get('confirmNumber').value).subscribe(() => {\n      this.router.navigate(['/login']);\n    })\n  }\n\n  reSendSignup() {\n    console.log('reSendSignup');\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeleteTaskModalComponent.html":{"url":"components/DeleteTaskModalComponent.html","title":"component - DeleteTaskModalComponent","body":"\n                   \n\n\n\n  Components\n  DeleteTaskModalComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/shared/component/modal/delete-task-modal/delete-task-modal.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-delete-task-modal\n            \n\n            \n                styleUrls\n                delete-task-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                delete-task-modal.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(modalCtrl: ModalController)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             onCancel\n                        \n                    \n    \n                    \n                        \n    onCancel()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             deleteTargetTask\n                        \n                    \n    \n                    \n                        \n    deleteTargetTask(taskItem: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             task\n                        \n                    \n                    \n                        \n                            task:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-delete-task-modal',\n  templateUrl: './delete-task-modal.component.html',\n  styleUrls: ['./delete-task-modal.component.scss'],\n})\nexport class DeleteTaskModalComponent implements OnInit {\n  task;\n\n  constructor(\n    private modalCtrl: ModalController,\n  ) { }\n\n  ngOnInit() { }\n\n  onCancel() {\n    this.modalCtrl.dismiss();\n  }\n\n\n  deleteTargetTask(taskItem) {\n    this.modalCtrl.dismiss(taskItem);\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProfileModalComponent.html":{"url":"components/EditProfileModalComponent.html","title":"component - EditProfileModalComponent","body":"\n                   \n\n\n\n  Components\n  EditProfileModalComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/shared/component/modal/edit-profile-modal/edit-profile-modal.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-profile-modal\n            \n\n            \n                styleUrls\n                edit-profile-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                edit-profile-modal.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            email\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            status\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            user\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            userId\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(modalCtrl: ModalController, logic: HomeLogic, imagePicker: ImagePicker)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             saveProfile\n                        \n                    \n    \n                    \n                        \n    saveProfile()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             dismissModal\n                        \n                    \n    \n                    \n                        \n    dismissModal()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             pickerImage\n                        \n                    \n    \n                    \n                        \n    pickerImage()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             editProfileForm\n                        \n                    \n                    \n                        \n                            editProfileForm:     FormGroup\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             title\n                        \n                    \n                    \n                        \n                            title:     string\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HomeLogic } from '../../../../pages/home/logic/home.logic';\nimport { ImagePicker } from '@ionic-native/image-picker/ngx';\n\n@Component({\n  selector: 'app-edit-profile-modal',\n  templateUrl: './edit-profile-modal.component.html',\n  styleUrls: ['./edit-profile-modal.component.scss'],\n})\nexport class EditProfileModalComponent implements OnInit {\n  editProfileForm = new FormGroup({\n    id: new FormControl(''),\n    iconImage: new FormControl(''),\n    userName: new FormControl('', [Validators.required]),\n    positionName: new FormControl(''),\n    targetEmail: new FormControl('', [Validators.required, Validators.email]),\n    tel: new FormControl(''),\n  });\n\n  @Input() status: string;\n  @Input() email: string;\n  @Input() userId: string;\n  @Input() user;\n  title: string;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private logic: HomeLogic,\n    private imagePicker: ImagePicker,\n  ) { }\n\n  ngOnInit(): void {\n    this.title = 'プロフィールの作成';\n    if (this.status === 'new') {\n      this.editProfileForm.patchValue({\n        id: this.userId,\n        targetEmail: this.email\n      });\n    } else {\n      this.title = 'プロフィールの編集';\n      this.editProfileForm.patchValue({\n        id: this.user.id,\n        targetEmail: this.user.email,\n        userName: this.user.username,\n        positionName: this.user.positionName,\n        tel: this.user.tel,\n      })\n    }\n  }\n\n  saveProfile(): void {\n    if (this.status === 'new') {\n      this.logic.createUser(this.editProfileForm)\n        .subscribe(() => {\n          this.modalCtrl.dismiss();\n        });\n    } else {\n      this.logic.updateUser(this.editProfileForm)\n        .subscribe((res) => {\n          console.log('Response: ', res);\n          this.modalCtrl.dismiss();\n        });\n    }\n  }\n\n  dismissModal(): void {\n    this.modalCtrl.dismiss();\n  }\n\n  pickerImage(): void {\n    const options = {\n      maximumImagesCount: 1,\n      width: 400,\n      height: 400,\n      quality: 30,\n      outputType: 0,\n    }\n    this.imagePicker.getPictures(options)\n      .then((result) => {\n        console.log(result);\n      })\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n  Components\n  HomePage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(logic: HomeLogic, modalCtrl: ModalController)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             presentRegistrationUser\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentRegistrationUser()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             attributes\n                        \n                    \n                    \n                        \n                            attributes:     { email: string; email_verified: boolean; sub: string; }\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             email\n                        \n                    \n                    \n                        \n                            email:     string\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { of, from } from 'rxjs';\nimport { catchError, concatMap, filter, flatMap, map } from 'rxjs/operators';\nimport { EditProfileModalComponent } from 'src/app/shared/component/modal/edit-profile-modal/edit-profile-modal.component';\nimport { HomeLogic } from './logic/home.logic';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\n\nexport class HomePage implements OnInit {\n  email: string;\n  attributes: {\n    email: string,\n    email_verified: boolean,\n    sub: string,\n  }\n\n  constructor(\n    private logic: HomeLogic,\n    private modalCtrl: ModalController,\n  ) { }\n\n  ngOnInit() {\n    this.logic.fetchCurrentUser()\n      .pipe(map((attributes) => {\n        this.attributes = attributes;\n      }))\n      .pipe(flatMap(() => this.logic.checkRegistrationUser(this.attributes)))\n      .pipe(filter(({ items }) => items.length === 0), catchError(() => of('Already')))\n      .subscribe((data) => {\n        if (data === 'Already') {\n          return;\n        }\n        this.presentRegistrationUser()\n      });\n  }\n\n  async presentRegistrationUser() {\n    const modal = await this.modalCtrl.create({\n      component: EditProfileModalComponent,\n      componentProps: {\n        'status': 'new',\n        'email': this.attributes.email,\n        'userId': this.attributes.sub,\n      },\n    })\n    const dismissObservable = from(modal.onDidDismiss());\n    dismissObservable\n      .pipe(concatMap(() => this.logic.fetchCurrentUser()))\n      .pipe(map((attributes) => {\n        this.attributes = attributes;\n      }));\n    return modal.present();\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListRoomComponent.html":{"url":"components/ListRoomComponent.html","title":"component - ListRoomComponent","body":"\n                   \n\n\n\n  Components\n  ListRoomComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/home/componet/list-room/list-room.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-room\n            \n\n            \n                styleUrls\n                list-room.component.scss\n            \n\n\n\n            \n                templateUrl\n                list-room.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(modalCtrl: ModalController, logic: HomeLogic, router: Router)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             presentAddRoomItem\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentAddRoomItem(companyId: string)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             navigateToTask\n                        \n                    \n    \n                    \n                        \n    navigateToTask(room: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             deleteRoom\n                        \n                    \n    \n                    \n                        \n    deleteRoom(roomId: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             deleteRoomItem\n                        \n                    \n    \n                    \n                        \n    deleteRoomItem(roomId: string)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     Observable\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             removeOwnFromRoom\n                        \n                    \n    \n                    \n                        \n    removeOwnFromRoom(roomId: string, currentUserId: string)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     Observable\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             companyId\n                        \n                    \n                    \n                        \n                            companyId:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: takuCloudCon\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             currentUserId\n                        \n                    \n                    \n                        \n                            currentUserId:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             roomGroupsItems\n                        \n                    \n                    \n                        \n                            roomGroupsItems:     ResponseListRoomGroupsQueryItems[]\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { AddRoomModalComponent } from '../../../../shared/component/modal/add-room-modal/add-room-modal.component';\nimport { HomeLogic } from '../../logic/home.logic';\nimport { from, Observable } from 'rxjs';\nimport { concatMap, switchMap, map } from 'rxjs/operators';\nimport { ResponseListRoomGroupsQueryItems } from '../../service/reponse/response.model';\n\n@Component({\n  selector: 'app-list-room',\n  templateUrl: './list-room.component.html',\n  styleUrls: ['./list-room.component.scss'],\n})\nexport class ListRoomComponent implements OnInit {\n  currentUserId: string;\n  roomGroupsItems: Array;\n  companyId = 'takuCloudCon';\n\n  constructor(\n    private modalCtrl: ModalController,\n    private logic: HomeLogic,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.logic.fetchCurrentUser()\n      .pipe(map((data) => this.currentUserId = data.sub))\n      .pipe((concatMap(() => this.logic.fetchRoomList(this.currentUserId))))\n      .pipe(concatMap((data) => this.logic.setExitsRoomAndUser(data)))\n      .subscribe((data: Array) => {\n        this.roomGroupsItems = data;\n      })\n  }\n\n  async presentAddRoomItem(companyId: string) {\n    const modal = await this.modalCtrl.create({\n      component: AddRoomModalComponent,\n    });\n\n    const observable = from(modal.onDidDismiss());\n    observable\n      .pipe(concatMap(({ data }) => this.logic.createRoom(data)))\n      .pipe(concatMap((room) => this.logic.createUserRoomGroup(this.currentUserId, room.id)))\n      .pipe(concatMap(() => this.logic.fetchRoomList(this.currentUserId)))\n      .pipe(concatMap((data) => this.logic.setExitsRoomAndUser(data)))\n      .subscribe((response) => {\n        this.roomGroupsItems = response;\n      })\n    return modal.present();\n  }\n\n  navigateToTask(room): void {\n    this.router.navigate(['task', `${room.id}`]);\n  }\n\n  deleteRoom(roomId): void {\n    this.logic.fetchRoomMembers(roomId, this.currentUserId)\n      .pipe(switchMap((data) => data.length === 0 ?\n        this.deleteRoomItem(roomId) : this.removeOwnFromRoom(roomId, this.currentUserId))\n      )\n      .pipe(concatMap(() => this.logic.fetchRoomList(this.currentUserId)))\n      .pipe(concatMap((data) => this.logic.setExitsRoomAndUser(data)))\n      .subscribe((result) => {\n        this.roomGroupsItems = result;\n      })\n  }\n\n  deleteRoomItem(roomId: string): Observable {\n    return this.logic.deleteRoomItem(roomId)\n  }\n\n  removeOwnFromRoom(roomId: string, currentUserId: string): Observable {\n    return this.logic.removeMeFromRoom(roomId, currentUserId);\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n  Components\n  LoginPage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/login/login.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.page.scss\n            \n\n\n\n            \n                templateUrl\n                login.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(logic: LoginLogic, router: Router)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             login\n                        \n                    \n    \n                    \n                        \n    login()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             navigateToSignUp\n                        \n                    \n    \n                    \n                        \n    navigateToSignUp()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             loginForm\n                        \n                    \n                    \n                        \n                            loginForm:     FormGroup\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { LoginLogic } from './logic/login-logic.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n  })\n\n  constructor(\n    private logic: LoginLogic,\n    private readonly router: Router\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  login(): void {\n    const email = this.loginForm.get('email').value;\n    const password = this.loginForm.get('password').value;\n    this.logic.sendLoginInfo(email, password).subscribe(() => {\n      this.router.navigate(['']);\n    })\n  }\n\n  navigateToSignUp(): void {\n    this.router.navigate(['/signup']);\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoContentComponent.html":{"url":"components/NoContentComponent.html","title":"component - NoContentComponent","body":"\n                   \n\n\n\n  Components\n  NoContentComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/shared/component/no-content/no-content.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-no-content\n            \n\n            \n                styleUrls\n                no-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                no-content.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            pageKind\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                \n            \n    \n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             viewValue\n                        \n                    \n                    \n                        \n                            viewValue:     { value: string; name: string; }\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, Input, OnInit } from '@angular/core';\n\nconst viewKind = [\n  { value: 'room', name: 'ルーム' },\n  { value: 'task', name: 'タスク' },\n];\n\n@Component({\n  selector: 'app-no-content',\n  templateUrl: './no-content.component.html',\n  styleUrls: ['./no-content.component.scss'],\n})\nexport class NoContentComponent implements OnInit {\n\n  @Input() pageKind: string;\n  viewValue: { value: string, name: string };\n\n  constructor() { }\n\n  ngOnInit() {\n    this.viewValue = viewKind.find(item => item.value === this.pageKind);\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OwnTaskPage.html":{"url":"components/OwnTaskPage.html","title":"component - OwnTaskPage","body":"\n                   \n\n\n\n  Components\n  OwnTaskPage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/own-task/own-task.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-own-task\n            \n\n            \n                styleUrls\n                own-task.page.scss\n            \n\n\n\n            \n                templateUrl\n                own-task.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(router: Router, loadingCtrl: LoadingController, logic: OwnTaskLogic)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             presentLoading\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentLoading()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             navigateToTaskDetail\n                        \n                    \n    \n                    \n                        \n    navigateToTaskDetail(item: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             ownTaskItems\n                        \n                    \n                    \n                        \n                            ownTaskItems:     any[]\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\nimport { concatMap, map } from 'rxjs/operators';\nimport { OwnTaskLogic } from './logic/own-task.logic';\n\n@Component({\n  selector: 'app-own-task',\n  templateUrl: './own-task.page.html',\n  styleUrls: ['./own-task.page.scss'],\n})\nexport class OwnTaskPage implements OnInit, AfterViewInit {\n  ownTaskItems: Array;\n\n  constructor(\n    private router: Router,\n    private loadingCtrl: LoadingController,\n    private logic: OwnTaskLogic,\n  ) { }\n\n  ngOnInit() { }\n\n  ngAfterViewInit() {\n    this.logic.fetchCurrentUser()\n      .pipe(map(result => result.sub))\n      .pipe(concatMap((currentUserId) => this.logic.getTaskChargeItems(currentUserId)))\n      .pipe(concatMap(({ items }) => this.logic.setTaskPerRoom(items)))\n      .subscribe((items) => {\n        this.ownTaskItems = items;\n      })\n  }\n\n  async presentLoading() {\n    const loading = await this.loadingCtrl.create({\n      cssClass: 'custom-loading',\n      message: '読込中...',\n      translucent: true,\n      backdropDismiss: true\n    });\n    await loading.present();\n    const { role, data } = await loading.onDidDismiss();\n  }\n\n  navigateToTaskDetail(item) {\n    this.router.navigate(['task-detail', `${item.task.id}`, `active`]);\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RoomMembersPage.html":{"url":"components/RoomMembersPage.html","title":"component - RoomMembersPage","body":"\n                   \n\n\n\n  Components\n  RoomMembersPage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/room-members/room-members.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-room-members\n            \n\n            \n                styleUrls\n                room-members.page.scss\n            \n\n\n\n            \n                templateUrl\n                room-members.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(logic: RoomMembersLogic, location: Location, modalCtrl: ModalController, route: ActivatedRoute)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             checkNotAssignMember\n                        \n                    \n    \n                    \n                        \n    checkNotAssignMember(companyMembers: any, roomMembers: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any[]\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             goBackToRoom\n                        \n                    \n    \n                    \n                        \n    goBackToRoom()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             activeEditMode\n                        \n                    \n    \n                    \n                        \n    activeEditMode()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             searchRoomMembers\n                        \n                    \n    \n                    \n                        \n    searchRoomMembers(ev: CustomEvent)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             addMemberOnRoom\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            addMemberOnRoom()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             companyId\n                        \n                    \n                    \n                        \n                            companyId:     string | number\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             companyMembers\n                        \n                    \n                    \n                        \n                            companyMembers:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             currentUser\n                        \n                    \n                    \n                        \n                            currentUser:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             currentUserId\n                        \n                    \n                    \n                        \n                            currentUserId:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             notAssignMembers\n                        \n                    \n                    \n                        \n                            notAssignMembers:     any[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             roomId\n                        \n                    \n                    \n                        \n                            roomId:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             roomMembers\n                        \n                    \n                    \n                        \n                            roomMembers:     any[]\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { concatMap, map } from 'rxjs/operators';\nimport { RoomMembersLogic } from './logic/room-members.logic';\nimport { AddPersonModalComponent } from '../task/component/add-person-modal/add-person-modal.component';\n\n\n@Component({\n  selector: 'app-room-members',\n  templateUrl: './room-members.page.html',\n  styleUrls: ['./room-members.page.scss'],\n})\nexport class RoomMembersPage implements OnInit {\n  currentUserId: string;\n  companyId: number | string;\n  roomId: string;\n  companyMembers;\n  currentUser;\n  roomMembers = [];\n  notAssignMembers = [];\n\n  constructor(\n    private logic: RoomMembersLogic,\n    private location: Location,\n    private modalCtrl: ModalController,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    this.notAssignMembers = [];\n    this.companyId = this.route.snapshot.paramMap.get('companyId');\n    this.roomId = this.route.snapshot.paramMap.get('roomId');\n    this.logic.fetchCurrentUserId()\n      .pipe(map((currentUserId) => this.currentUserId = currentUserId))\n      .pipe(concatMap(() => this.logic.fetchCurrentUser(this.currentUserId)))\n      .pipe(map((result) => this.currentUser = result))\n      .pipe(concatMap(() => this.logic.fetchRoomMemberGroup(this.roomId)))\n      .pipe(concatMap((result) => this.logic.setRoomMembers(result, this.currentUserId)))\n      .pipe(map((members) => this.roomMembers = members))\n      .pipe(concatMap(() => this.logic.fetchCompanyMember(this.companyId)))\n      .subscribe(({ items }) => {\n        this.companyMembers = items;\n        this.roomMembers.unshift(this.currentUser);\n        this.notAssignMembers = this.checkNotAssignMember(this.companyMembers, this.roomMembers);\n      });\n  }\n\n  checkNotAssignMember(companyMembers, roomMembers): Array {\n    return companyMembers.filter((companyMember) => {\n      return !roomMembers.some((roomMember) => {\n        return companyMember.id === roomMember.id;\n      })\n    });\n  }\n\n  goBackToRoom() {\n    this.location.back();\n  }\n\n  activeEditMode() {\n    console.log('activeEditMode');\n  }\n\n  searchRoomMembers(ev: CustomEvent) {\n    const nameQuery = ev.detail.value;\n    if (nameQuery !== null) {\n      this.logic.fetchRoomMembers(this.roomId, nameQuery)\n        .pipe(map((result) => result.items))\n        .subscribe((items) => {\n          this.roomMembers = items;\n        })\n    } else {\n      this.logic.fetchRoomMembers(this.roomId)\n        .pipe(map((result) => result.items))\n        .subscribe(() => {\n          console.log('SearchBarがnullになったとき');\n        })\n    }\n  }\n\n  async addMemberOnRoom() {\n    const modal = await this.modalCtrl.create({\n      component: AddPersonModalComponent,\n      componentProps: {\n        notAssignMembers: this.notAssignMembers,\n        companyMembers: this.companyMembers,\n        companyId: this.companyId,\n        roomId: this.roomId,\n      }\n    });\n    modal.onDidDismiss().then(({ data }) => {\n      if (data.result === 'dismiss') {\n        return;\n      };\n      this.logic.fetchRoomMembers(this.roomId)\n        .pipe(concatMap(({ items }) => this.logic.setRoomMembers(items, this.currentUserId)))\n        .subscribe((items) => {\n          this.roomMembers = items;\n          this.notAssignMembers = this.checkNotAssignMember(this.companyMembers, this.roomMembers);\n        })\n    })\n    return modal.present();\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingPage.html":{"url":"components/SettingPage.html","title":"component - SettingPage","body":"\n                   \n\n\n\n  Components\n  SettingPage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/setting/setting.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-setting\n            \n\n            \n                styleUrls\n                setting.page.scss\n            \n\n\n\n            \n                templateUrl\n                setting.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(actionSheetCtrl: ActionSheetController, logic: SettingLogic, router: Router, modalCtrl: ModalController)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             confirmLogout\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            confirmLogout()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             actionLogout\n                        \n                    \n    \n                    \n                        \n    actionLogout()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             presentEditModal\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentEditModal()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             user\n                        \n                    \n                    \n                        \n                            user:     OwnUser\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActionSheetController, ModalController } from '@ionic/angular';\nimport { SettingLogic } from './logic/setting.logic';\nimport { EditProfileModalComponent } from '../../shared/component/modal/edit-profile-modal/edit-profile-modal.component';\nimport { from } from 'rxjs';\nimport { concatMap, flatMap } from 'rxjs/operators';\n\n// interface User\ninterface OwnUser {\n  authority: string;\n  companyID: string;\n  createdAt: string;\n  positionName: string;\n  email: string;\n  id: string;\n  registered?: boolean\n  updatedAt: string;\n  username: string;\n  __typename: string;\n}\n\n@Component({\n  selector: 'app-setting',\n  templateUrl: './setting.page.html',\n  styleUrls: ['./setting.page.scss'],\n})\nexport class SettingPage implements OnInit {\n\n  user: OwnUser;\n\n  constructor(\n    private actionSheetCtrl: ActionSheetController,\n    private logic: SettingLogic,\n    private router: Router,\n    private modalCtrl: ModalController,\n  ) { }\n\n  ngOnInit() {\n    this.logic.fetchCurrentUser()\n      .pipe(flatMap((result) => this.logic.fetchUserInfo(result.username)))\n      .subscribe((data) => {\n        this.user = data;\n      });\n  }\n\n  async confirmLogout() {\n    const logoutActionSheet = await this.actionSheetCtrl.create({\n      cssClass: 'my-custom-class',\n      buttons: [\n        {\n          text: '\bログアウト',\n          role: 'destructive',\n          handler: () => {\n            this.actionLogout()\n          }\n        },\n        {\n          text: 'キャンセル',\n          role: 'cancel',\n        }\n      ]\n    });\n    return logoutActionSheet.present();\n  }\n\n  actionLogout() {\n    this.logic.signOut()\n      .subscribe(() => this.router.navigate(['/login']));\n  }\n\n  async presentEditModal(): Promise {\n    const modal = await this.modalCtrl.create({\n      component: EditProfileModalComponent,\n      componentProps: {\n        'status': 'already',\n        'user': this.user,\n      }\n    });\n    const dismissObservable = from(modal.onDidDismiss());\n    dismissObservable\n      .pipe(concatMap(() => this.logic.fetchCurrentUser()))\n      .pipe(flatMap((result) => this.logic.fetchUserInfo(result.username)))\n      .subscribe((data) => {\n        this.user = data;\n      });\n    return modal.present();\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupPage.html":{"url":"components/SignupPage.html","title":"component - SignupPage","body":"\n                   \n\n\n\n  Components\n  SignupPage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/signup/signup.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                signup.page.scss\n            \n\n\n\n            \n                templateUrl\n                signup.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(router: Router, location: Location, logic: SignupLogicService)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             checkPasswords\n                        \n                    \n    \n                    \n                        \n    checkPasswords(group: FormGroup)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             onSubmit\n                        \n                    \n    \n                    \n                        \n    onSubmit()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             goBackToLogin\n                        \n                    \n    \n                    \n                        \n    goBackToLogin()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             signUpForm\n                        \n                    \n                    \n                        \n                            signUpForm:     FormGroup\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { SignupLogicService } from './logic/signup-logic.service';\nimport { InterfaceSignup } from '../../interfaces/signup.interface';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.page.html',\n  styleUrls: ['./signup.page.scss'],\n})\nexport class SignupPage implements OnInit {\n  signUpForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    passwordform: new FormControl('', [Validators.required, Validators.minLength(8)]),\n    confirmPasswordform: new FormControl('', [Validators.required, Validators.minLength(8)])\n  }, this.checkPasswords);\n\n  constructor(\n    private router: Router,\n    private location: Location,\n    private logic: SignupLogicService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  checkPasswords(group: FormGroup) {\n    let password = group.get('passwordform').value;\n    let confirmPassword = group.get('confirmPasswordform').value;\n    return password = confirmPassword ? null : { notSame: true }\n  }\n\n  onSubmit() {\n    const value: InterfaceSignup = this.signUpForm.value;\n    this.logic.entrySignupUser(value)\n      .subscribe(() => {\n        this.router.navigate(['/confirm'], { state: { data: { email: value.email } } });\n      })\n    if (this.signUpForm.invalid) {\n      return;\n    }\n  }\n\n  goBackToLogin() {\n    this.location.back();\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsPage.html":{"url":"components/TabsPage.html","title":"component - TabsPage","body":"\n                   \n\n\n\n  Components\n  TabsPage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/tabs/tabs.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                tabs.page.scss\n            \n\n\n\n            \n                templateUrl\n                tabs.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                \n            \n    \n\n\n\n        \n            import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: 'tabs.page.html',\n  styleUrls: ['tabs.page.scss']\n})\nexport class TabsPage {\n\n  constructor() {}\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskDetailPage.html":{"url":"components/TaskDetailPage.html","title":"component - TaskDetailPage","body":"\n                   \n\n\n\n  Components\n  TaskDetailPage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/task-detail/task-detail.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-detail\n            \n\n            \n                styleUrls\n                task-detail.page.scss\n            \n\n\n\n            \n                templateUrl\n                task-detail.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(location: Location, logic: TaskDetailLogic, route: ActivatedRoute, scroll: ViewportScroller, modalCtrl: ModalController, actionSheetCtrl: ActionSheetController, toastCtrl: ToastController, platform: Platform, alertCtrl: AlertController)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             sendMessage\n                        \n                    \n    \n                    \n                        \n    sendMessage()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             presentDoneToast\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentDoneToast()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             presentMoveTask\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentMoveTask()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             presentModalEditTask\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentModalEditTask(taskDetail: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             doneTask\n                        \n                    \n    \n                    \n                        \n    doneTask(taskDetail: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             moveTask\n                        \n                    \n    \n                    \n                        \n    moveTask(taskDetail: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             presentActionSheet\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentActionSheet(taskDetail: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             deleteTask\n                        \n                    \n    \n                    \n                        \n    deleteTask(taskDetail: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             goBackToRoom\n                        \n                    \n    \n                    \n                        \n    goBackToRoom()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             selectFile\n                        \n                    \n    \n                    \n                        \n    selectFile()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             takePhoto\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            takePhoto()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             initializeApp\n                        \n                    \n    \n                    \n                        \n    initializeApp()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     Observable\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             deleteImage\n                        \n                    \n    \n                    \n                        \n    deleteImage(indexTarget: number)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             presentAlert\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentAlert()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             arrayImageBase64Data\n                        \n                    \n                    \n                        \n                            arrayImageBase64Data:     any[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             child\n                        \n                    \n                    \n                        \n                            child:     HTMLElement\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             content\n                        \n                    \n                    \n                        \n                            content:     IonContent\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             fragmentComment\n                        \n                    \n                    \n                        \n                            fragmentComment:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: \u001d\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             link\n                        \n                    \n                    \n                        \n                            link:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: comment\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             message\n                        \n                    \n                    \n                        \n                            message:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             newMsg\n                        \n                    \n                    \n                        \n                            newMsg:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             roomMembers\n                        \n                    \n                    \n                        \n                            roomMembers:     any[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             segment\n                        \n                    \n                    \n                        \n                            segment:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             taskDetail\n                        \n                    \n                    \n                        \n                            taskDetail:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             taskId\n                        \n                    \n                    \n                        \n                            taskId:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             userId\n                        \n                    \n                    \n                        \n                            userId:     string\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Location, ViewportScroller } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { v4 as uuid } from 'uuid';\nimport { ModalController, ActionSheetController, ToastController, IonContent, Platform, AlertController } from '@ionic/angular';\nimport { Plugins, CameraResultType } from '@capacitor/core';\nimport { from, Observable } from 'rxjs';\nimport { TaskDetailLogic } from './logic/task-detail.logic';\nimport { AddTaskModalComponent } from 'src/app/shared/component/modal/add-task-modal/add-task-modal.component';\nimport { filter, tap, map, concatMap, toArray } from 'rxjs/operators';\nimport { CurrentUserInfo } from '../task/interface/current-user-info.interface';\nimport { ListRoomGroupsQuery } from 'src/app/API.service';\nimport { ListMessagesQuery } from 'src/app/shared/service/amplify.service';\nconst { Camera } = Plugins;\n\n@Component({\n  selector: 'app-task-detail',\n  templateUrl: './task-detail.page.html',\n  styleUrls: ['./task-detail.page.scss'],\n})\nexport class TaskDetailPage implements OnInit {\n  @ViewChild('comment') child: HTMLElement;\n  @ViewChild(IonContent, { static: false }) content: IonContent;\n  taskId: string;\n  segment: string;\n  taskDetail;\n  link = \"comment\"\n  fragmentComment = '\u001d';\n  newMsg: string = '';\n  message: ListMessagesQuery;\n  userId: string;\n  roomMembers: Array;\n  arrayImageBase64Data: Array = [];\n\n  constructor(\n    private location: Location,\n    private logic: TaskDetailLogic,\n    private route: ActivatedRoute,\n    private scroll: ViewportScroller,\n    private modalCtrl: ModalController,\n    private actionSheetCtrl: ActionSheetController,\n    private toastCtrl: ToastController,\n    private platform: Platform,\n    private readonly alertCtrl: AlertController,\n  ) {\n    this.initializeApp()\n      .subscribe(() => {\n        this.logic.onCreateMessageListener()\n          .subscribe(() => {\n            this.logic.fetchMessagePerTask(this.taskId)\n              .subscribe((result) => {\n                this.message = result.items\n              })\n          });\n      });\n  }\n\n  ngOnInit(): void {\n    this.taskId = this.route.snapshot.paramMap.get('id');\n    this.segment = this.route.snapshot.paramMap.get('segment');\n    this.logic.fetchCurrentUserInfo().subscribe((res: CurrentUserInfo) => {\n      this.userId = res.sub;\n    });\n    this.logic.fetchAnyTask(this.taskId)\n      .pipe(map((data) => this.taskDetail = data))\n      .pipe(concatMap(() => this.logic.fetchMemberListOnRoom(this.taskDetail.roomID)))\n      .subscribe(({ items }) => {\n        this.roomMembers = items;\n      });\n    this.logic.fetchMessagePerTask(this.taskId)\n      .subscribe((data) => {\n        this.message = data.items;\n      });\n  }\n\n  sendMessage(): void {\n    if (this.arrayImageBase64Data.length === 0) {\n      this.logic.sendNewMessage(this.taskId, this.newMsg, this.userId)\n        .subscribe(() => this.newMsg = '');\n    } else {\n      this.logic.uploadFile(this.arrayImageBase64Data, this.taskId)\n        .pipe(map((data) => data.key))\n        .pipe(concatMap((result) => this.logic.getStorage(result)))\n        .pipe(toArray())\n        .pipe(concatMap((data) => this.logic.sendNewMessage(this.taskId, this.newMsg, this.userId, data)))\n        .subscribe(() => {\n          this.newMsg = '';\n          this.arrayImageBase64Data = [];\n        });\n    }\n  }\n\n  async presentDoneToast(): Promise {\n    const toast = await this.toastCtrl.create({\n      message: 'おつかれさまでした！',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  async presentMoveTask(): Promise {\n    const toast = await this.toastCtrl.create({\n      message: '再度、戻しました。',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  ngAfterViewInit(): void {\n    this.route.fragment.subscribe((result) => {\n      this.scroll.scrollToAnchor(result);\n    });\n  }\n\n  async presentModalEditTask(taskDetail): Promise {\n    const modal = await this.modalCtrl.create({\n      component: AddTaskModalComponent,\n      componentProps: {\n        taskDetail: taskDetail,\n        roomMembers: this.roomMembers\n      },\n    });\n    const dismissObservable = from(modal.onDidDismiss());\n    dismissObservable\n      .pipe(filter(({ data }) => data !== undefined))\n      .pipe(concatMap(({ data }) => this.logic.updateTaskToRoom(data, this.taskId)))\n      .pipe(concatMap(() => this.logic.fetchAnyTask(this.taskId)))\n      .subscribe((data) => {\n        this.taskDetail = data;\n      })\n    return modal.present();\n  }\n\n  doneTask(taskDetail): void {\n    const presentToast = from(this.presentDoneToast());\n    this.logic.updateTaskItem(taskDetail, 10)\n      .pipe(concatMap(() => this.logic.fetchAnyTask(taskDetail.id)))\n      .pipe(tap(() => presentToast))\n      .subscribe((data) => this.taskDetail = data);\n  }\n\n  moveTask(taskDetail): void {\n    const presentToast = from(this.presentMoveTask());\n    this.logic.updateTaskItem(taskDetail, 0)\n      .pipe(concatMap(() => this.logic.fetchAnyTask(taskDetail.id)))\n      .pipe(tap(() => presentToast))\n      .pipe(map((data) => this.taskDetail = data))\n      .subscribe(() => { });\n  }\n\n  async presentActionSheet(taskDetail): Promise {\n    const activeActionSheet = await this.actionSheetCtrl.create({\n      cssClass: 'my-custom-class',\n      buttons: [\n        {\n          text: '編集',\n          handler: () => {\n            this.presentModalEditTask(taskDetail)\n          }\n        },\n        {\n          text: '完了',\n          handler: () => {\n            this.doneTask(taskDetail);\n          }\n        },\n        {\n          text: '削除',\n          role: 'destructive',\n          handler: () => {\n            this.deleteTask(taskDetail)\n          }\n        },\n        {\n          text: 'キャンセル',\n          role: 'cancel',\n        }\n      ]\n    });\n\n    const doneActionSheet = await this.actionSheetCtrl.create({\n      cssClass: 'my-custom-class',\n      buttons: [\n        {\n          text: 'Activeに移動',\n          handler: () => {\n            this.moveTask(taskDetail);\n          }\n        },\n        {\n          text: '編集',\n          handler: () => {\n            this.presentModalEditTask(taskDetail)\n          }\n        },\n        {\n          text: '削除',\n          role: 'destructive',\n          handler: () => {\n            this.deleteTask(taskDetail)\n          }\n        },\n        {\n          text: 'キャンセル',\n          role: 'cancel',\n        }\n      ]\n    });\n\n    if (this.segment === 'active') {\n      await activeActionSheet.present();\n    } else if (this.segment === 'done') {\n      await doneActionSheet.present();\n    }\n  }\n\n  deleteTask(taskDetail): void { }\n\n  goBackToRoom(): void {\n    this.location.back();\n  }\n\n  selectFile(): void { }\n\n  async takePhoto(): Promise {\n    const image = await Camera.getPhoto({\n      quality: 50,\n      allowEditing: true,\n      resultType: CameraResultType.DataUrl,\n      promptLabelHeader: 'カメラ',\n      promptLabelCancel: 'キャンセル',\n      promptLabelPhoto: 'ライブラリから',\n      promptLabelPicture: 'カメラ'\n    });\n    this.arrayImageBase64Data.push(image.dataUrl);\n  }\n\n  initializeApp(): Observable {\n    return from(this.platform.ready());\n  }\n\n  deleteImage(indexTarget: number): void {\n    this.arrayImageBase64Data.splice(indexTarget, 1);\n  }\n\n  async presentAlert(): Promise {\n    const alert = await this.alertCtrl.create({\n      header: 'アップロード最大値です',\n      message: '一度にアップロードできる数は一件です',\n      buttons: ['了解']\n    });\n    await alert.present();\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskPage.html":{"url":"components/TaskPage.html","title":"component - TaskPage","body":"\n                   \n\n\n\n  Components\n  TaskPage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/task/task.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task\n            \n\n            \n                styleUrls\n                task.page.scss\n            \n\n\n\n            \n                templateUrl\n                task.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(router: Router, modalCtrl: ModalController, route: ActivatedRoute, location: Location, logic: TaskLogic, toastCtrl: ToastController, actionSheetCtrl: ActionSheetController)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             ionViewWillEnter\n                        \n                    \n    \n                    \n                        \n    ionViewWillEnter()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             presentDoneToast\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentDoneToast()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             presentAddTask\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentAddTask()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             goBackToRoom\n                        \n                    \n    \n                    \n                        \n    goBackToRoom()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             activeSortTaskItem\n                        \n                    \n    \n                    \n                        \n    activeSortTaskItem()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             reorderTask\n                        \n                    \n    \n                    \n                        \n    reorderTask(ev: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             navigateToTaskDetail\n                        \n                    \n    \n                    \n                        \n    navigateToTaskDetail(task: any, segment: string, isReorder: boolean)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             addCommentToTaskDetail\n                        \n                    \n    \n                    \n                        \n    addCommentToTaskDetail(task: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             segmentChanged\n                        \n                    \n    \n                    \n                        \n    segmentChanged(ev: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             doneTask\n                        \n                    \n    \n                    \n                        \n    doneTask(taskFormItem: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             presentConfirmDelete\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentConfirmDelete(task: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             deleteTask\n                        \n                    \n    \n                    \n                        \n    deleteTask(task: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             navigateToRoomMember\n                        \n                    \n    \n                    \n                        \n    navigateToRoomMember()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             companyId\n                        \n                    \n                    \n                        \n                            companyId:     string | number\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             companyMembers\n                        \n                    \n                    \n                        \n                            companyMembers:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             currentUserEmail\n                        \n                    \n                    \n                        \n                            currentUserEmail:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             currentUserId\n                        \n                    \n                    \n                        \n                            currentUserId:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             isCheckFabButton\n                        \n                    \n                    \n                        \n                            isCheckFabButton:     boolean\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             isReorder\n                        \n                    \n                    \n                        \n                            isReorder:     boolean\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             room\n                        \n                    \n                    \n                        \n                            room:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             roomId\n                        \n                    \n                    \n                        \n                            roomId:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             roomMembers\n                        \n                    \n                    \n                        \n                            roomMembers:     CompanyMembers[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             segment\n                        \n                    \n                    \n                        \n                            segment:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             taskActiveItems\n                        \n                    \n                    \n                        \n                            taskActiveItems:     any[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             taskDoneItems\n                        \n                    \n                    \n                        \n                            taskDoneItems:     any[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             taskFormData\n                        \n                    \n                    \n                        \n                            taskFormData:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             user\n                        \n                    \n                    \n                        \n                            user:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ItemReorderEventDetail } from '@ionic/core';\nimport { ModalController, ToastController, ActionSheetController } from '@ionic/angular';\nimport { forkJoin, from, of } from 'rxjs';\nimport { flatMap, switchMap, tap, map, concatMap } from 'rxjs/operators';\nimport { GetRoomQuery, GetUserQuery, ListUsersQuery } from 'src/app/shared/service/amplify.service';\nimport { TaskLogic } from './logic/task.logic';\nimport { CurrentUserInfo } from './interface/current-user-info.interface';\nimport { AddTaskModalComponent } from '../../shared/component/modal/add-task-modal/add-task-modal.component';\nimport { InterfaceTask } from 'src/app/interfaces/task.interface';\nimport { TaskFormModel } from 'src/app/shared/model/task-form.model';\nimport { CompanyMembers } from './model/task-member.model';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.page.html',\n  styleUrls: ['./task.page.scss'],\n})\nexport class TaskPage implements OnInit {\n  room = {} as GetRoomQuery;\n  roomId: string;\n  currentUserId: string;\n  currentUserEmail: string;\n  isReorder: boolean;\n  segment: string;\n  companyId: number | string;\n  companyMembers: ListUsersQuery;\n  roomMembers: Array;\n  user: GetUserQuery;\n  taskFormData: TaskFormModel;\n  taskActiveItems: Array;\n  taskDoneItems: Array;\n\n  constructor(\n    private router: Router,\n    private modalCtrl: ModalController,\n    private route: ActivatedRoute,\n    private location: Location,\n    private logic: TaskLogic,\n    private toastCtrl: ToastController,\n    private actionSheetCtrl: ActionSheetController,\n  ) { }\n\n  ngOnInit(): void { }\n\n  ionViewWillEnter(): void {\n    this.isReorder = false;\n    this.segment = 'active';\n    this.roomId = this.route.snapshot.paramMap.get('id');\n    forkJoin({\n      companyUser: this.logic.fetchCurrentUserInfo()\n        .pipe(map((res: CurrentUserInfo) => {\n          this.currentUserEmail = res.email;\n          this.currentUserId = res.sub;\n        }))\n        .pipe(concatMap(() => this.logic.fetchUserInfoFromAmplify(this.currentUserId)))\n        .pipe(map((user) => this.user = user))\n        .pipe(map((user) => this.companyId = user.companyID))\n        .pipe(concatMap(() => this.logic.fetchCompanyMember(this.user.companyID))),\n\n      activeTaskItems: this.logic.fetchActiveTaskPerRoom(this.roomId),\n      doneTaskItems: this.logic.fetchDoneTaskPerRoom(this.roomId),\n      room: this.logic.fetchRoomInfo(this.roomId),\n      roomMembers: this.logic.fetchMemberListOnRoom(this.roomId).pipe(map(({ items }) => items)),\n    }).subscribe((data) => {\n      this.companyMembers = data.companyUser.items;\n      this.taskActiveItems = data.activeTaskItems.sort(this.logic.compareTaskArray);\n      this.taskDoneItems = data.doneTaskItems;\n      this.room = data.room;\n      this.roomMembers = data.roomMembers;\n      console.log('taskActiveItems', this.taskActiveItems);\n    });\n  }\n\n  async presentDoneToast(): Promise {\n    const toast = await this.toastCtrl.create({\n      message: 'おつかれさまでした！',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  async presentAddTask(): Promise {\n    const modal = await this.modalCtrl.create({\n      component: AddTaskModalComponent,\n      componentProps: {\n        room: this.room,\n        userId: this.currentUserId,\n        roomMembers: this.roomMembers\n      },\n    });\n    const dismissObservable = from(modal.onDidDismiss());\n    dismissObservable\n      .pipe(map(({ data }) => this.taskFormData = data))\n      .pipe(switchMap(() => this.taskActiveItems.length !== 0 ?\n        this.logic.updateStatusTaskItems(this.taskActiveItems) : of(this.taskActiveItems)\n      ))\n      .pipe(concatMap(() => this.logic.createTaskToRoom(this.taskFormData, this.roomId, this.currentUserId)))\n      .pipe(concatMap(() => this.logic.fetchActiveTaskPerRoom(this.roomId)))\n      .subscribe((items) => {\n        this.taskActiveItems = items.sort(this.logic.compareTaskArray);;\n      });\n    return modal.present();\n  }\n\n  goBackToRoom(): void {\n    this.location.back();\n  }\n\n  activeSortTaskItem(): void {\n    this.isReorder = !this.isReorder;\n  }\n\n  get isCheckFabButton(): boolean {\n    if (this.segment === 'active' && !this.isReorder) {\n      return true;\n    } else if (this.segment === 'active' && this.isReorder) {\n      return false;\n    } else {\n      return false;\n    }\n  }\n\n  reorderTask(ev: CustomEvent): void {\n    const itemMove = this.taskActiveItems.splice(ev.detail.from, 1)[0];\n    this.taskActiveItems.splice(ev.detail.to, 0, itemMove);\n    ev.detail.complete();\n    from(this.taskActiveItems)\n      .pipe(concatMap((taskActiveItem) => this.logic.getIndexNewArray(this.taskActiveItems, taskActiveItem)))\n      .pipe(concatMap((indexArray: number) => this.logic.updateTaskItemPriority(indexArray, this.taskActiveItems)))\n      .subscribe();\n  }\n\n  navigateToTaskDetail(task, segment: string, isReorder: boolean): void {\n    if (isReorder) return;\n    this.router.navigate(['task-detail', `${task.id}`, `${segment}`])\n  }\n\n  addCommentToTaskDetail(task): void {\n    this.router.navigate(['task-detail', `${task.id}`], {\n      fragment: 'comment'\n    })\n  }\n\n  segmentChanged(ev): void {\n    this.segment = ev.detail.value;\n    this.logic.fetchDoneTaskPerRoom(this.roomId).subscribe((data) => {\n      this.taskDoneItems = data;\n    })\n  }\n\n  doneTask(taskFormItem): void {\n    const presentToast = from(this.presentDoneToast());\n    this.logic.updateDoneTaskItem(taskFormItem, 10)\n      .pipe(flatMap(() => this.logic.fetchActiveTaskPerRoom(this.roomId)))\n      .pipe(tap(() => presentToast))\n      .subscribe((data) => { this.taskActiveItems = data });\n  }\n\n  async presentConfirmDelete(task): Promise {\n    const actionSheet = await this.actionSheetCtrl.create({\n      buttons: [\n        {\n          text: '削除',\n          role: 'destructive',\n          handler: () => {\n            this.deleteTask(task)\n          }\n        },\n        {\n          text: 'キャンセル',\n          role: 'cancel',\n        }\n      ]\n    })\n    return actionSheet.present();\n  }\n\n  deleteTask(task): void {\n    this.logic.deleteTaskItem(task.id)\n      .pipe(concatMap(() => this.logic.fetchActiveTaskPerRoom(this.roomId)))\n      .subscribe((result) => {\n        this.taskActiveItems = result\n      });\n  }\n\n  navigateToRoomMember(): void {\n    this.router.navigate(['room-members', `${this.roomId}`, `${this.companyId}`]);\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/APIService.html":{"url":"injectables/APIService.html","title":"injectable - APIService","body":"\n                   \n\n\n\n\n\n  Injectables\n  APIService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/API.service.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     CreateCompany\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    CreateCompany(input: CreateCompanyInput, condition: ModelCompanyConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     UpdateCompany\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    UpdateCompany(input: UpdateCompanyInput, condition: ModelCompanyConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     DeleteCompany\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    DeleteCompany(input: DeleteCompanyInput, condition: ModelCompanyConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     CreateTaskGroup\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    CreateTaskGroup(input: CreateTaskGroupInput, condition: ModelTaskGroupConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     UpdateTaskGroup\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    UpdateTaskGroup(input: UpdateTaskGroupInput, condition: ModelTaskGroupConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     DeleteTaskGroup\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    DeleteTaskGroup(input: DeleteTaskGroupInput, condition: ModelTaskGroupConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     CreateTask\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    CreateTask(input: CreateTaskInput, condition: ModelTaskConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     UpdateTask\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    UpdateTask(input: UpdateTaskInput, condition: ModelTaskConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     DeleteTask\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    DeleteTask(input: DeleteTaskInput, condition: ModelTaskConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     CreateUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    CreateUser(input: CreateUserInput, condition: ModelUserConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     UpdateUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    UpdateUser(input: UpdateUserInput, condition: ModelUserConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     DeleteUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    DeleteUser(input: DeleteUserInput, condition: ModelUserConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     CreateRoomGroup\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    CreateRoomGroup(input: CreateRoomGroupInput, condition: ModelRoomGroupConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     UpdateRoomGroup\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    UpdateRoomGroup(input: UpdateRoomGroupInput, condition: ModelRoomGroupConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     DeleteRoomGroup\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    DeleteRoomGroup(input: DeleteRoomGroupInput, condition: ModelRoomGroupConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     CreateRoom\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    CreateRoom(input: CreateRoomInput, condition: ModelRoomConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     UpdateRoom\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    UpdateRoom(input: UpdateRoomInput, condition: ModelRoomConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     DeleteRoom\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    DeleteRoom(input: DeleteRoomInput, condition: ModelRoomConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     CreateMessage\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    CreateMessage(input: CreateMessageInput, condition: ModelMessageConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     UpdateMessage\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    UpdateMessage(input: UpdateMessageInput, condition: ModelMessageConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     DeleteMessage\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    DeleteMessage(input: DeleteMessageInput, condition: ModelMessageConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     GetCompany\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    GetCompany(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     ListCompanys\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    ListCompanys(filter: ModelCompanyFilterInput, limit: number, nextToken: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     GetTaskGroup\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    GetTaskGroup(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     ListTaskGroups\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    ListTaskGroups(filter: ModelTaskGroupFilterInput, limit: number, nextToken: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     GetTask\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    GetTask(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     ListTasks\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    ListTasks(filter: ModelTaskFilterInput, limit: number, nextToken: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     GetUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    GetUser(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     ListUsers\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    ListUsers(filter: ModelUserFilterInput, limit: number, nextToken: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     GetRoomGroup\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    GetRoomGroup(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     ListRoomGroups\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    ListRoomGroups(filter: ModelRoomGroupFilterInput, limit: number, nextToken: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     GetRoom\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    GetRoom(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     ListRooms\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    ListRooms(filter: ModelRoomFilterInput, limit: number, nextToken: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     GetMessage\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    GetMessage(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     ListMessages\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    ListMessages(filter: ModelMessageFilterInput, limit: number, nextToken: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     OnCreateCompanyListener\n                                \n                            \n                            \n                                \n                                    OnCreateCompanyListener:     Observable>\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnCreateMessageListener\n                                \n                            \n                            \n                                \n                                    OnCreateMessageListener:     Observable>\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnCreateRoomGroupListener\n                                \n                            \n                            \n                                \n                                    OnCreateRoomGroupListener:     Observable>\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnCreateRoomListener\n                                \n                            \n                            \n                                \n                                    OnCreateRoomListener:     Observable>\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnCreateTaskGroupListener\n                                \n                            \n                            \n                                \n                                    OnCreateTaskGroupListener:     Observable>\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnCreateTaskListener\n                                \n                            \n                            \n                                \n                                    OnCreateTaskListener:     Observable>\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnCreateUserListener\n                                \n                            \n                            \n                                \n                                    OnCreateUserListener:     Observable>\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnDeleteCompanyListener\n                                \n                            \n                            \n                                \n                                    OnDeleteCompanyListener:     Observable>\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnDeleteMessageListener\n                                \n                            \n                            \n                                \n                                    OnDeleteMessageListener:     Observable>\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnDeleteRoomGroupListener\n                                \n                            \n                            \n                                \n                                    OnDeleteRoomGroupListener:     Observable>\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnDeleteRoomListener\n                                \n                            \n                            \n                                \n                                    OnDeleteRoomListener:     Observable>\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnDeleteTaskGroupListener\n                                \n                            \n                            \n                                \n                                    OnDeleteTaskGroupListener:     Observable>\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnDeleteTaskListener\n                                \n                            \n                            \n                                \n                                    OnDeleteTaskListener:     Observable>\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnDeleteUserListener\n                                \n                            \n                            \n                                \n                                    OnDeleteUserListener:     Observable>\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnUpdateCompanyListener\n                                \n                            \n                            \n                                \n                                    OnUpdateCompanyListener:     Observable>\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnUpdateMessageListener\n                                \n                            \n                            \n                                \n                                    OnUpdateMessageListener:     Observable>\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnUpdateRoomGroupListener\n                                \n                            \n                            \n                                \n                                    OnUpdateRoomGroupListener:     Observable>\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnUpdateRoomListener\n                                \n                            \n                            \n                                \n                                    OnUpdateRoomListener:     Observable>\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnUpdateTaskGroupListener\n                                \n                            \n                            \n                                \n                                    OnUpdateTaskGroupListener:     Observable>\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnUpdateTaskListener\n                                \n                            \n                            \n                                \n                                    OnUpdateTaskListener:     Observable>\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnUpdateUserListener\n                                \n                            \n                            \n                                \n                                    OnUpdateUserListener:     Observable>\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from \"@angular/core\";\nimport API, { graphqlOperation, GraphQLResult } from \"@aws-amplify/api-graphql\";\nimport { Observable } from \"zen-observable-ts\";\n\nexport interface SubscriptionResponse {\n  value: GraphQLResult;\n}\n\nexport type CreateCompanyInput = {\n  id?: string | null;\n  name: string;\n  domain: string;\n};\n\nexport type ModelCompanyConditionInput = {\n  name?: ModelStringInput | null;\n  domain?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelCompanyConditionInput | null;\n};\n\nexport type ModelStringInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport enum ModelAttributeTypes {\n  binary = \"binary\",\n  binarySet = \"binarySet\",\n  bool = \"bool\",\n  list = \"list\",\n  map = \"map\",\n  number = \"number\",\n  numberSet = \"numberSet\",\n  string = \"string\",\n  stringSet = \"stringSet\",\n  _null = \"_null\"\n}\n\nexport type ModelSizeInput = {\n  ne?: number | null;\n  eq?: number | null;\n  le?: number | null;\n  lt?: number | null;\n  ge?: number | null;\n  gt?: number | null;\n  between?: Array | null;\n};\n\nexport type UpdateCompanyInput = {\n  id: string;\n  name?: string | null;\n  domain?: string | null;\n};\n\nexport type DeleteCompanyInput = {\n  id?: string | null;\n};\n\nexport type CreateTaskGroupInput = {\n  id?: string | null;\n  taskID: string;\n  userID: string;\n};\n\nexport type ModelTaskGroupConditionInput = {\n  taskID?: ModelIDInput | null;\n  userID?: ModelIDInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelTaskGroupConditionInput | null;\n};\n\nexport type ModelIDInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport type UpdateTaskGroupInput = {\n  id: string;\n  taskID?: string | null;\n  userID?: string | null;\n};\n\nexport type DeleteTaskGroupInput = {\n  id?: string | null;\n};\n\nexport type CreateTaskInput = {\n  id?: string | null;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  description?: string | null;\n  scheduleDate?: string | null;\n  priority?: number | null;\n  status?: number | null;\n  createdAt?: string | null;\n};\n\nexport type ModelTaskConditionInput = {\n  authorID?: ModelIDInput | null;\n  roomID?: ModelIDInput | null;\n  chargePersonID?: ModelIDInput | null;\n  title?: ModelStringInput | null;\n  description?: ModelStringInput | null;\n  scheduleDate?: ModelStringInput | null;\n  priority?: ModelIntInput | null;\n  status?: ModelIntInput | null;\n  createdAt?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelTaskConditionInput | null;\n};\n\nexport type ModelIntInput = {\n  ne?: number | null;\n  eq?: number | null;\n  le?: number | null;\n  lt?: number | null;\n  ge?: number | null;\n  gt?: number | null;\n  between?: Array | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n};\n\nexport type UpdateTaskInput = {\n  id: string;\n  authorID?: string | null;\n  roomID?: string | null;\n  chargePersonID?: string | null;\n  title?: string | null;\n  description?: string | null;\n  scheduleDate?: string | null;\n  priority?: number | null;\n  status?: number | null;\n  createdAt?: string | null;\n};\n\nexport type DeleteTaskInput = {\n  id?: string | null;\n};\n\nexport type CreateUserInput = {\n  id?: string | null;\n  username: string;\n  email: string;\n  companyID: string;\n  tel?: string | null;\n  positionName?: string | null;\n  iconImage?: string | null;\n  registered?: boolean | null;\n  authority?: string | null;\n};\n\nexport type ModelUserConditionInput = {\n  username?: ModelStringInput | null;\n  email?: ModelStringInput | null;\n  companyID?: ModelIDInput | null;\n  tel?: ModelStringInput | null;\n  positionName?: ModelStringInput | null;\n  iconImage?: ModelStringInput | null;\n  registered?: ModelBooleanInput | null;\n  authority?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelUserConditionInput | null;\n};\n\nexport type ModelBooleanInput = {\n  ne?: boolean | null;\n  eq?: boolean | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n};\n\nexport type UpdateUserInput = {\n  id: string;\n  username?: string | null;\n  email?: string | null;\n  companyID?: string | null;\n  tel?: string | null;\n  positionName?: string | null;\n  iconImage?: string | null;\n  registered?: boolean | null;\n  authority?: string | null;\n};\n\nexport type DeleteUserInput = {\n  id?: string | null;\n};\n\nexport type CreateRoomGroupInput = {\n  id?: string | null;\n  roomID: string;\n  userID: string;\n};\n\nexport type ModelRoomGroupConditionInput = {\n  roomID?: ModelIDInput | null;\n  userID?: ModelIDInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelRoomGroupConditionInput | null;\n};\n\nexport type UpdateRoomGroupInput = {\n  id: string;\n  roomID?: string | null;\n  userID?: string | null;\n};\n\nexport type DeleteRoomGroupInput = {\n  id?: string | null;\n};\n\nexport type CreateRoomInput = {\n  id?: string | null;\n  name: string;\n  companyID: string;\n  description: string;\n};\n\nexport type ModelRoomConditionInput = {\n  name?: ModelStringInput | null;\n  companyID?: ModelIDInput | null;\n  description?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelRoomConditionInput | null;\n};\n\nexport type UpdateRoomInput = {\n  id: string;\n  name?: string | null;\n  companyID?: string | null;\n  description?: string | null;\n};\n\nexport type DeleteRoomInput = {\n  id?: string | null;\n};\n\nexport type CreateMessageInput = {\n  id?: string | null;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt?: string | null;\n  isSent?: boolean | null;\n  attachmentUri?: Array | null;\n};\n\nexport type ModelMessageConditionInput = {\n  taskID?: ModelIDInput | null;\n  authorID?: ModelIDInput | null;\n  content?: ModelStringInput | null;\n  createdAt?: ModelStringInput | null;\n  isSent?: ModelBooleanInput | null;\n  attachmentUri?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelMessageConditionInput | null;\n};\n\nexport type UpdateMessageInput = {\n  id: string;\n  taskID?: string | null;\n  authorID?: string | null;\n  content?: string | null;\n  createdAt?: string | null;\n  isSent?: boolean | null;\n  attachmentUri?: Array | null;\n};\n\nexport type DeleteMessageInput = {\n  id?: string | null;\n};\n\nexport type ModelCompanyFilterInput = {\n  id?: ModelIDInput | null;\n  name?: ModelStringInput | null;\n  domain?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelCompanyFilterInput | null;\n};\n\nexport type ModelTaskGroupFilterInput = {\n  id?: ModelIDInput | null;\n  taskID?: ModelIDInput | null;\n  userID?: ModelIDInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelTaskGroupFilterInput | null;\n};\n\nexport type ModelTaskFilterInput = {\n  id?: ModelIDInput | null;\n  authorID?: ModelIDInput | null;\n  roomID?: ModelIDInput | null;\n  chargePersonID?: ModelIDInput | null;\n  title?: ModelStringInput | null;\n  description?: ModelStringInput | null;\n  scheduleDate?: ModelStringInput | null;\n  priority?: ModelIntInput | null;\n  status?: ModelIntInput | null;\n  createdAt?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelTaskFilterInput | null;\n};\n\nexport type ModelUserFilterInput = {\n  id?: ModelIDInput | null;\n  username?: ModelStringInput | null;\n  email?: ModelStringInput | null;\n  companyID?: ModelIDInput | null;\n  tel?: ModelStringInput | null;\n  positionName?: ModelStringInput | null;\n  iconImage?: ModelStringInput | null;\n  registered?: ModelBooleanInput | null;\n  authority?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelUserFilterInput | null;\n};\n\nexport type ModelRoomGroupFilterInput = {\n  id?: ModelIDInput | null;\n  roomID?: ModelIDInput | null;\n  userID?: ModelIDInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelRoomGroupFilterInput | null;\n};\n\nexport type ModelRoomFilterInput = {\n  id?: ModelIDInput | null;\n  name?: ModelStringInput | null;\n  companyID?: ModelIDInput | null;\n  description?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelRoomFilterInput | null;\n};\n\nexport type ModelMessageFilterInput = {\n  id?: ModelIDInput | null;\n  taskID?: ModelIDInput | null;\n  authorID?: ModelIDInput | null;\n  content?: ModelStringInput | null;\n  createdAt?: ModelStringInput | null;\n  isSent?: ModelBooleanInput | null;\n  attachmentUri?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelMessageFilterInput | null;\n};\n\nexport type CreateCompanyMutation = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateCompanyMutation = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteCompanyMutation = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreateTaskGroupMutation = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateTaskGroupMutation = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteTaskGroupMutation = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreateTaskMutation = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  updatedAt: string;\n};\n\nexport type UpdateTaskMutation = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  updatedAt: string;\n};\n\nexport type DeleteTaskMutation = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  updatedAt: string;\n};\n\nexport type CreateUserMutation = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateUserMutation = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteUserMutation = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreateRoomGroupMutation = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateRoomGroupMutation = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteRoomGroupMutation = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreateRoomMutation = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateRoomMutation = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteRoomMutation = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreateMessageMutation = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  attachmentUri: Array | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type UpdateMessageMutation = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  attachmentUri: Array | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type DeleteMessageMutation = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  attachmentUri: Array | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type GetCompanyQuery = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListCompanysQuery = {\n  __typename: \"ModelCompanyConnection\";\n  items: Array | null;\n  nextToken: string | null;\n};\n\nexport type GetTaskGroupQuery = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListTaskGroupsQuery = {\n  __typename: \"ModelTaskGroupConnection\";\n  items: Array | null;\n  nextToken: string | null;\n};\n\nexport type GetTaskQuery = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  updatedAt: string;\n};\n\nexport type ListTasksQuery = {\n  __typename: \"ModelTaskConnection\";\n  items: Array | null;\n  nextToken: string | null;\n};\n\nexport type GetUserQuery = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListUsersQuery = {\n  __typename: \"ModelUserConnection\";\n  items: Array | null;\n  nextToken: string | null;\n};\n\nexport type GetRoomGroupQuery = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListRoomGroupsQuery = {\n  __typename: \"ModelRoomGroupConnection\";\n  items: Array | null;\n  nextToken: string | null;\n};\n\nexport type GetRoomQuery = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListRoomsQuery = {\n  __typename: \"ModelRoomConnection\";\n  items: Array | null;\n  nextToken: string | null;\n};\n\nexport type GetMessageQuery = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  attachmentUri: Array | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type ListMessagesQuery = {\n  __typename: \"ModelMessageConnection\";\n  items: Array | null;\n    author: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    };\n    task: {\n      __typename: \"Task\";\n      id: string;\n      authorID: string;\n      roomID: string;\n      chargePersonID: string;\n      title: string;\n      description: string | null;\n      scheduleDate: string | null;\n      priority: number | null;\n      status: number | null;\n      createdAt: string | null;\n      updatedAt: string;\n    };\n    updatedAt: string;\n  } | null> | null;\n  nextToken: string | null;\n};\n\nexport type OnCreateCompanySubscription = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateCompanySubscription = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteCompanySubscription = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreateTaskGroupSubscription = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateTaskGroupSubscription = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteTaskGroupSubscription = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreateTaskSubscription = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  updatedAt: string;\n};\n\nexport type OnUpdateTaskSubscription = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  updatedAt: string;\n};\n\nexport type OnDeleteTaskSubscription = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  updatedAt: string;\n};\n\nexport type OnCreateUserSubscription = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateUserSubscription = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteUserSubscription = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreateRoomGroupSubscription = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateRoomGroupSubscription = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteRoomGroupSubscription = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreateRoomSubscription = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateRoomSubscription = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteRoomSubscription = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreateMessageSubscription = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  attachmentUri: Array | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type OnUpdateMessageSubscription = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  attachmentUri: Array | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type OnDeleteMessageSubscription = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  attachmentUri: Array | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class APIService {\n  async CreateCompany(\n    input: CreateCompanyInput,\n    condition?: ModelCompanyConditionInput\n  ): Promise {\n    const statement = `mutation CreateCompany($input: CreateCompanyInput!, $condition: ModelCompanyConditionInput) {\n        createCompany(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          companyMembers {\n            __typename\n            items {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.createCompany;\n  }\n  async UpdateCompany(\n    input: UpdateCompanyInput,\n    condition?: ModelCompanyConditionInput\n  ): Promise {\n    const statement = `mutation UpdateCompany($input: UpdateCompanyInput!, $condition: ModelCompanyConditionInput) {\n        updateCompany(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          companyMembers {\n            __typename\n            items {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.updateCompany;\n  }\n  async DeleteCompany(\n    input: DeleteCompanyInput,\n    condition?: ModelCompanyConditionInput\n  ): Promise {\n    const statement = `mutation DeleteCompany($input: DeleteCompanyInput!, $condition: ModelCompanyConditionInput) {\n        deleteCompany(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          companyMembers {\n            __typename\n            items {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.deleteCompany;\n  }\n  async CreateTaskGroup(\n    input: CreateTaskGroupInput,\n    condition?: ModelTaskGroupConditionInput\n  ): Promise {\n    const statement = `mutation CreateTaskGroup($input: CreateTaskGroupInput!, $condition: ModelTaskGroupConditionInput) {\n        createTaskGroup(input: $input, condition: $condition) {\n          __typename\n          id\n          taskID\n          userID\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            chargePersonID\n            title\n            room {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            chargePerson {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          user {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.createTaskGroup;\n  }\n  async UpdateTaskGroup(\n    input: UpdateTaskGroupInput,\n    condition?: ModelTaskGroupConditionInput\n  ): Promise {\n    const statement = `mutation UpdateTaskGroup($input: UpdateTaskGroupInput!, $condition: ModelTaskGroupConditionInput) {\n        updateTaskGroup(input: $input, condition: $condition) {\n          __typename\n          id\n          taskID\n          userID\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            chargePersonID\n            title\n            room {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            chargePerson {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          user {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.updateTaskGroup;\n  }\n  async DeleteTaskGroup(\n    input: DeleteTaskGroupInput,\n    condition?: ModelTaskGroupConditionInput\n  ): Promise {\n    const statement = `mutation DeleteTaskGroup($input: DeleteTaskGroupInput!, $condition: ModelTaskGroupConditionInput) {\n        deleteTaskGroup(input: $input, condition: $condition) {\n          __typename\n          id\n          taskID\n          userID\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            chargePersonID\n            title\n            room {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            chargePerson {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          user {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.deleteTaskGroup;\n  }\n  async CreateTask(\n    input: CreateTaskInput,\n    condition?: ModelTaskConditionInput\n  ): Promise {\n    const statement = `mutation CreateTask($input: CreateTaskInput!, $condition: ModelTaskConditionInput) {\n        createTask(input: $input, condition: $condition) {\n          __typename\n          id\n          authorID\n          roomID\n          chargePersonID\n          title\n          room {\n            __typename\n            id\n            name\n            companyID\n            description\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          chargePerson {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              authorID\n              content\n              createdAt\n              isSent\n              attachmentUri\n              updatedAt\n            }\n            nextToken\n          }\n          users {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.createTask;\n  }\n  async UpdateTask(\n    input: UpdateTaskInput,\n    condition?: ModelTaskConditionInput\n  ): Promise {\n    const statement = `mutation UpdateTask($input: UpdateTaskInput!, $condition: ModelTaskConditionInput) {\n        updateTask(input: $input, condition: $condition) {\n          __typename\n          id\n          authorID\n          roomID\n          chargePersonID\n          title\n          room {\n            __typename\n            id\n            name\n            companyID\n            description\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          chargePerson {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              authorID\n              content\n              createdAt\n              isSent\n              attachmentUri\n              updatedAt\n            }\n            nextToken\n          }\n          users {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.updateTask;\n  }\n  async DeleteTask(\n    input: DeleteTaskInput,\n    condition?: ModelTaskConditionInput\n  ): Promise {\n    const statement = `mutation DeleteTask($input: DeleteTaskInput!, $condition: ModelTaskConditionInput) {\n        deleteTask(input: $input, condition: $condition) {\n          __typename\n          id\n          authorID\n          roomID\n          chargePersonID\n          title\n          room {\n            __typename\n            id\n            name\n            companyID\n            description\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          chargePerson {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              authorID\n              content\n              createdAt\n              isSent\n              attachmentUri\n              updatedAt\n            }\n            nextToken\n          }\n          users {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.deleteTask;\n  }\n  async CreateUser(\n    input: CreateUserInput,\n    condition?: ModelUserConditionInput\n  ): Promise {\n    const statement = `mutation CreateUser($input: CreateUserInput!, $condition: ModelUserConditionInput) {\n        createUser(input: $input, condition: $condition) {\n          __typename\n          id\n          username\n          email\n          companyID\n          tel\n          positionName\n          iconImage\n          registered\n          authority\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            companyMembers {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              authorID\n              content\n              createdAt\n              isSent\n              attachmentUri\n              updatedAt\n            }\n            nextToken\n          }\n          room {\n            __typename\n            items {\n              __typename\n              id\n              roomID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          task {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          chargeTask {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.createUser;\n  }\n  async UpdateUser(\n    input: UpdateUserInput,\n    condition?: ModelUserConditionInput\n  ): Promise {\n    const statement = `mutation UpdateUser($input: UpdateUserInput!, $condition: ModelUserConditionInput) {\n        updateUser(input: $input, condition: $condition) {\n          __typename\n          id\n          username\n          email\n          companyID\n          tel\n          positionName\n          iconImage\n          registered\n          authority\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            companyMembers {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              authorID\n              content\n              createdAt\n              isSent\n              attachmentUri\n              updatedAt\n            }\n            nextToken\n          }\n          room {\n            __typename\n            items {\n              __typename\n              id\n              roomID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          task {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          chargeTask {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.updateUser;\n  }\n  async DeleteUser(\n    input: DeleteUserInput,\n    condition?: ModelUserConditionInput\n  ): Promise {\n    const statement = `mutation DeleteUser($input: DeleteUserInput!, $condition: ModelUserConditionInput) {\n        deleteUser(input: $input, condition: $condition) {\n          __typename\n          id\n          username\n          email\n          companyID\n          tel\n          positionName\n          iconImage\n          registered\n          authority\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            companyMembers {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              authorID\n              content\n              createdAt\n              isSent\n              attachmentUri\n              updatedAt\n            }\n            nextToken\n          }\n          room {\n            __typename\n            items {\n              __typename\n              id\n              roomID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          task {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          chargeTask {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.deleteUser;\n  }\n  async CreateRoomGroup(\n    input: CreateRoomGroupInput,\n    condition?: ModelRoomGroupConditionInput\n  ): Promise {\n    const statement = `mutation CreateRoomGroup($input: CreateRoomGroupInput!, $condition: ModelRoomGroupConditionInput) {\n        createRoomGroup(input: $input, condition: $condition) {\n          __typename\n          id\n          roomID\n          userID\n          room {\n            __typename\n            id\n            name\n            companyID\n            description\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          user {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.createRoomGroup;\n  }\n  async UpdateRoomGroup(\n    input: UpdateRoomGroupInput,\n    condition?: ModelRoomGroupConditionInput\n  ): Promise {\n    const statement = `mutation UpdateRoomGroup($input: UpdateRoomGroupInput!, $condition: ModelRoomGroupConditionInput) {\n        updateRoomGroup(input: $input, condition: $condition) {\n          __typename\n          id\n          roomID\n          userID\n          room {\n            __typename\n            id\n            name\n            companyID\n            description\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          user {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.updateRoomGroup;\n  }\n  async DeleteRoomGroup(\n    input: DeleteRoomGroupInput,\n    condition?: ModelRoomGroupConditionInput\n  ): Promise {\n    const statement = `mutation DeleteRoomGroup($input: DeleteRoomGroupInput!, $condition: ModelRoomGroupConditionInput) {\n        deleteRoomGroup(input: $input, condition: $condition) {\n          __typename\n          id\n          roomID\n          userID\n          room {\n            __typename\n            id\n            name\n            companyID\n            description\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          user {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.deleteRoomGroup;\n  }\n  async CreateRoom(\n    input: CreateRoomInput,\n    condition?: ModelRoomConditionInput\n  ): Promise {\n    const statement = `mutation CreateRoom($input: CreateRoomInput!, $condition: ModelRoomConditionInput) {\n        createRoom(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          companyID\n          description\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            companyMembers {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          tasks {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          users {\n            __typename\n            items {\n              __typename\n              id\n              roomID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.createRoom;\n  }\n  async UpdateRoom(\n    input: UpdateRoomInput,\n    condition?: ModelRoomConditionInput\n  ): Promise {\n    const statement = `mutation UpdateRoom($input: UpdateRoomInput!, $condition: ModelRoomConditionInput) {\n        updateRoom(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          companyID\n          description\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            companyMembers {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          tasks {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          users {\n            __typename\n            items {\n              __typename\n              id\n              roomID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.updateRoom;\n  }\n  async DeleteRoom(\n    input: DeleteRoomInput,\n    condition?: ModelRoomConditionInput\n  ): Promise {\n    const statement = `mutation DeleteRoom($input: DeleteRoomInput!, $condition: ModelRoomConditionInput) {\n        deleteRoom(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          companyID\n          description\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            companyMembers {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          tasks {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          users {\n            __typename\n            items {\n              __typename\n              id\n              roomID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.deleteRoom;\n  }\n  async CreateMessage(\n    input: CreateMessageInput,\n    condition?: ModelMessageConditionInput\n  ): Promise {\n    const statement = `mutation CreateMessage($input: CreateMessageInput!, $condition: ModelMessageConditionInput) {\n        createMessage(input: $input, condition: $condition) {\n          __typename\n          id\n          taskID\n          authorID\n          content\n          createdAt\n          isSent\n          attachmentUri\n          author {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            chargePersonID\n            title\n            room {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            chargePerson {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.createMessage;\n  }\n  async UpdateMessage(\n    input: UpdateMessageInput,\n    condition?: ModelMessageConditionInput\n  ): Promise {\n    const statement = `mutation UpdateMessage($input: UpdateMessageInput!, $condition: ModelMessageConditionInput) {\n        updateMessage(input: $input, condition: $condition) {\n          __typename\n          id\n          taskID\n          authorID\n          content\n          createdAt\n          isSent\n          attachmentUri\n          author {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            chargePersonID\n            title\n            room {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            chargePerson {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.updateMessage;\n  }\n  async DeleteMessage(\n    input: DeleteMessageInput,\n    condition?: ModelMessageConditionInput\n  ): Promise {\n    const statement = `mutation DeleteMessage($input: DeleteMessageInput!, $condition: ModelMessageConditionInput) {\n        deleteMessage(input: $input, condition: $condition) {\n          __typename\n          id\n          taskID\n          authorID\n          content\n          createdAt\n          isSent\n          attachmentUri\n          author {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            chargePersonID\n            title\n            room {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            chargePerson {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.deleteMessage;\n  }\n  async GetCompany(id: string): Promise {\n    const statement = `query GetCompany($id: ID!) {\n        getCompany(id: $id) {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          companyMembers {\n            __typename\n            items {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.getCompany;\n  }\n  async ListCompanys(\n    filter?: ModelCompanyFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListCompanys($filter: ModelCompanyFilterInput, $limit: Int, $nextToken: String) {\n        listCompanys(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            companyMembers {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listCompanys;\n  }\n  async GetTaskGroup(id: string): Promise {\n    const statement = `query GetTaskGroup($id: ID!) {\n        getTaskGroup(id: $id) {\n          __typename\n          id\n          taskID\n          userID\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            chargePersonID\n            title\n            room {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            chargePerson {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          user {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.getTaskGroup;\n  }\n  async ListTaskGroups(\n    filter?: ModelTaskGroupFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListTaskGroups($filter: ModelTaskGroupFilterInput, $limit: Int, $nextToken: String) {\n        listTaskGroups(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            taskID\n            userID\n            task {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            user {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listTaskGroups;\n  }\n  async GetTask(id: string): Promise {\n    const statement = `query GetTask($id: ID!) {\n        getTask(id: $id) {\n          __typename\n          id\n          authorID\n          roomID\n          chargePersonID\n          title\n          room {\n            __typename\n            id\n            name\n            companyID\n            description\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          chargePerson {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              authorID\n              content\n              createdAt\n              isSent\n              attachmentUri\n              updatedAt\n            }\n            nextToken\n          }\n          users {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.getTask;\n  }\n  async ListTasks(\n    filter?: ModelTaskFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListTasks($filter: ModelTaskFilterInput, $limit: Int, $nextToken: String) {\n        listTasks(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            authorID\n            roomID\n            chargePersonID\n            title\n            room {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            chargePerson {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listTasks;\n  }\n  async GetUser(id: string): Promise {\n    const statement = `query GetUser($id: ID!) {\n        getUser(id: $id) {\n          __typename\n          id\n          username\n          email\n          companyID\n          tel\n          positionName\n          iconImage\n          registered\n          authority\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            companyMembers {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              authorID\n              content\n              createdAt\n              isSent\n              attachmentUri\n              updatedAt\n            }\n            nextToken\n          }\n          room {\n            __typename\n            items {\n              __typename\n              id\n              roomID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          task {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          chargeTask {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.getUser;\n  }\n  async ListUsers(\n    filter?: ModelUserFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListUsers($filter: ModelUserFilterInput, $limit: Int, $nextToken: String) {\n        listUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listUsers;\n  }\n  async GetRoomGroup(id: string): Promise {\n    const statement = `query GetRoomGroup($id: ID!) {\n        getRoomGroup(id: $id) {\n          __typename\n          id\n          roomID\n          userID\n          room {\n            __typename\n            id\n            name\n            companyID\n            description\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          user {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.getRoomGroup;\n  }\n  async ListRoomGroups(\n    filter?: ModelRoomGroupFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListRoomGroups($filter: ModelRoomGroupFilterInput, $limit: Int, $nextToken: String) {\n        listRoomGroups(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            roomID\n            userID\n            room {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            user {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listRoomGroups;\n  }\n  async GetRoom(id: string): Promise {\n    const statement = `query GetRoom($id: ID!) {\n        getRoom(id: $id) {\n          __typename\n          id\n          name\n          companyID\n          description\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            companyMembers {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          tasks {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          users {\n            __typename\n            items {\n              __typename\n              id\n              roomID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.getRoom;\n  }\n  async ListRooms(\n    filter?: ModelRoomFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListRooms($filter: ModelRoomFilterInput, $limit: Int, $nextToken: String) {\n        listRooms(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            name\n            companyID\n            description\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listRooms;\n  }\n  async GetMessage(id: string): Promise {\n    const statement = `query GetMessage($id: ID!) {\n        getMessage(id: $id) {\n          __typename\n          id\n          taskID\n          authorID\n          content\n          createdAt\n          isSent\n          attachmentUri\n          author {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            chargePersonID\n            title\n            room {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            chargePerson {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.getMessage;\n  }\n  async ListMessages(\n    filter?: ModelMessageFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListMessages($filter: ModelMessageFilterInput, $limit: Int, $nextToken: String) {\n        listMessages(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            taskID\n            authorID\n            content\n            createdAt\n            isSent\n            attachmentUri\n            author {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            task {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listMessages;\n  }\n  OnCreateCompanyListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateCompany {\n        onCreateCompany {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          companyMembers {\n            __typename\n            items {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n\n  OnUpdateCompanyListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateCompany {\n        onUpdateCompany {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          companyMembers {\n            __typename\n            items {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n\n  OnDeleteCompanyListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteCompany {\n        onDeleteCompany {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          companyMembers {\n            __typename\n            items {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n\n  OnCreateTaskGroupListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateTaskGroup {\n        onCreateTaskGroup {\n          __typename\n          id\n          taskID\n          userID\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            chargePersonID\n            title\n            room {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            chargePerson {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          user {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n\n  OnUpdateTaskGroupListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateTaskGroup {\n        onUpdateTaskGroup {\n          __typename\n          id\n          taskID\n          userID\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            chargePersonID\n            title\n            room {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            chargePerson {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          user {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n\n  OnDeleteTaskGroupListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteTaskGroup {\n        onDeleteTaskGroup {\n          __typename\n          id\n          taskID\n          userID\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            chargePersonID\n            title\n            room {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            chargePerson {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          user {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n\n  OnCreateTaskListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateTask {\n        onCreateTask {\n          __typename\n          id\n          authorID\n          roomID\n          chargePersonID\n          title\n          room {\n            __typename\n            id\n            name\n            companyID\n            description\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          chargePerson {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              authorID\n              content\n              createdAt\n              isSent\n              attachmentUri\n              updatedAt\n            }\n            nextToken\n          }\n          users {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n\n  OnUpdateTaskListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateTask {\n        onUpdateTask {\n          __typename\n          id\n          authorID\n          roomID\n          chargePersonID\n          title\n          room {\n            __typename\n            id\n            name\n            companyID\n            description\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          chargePerson {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              authorID\n              content\n              createdAt\n              isSent\n              attachmentUri\n              updatedAt\n            }\n            nextToken\n          }\n          users {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n\n  OnDeleteTaskListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteTask {\n        onDeleteTask {\n          __typename\n          id\n          authorID\n          roomID\n          chargePersonID\n          title\n          room {\n            __typename\n            id\n            name\n            companyID\n            description\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          chargePerson {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              authorID\n              content\n              createdAt\n              isSent\n              attachmentUri\n              updatedAt\n            }\n            nextToken\n          }\n          users {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n\n  OnCreateUserListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateUser {\n        onCreateUser {\n          __typename\n          id\n          username\n          email\n          companyID\n          tel\n          positionName\n          iconImage\n          registered\n          authority\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            companyMembers {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              authorID\n              content\n              createdAt\n              isSent\n              attachmentUri\n              updatedAt\n            }\n            nextToken\n          }\n          room {\n            __typename\n            items {\n              __typename\n              id\n              roomID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          task {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          chargeTask {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n\n  OnUpdateUserListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateUser {\n        onUpdateUser {\n          __typename\n          id\n          username\n          email\n          companyID\n          tel\n          positionName\n          iconImage\n          registered\n          authority\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            companyMembers {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              authorID\n              content\n              createdAt\n              isSent\n              attachmentUri\n              updatedAt\n            }\n            nextToken\n          }\n          room {\n            __typename\n            items {\n              __typename\n              id\n              roomID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          task {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          chargeTask {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n\n  OnDeleteUserListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteUser {\n        onDeleteUser {\n          __typename\n          id\n          username\n          email\n          companyID\n          tel\n          positionName\n          iconImage\n          registered\n          authority\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            companyMembers {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              authorID\n              content\n              createdAt\n              isSent\n              attachmentUri\n              updatedAt\n            }\n            nextToken\n          }\n          room {\n            __typename\n            items {\n              __typename\n              id\n              roomID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          task {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          chargeTask {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n\n  OnCreateRoomGroupListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateRoomGroup {\n        onCreateRoomGroup {\n          __typename\n          id\n          roomID\n          userID\n          room {\n            __typename\n            id\n            name\n            companyID\n            description\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          user {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n\n  OnUpdateRoomGroupListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateRoomGroup {\n        onUpdateRoomGroup {\n          __typename\n          id\n          roomID\n          userID\n          room {\n            __typename\n            id\n            name\n            companyID\n            description\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          user {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n\n  OnDeleteRoomGroupListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteRoomGroup {\n        onDeleteRoomGroup {\n          __typename\n          id\n          roomID\n          userID\n          room {\n            __typename\n            id\n            name\n            companyID\n            description\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          user {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n\n  OnCreateRoomListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateRoom {\n        onCreateRoom {\n          __typename\n          id\n          name\n          companyID\n          description\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            companyMembers {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          tasks {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          users {\n            __typename\n            items {\n              __typename\n              id\n              roomID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n\n  OnUpdateRoomListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateRoom {\n        onUpdateRoom {\n          __typename\n          id\n          name\n          companyID\n          description\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            companyMembers {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          tasks {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          users {\n            __typename\n            items {\n              __typename\n              id\n              roomID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n\n  OnDeleteRoomListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteRoom {\n        onDeleteRoom {\n          __typename\n          id\n          name\n          companyID\n          description\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            companyMembers {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          tasks {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          users {\n            __typename\n            items {\n              __typename\n              id\n              roomID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n\n  OnCreateMessageListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateMessage {\n        onCreateMessage {\n          __typename\n          id\n          taskID\n          authorID\n          content\n          createdAt\n          isSent\n          attachmentUri\n          author {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            chargePersonID\n            title\n            room {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            chargePerson {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n\n  OnUpdateMessageListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateMessage {\n        onUpdateMessage {\n          __typename\n          id\n          taskID\n          authorID\n          content\n          createdAt\n          isSent\n          attachmentUri\n          author {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            chargePersonID\n            title\n            room {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            chargePerson {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n\n  OnDeleteMessageListener: Observable\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteMessage {\n        onDeleteMessage {\n          __typename\n          id\n          taskID\n          authorID\n          content\n          createdAt\n          isSent\n          attachmentUri\n          author {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            chargePersonID\n            title\n            room {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            chargePerson {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable>;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddPersonLogic.html":{"url":"injectables/AddPersonLogic.html","title":"injectable - AddPersonLogic","body":"\n                   \n\n\n\n\n\n  Injectables\n  AddPersonLogic\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/task/logic/add-person.logic.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n            \n                        \n                    \n            \n\n\n    \n    \n        import { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddPersonLogic {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmplifyService.html":{"url":"injectables/AmplifyService.html","title":"injectable - AmplifyService","body":"\n                   \n\n\n\n\n\n  Injectables\n  AmplifyService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/service/amplify.service.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     CreateCompany\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    CreateCompany(input: CreateCompanyInput, condition: ModelCompanyConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     UpdateCompany\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    UpdateCompany(input: UpdateCompanyInput, condition: ModelCompanyConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     DeleteCompany\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    DeleteCompany(input: DeleteCompanyInput, condition: ModelCompanyConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     CreateRoom\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    CreateRoom(input: CreateRoomInput, condition: ModelRoomConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     UpdateRoom\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    UpdateRoom(input: UpdateRoomInput, condition: ModelRoomConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     DeleteRoom\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    DeleteRoom(input: DeleteRoomInput, condition: ModelRoomConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     CreateTask\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    CreateTask(input: CreateTaskInput, condition: ModelTaskConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     UpdateTask\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    UpdateTask(input: UpdateTaskInput, condition: ModelTaskConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     DeleteTask\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    DeleteTask(input: DeleteTaskInput, condition: ModelTaskConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     CreateMessage\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    CreateMessage(input: CreateMessageInput, condition: ModelMessageConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     UpdateMessage\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    UpdateMessage(input: UpdateMessageInput, condition: ModelMessageConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     DeleteMessage\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    DeleteMessage(input: DeleteMessageInput, condition: ModelMessageConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     CreateUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    CreateUser(input: CreateUserInput, condition: ModelUserConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     UpdateUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    UpdateUser(input: UpdateUserInput, condition: ModelUserConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     DeleteUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    DeleteUser(input: DeleteUserInput, condition: ModelUserConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     GetCompany\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    GetCompany(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     ListCompanys\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    ListCompanys(filter: ModelCompanyFilterInput, limit: number, nextToken: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     GetRoom\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    GetRoom(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     ListRooms\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    ListRooms(filter: ModelRoomFilterInput, limit: number, nextToken: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     GetTask\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    GetTask(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     ListTasks\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    ListTasks(filter: ModelTaskFilterInput, limit: number, nextToken: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     GetMessage\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    GetMessage(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     ListMessages\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    ListMessages(filter: ModelMessageFilterInput, limit: number, nextToken: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     GetUser\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    GetUser(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     ListUsers\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    ListUsers(filter: ModelUserFilterInput, limit: number, nextToken: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     CreateRoomGroup\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    CreateRoomGroup(input: CreateRoomGroupInput, condition: ModelRoomConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     ListRoomGroups\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    ListRoomGroups(filter: ModelRoomGroupFilterInput, limit: number, nextToken: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     ListTaskGroups\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    ListTaskGroups(filter: ModelTaskGroupFilterInput, limit: number, nextToken: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     DeleteRoomGroup\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    DeleteRoomGroup(input: DeleteRoomGroupInput, condition: ModelRoomGroupConditionInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     OnCreateCompanyListener\n                                \n                            \n                            \n                                \n                                    OnCreateCompanyListener:     Observable\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnCreateMessageListener\n                                \n                            \n                            \n                                \n                                    OnCreateMessageListener:     Observable\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnCreateRoomListener\n                                \n                            \n                            \n                                \n                                    OnCreateRoomListener:     Observable\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnCreateTaskListener\n                                \n                            \n                            \n                                \n                                    OnCreateTaskListener:     Observable\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnCreateUserListener\n                                \n                            \n                            \n                                \n                                    OnCreateUserListener:     Observable\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnDeleteCompanyListener\n                                \n                            \n                            \n                                \n                                    OnDeleteCompanyListener:     Observable\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnDeleteMessageListener\n                                \n                            \n                            \n                                \n                                    OnDeleteMessageListener:     Observable\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnDeleteRoomListener\n                                \n                            \n                            \n                                \n                                    OnDeleteRoomListener:     Observable\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnDeleteTaskListener\n                                \n                            \n                            \n                                \n                                    OnDeleteTaskListener:     Observable\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnDeleteUserListener\n                                \n                            \n                            \n                                \n                                    OnDeleteUserListener:     Observable\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnUpdateCompanyListener\n                                \n                            \n                            \n                                \n                                    OnUpdateCompanyListener:     Observable\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnUpdateMessageListener\n                                \n                            \n                            \n                                \n                                    OnUpdateMessageListener:     Observable\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnUpdateRoomListener\n                                \n                            \n                            \n                                \n                                    OnUpdateRoomListener:     Observable\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnUpdateTaskListener\n                                \n                            \n                            \n                                \n                                    OnUpdateTaskListener:     Observable\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     OnUpdateUserListener\n                                \n                            \n                            \n                                \n                                    OnUpdateUserListener:     Observable\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from \"@angular/core\";\nimport API, { graphqlOperation } from \"@aws-amplify/api\";\nimport { GraphQLResult } from \"@aws-amplify/api/lib/types\";\nimport { Observable } from \"zen-observable-ts\";\n\nexport interface SubscriptionResponse {\n  value: GraphQLResult;\n}\n\nexport type CreateCompanyInput = {\n  id?: string | null;\n  name: string;\n  domain: string;\n};\n\nexport type ModelCompanyConditionInput = {\n  name?: ModelStringInput | null;\n  domain?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelCompanyConditionInput | null;\n};\n\nexport type ModelStringInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport enum ModelAttributeTypes {\n  binary = \"binary\",\n  binarySet = \"binarySet\",\n  bool = \"bool\",\n  list = \"list\",\n  map = \"map\",\n  number = \"number\",\n  numberSet = \"numberSet\",\n  string = \"string\",\n  stringSet = \"stringSet\",\n  _null = \"_null\"\n}\n\nexport type ModelSizeInput = {\n  ne?: number | null;\n  eq?: number | null;\n  le?: number | null;\n  lt?: number | null;\n  ge?: number | null;\n  gt?: number | null;\n  between?: Array | null;\n};\n\nexport type UpdateCompanyInput = {\n  id: string;\n  name?: string | null;\n  domain?: string | null;\n};\n\nexport type DeleteCompanyInput = {\n  id?: string | null;\n};\n\nexport type CreateUserInput = {\n  id?: string | null;\n  username: string;\n  email: string;\n  companyID: string;\n  tel?: string | null;\n  positionName?: string | null;\n  iconImage?: string | null;\n  registered?: boolean | null;\n  authority?: string | null;\n};\n\nexport type ModelUserConditionInput = {\n  username?: ModelStringInput | null;\n  email?: ModelStringInput | null;\n  companyID?: ModelIDInput | null;\n  tel?: ModelStringInput | null;\n  positionName?: ModelStringInput | null;\n  iconImage?: ModelStringInput | null;\n  registered?: ModelBooleanInput | null;\n  authority?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelUserConditionInput | null;\n};\n\nexport type ModelIDInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport type ModelBooleanInput = {\n  ne?: boolean | null;\n  eq?: boolean | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n};\n\nexport type UpdateUserInput = {\n  id: string;\n  username?: string | null;\n  email?: string | null;\n  companyID?: string | null;\n  tel?: string | null;\n  positionName?: string | null;\n  iconImage?: string | null;\n  registered?: boolean | null;\n  authority?: string | null;\n};\n\nexport type DeleteUserInput = {\n  id?: string | null;\n};\n\nexport type CreateTaskGroupInput = {\n  id?: string | null;\n  taskID: string;\n  userID: string;\n};\n\nexport type ModelTaskGroupConditionInput = {\n  taskID?: ModelIDInput | null;\n  userID?: ModelIDInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelTaskGroupConditionInput | null;\n};\n\nexport type UpdateTaskGroupInput = {\n  id: string;\n  taskID?: string | null;\n  userID?: string | null;\n};\n\nexport type DeleteTaskGroupInput = {\n  id?: string | null;\n};\n\nexport type CreateTaskInput = {\n  id?: string | null;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  description?: string | null;\n  scheduleDate?: string | null;\n  priority?: number | null;\n  status?: number | null;\n  createdAt?: string | null;\n};\n\nexport type ModelTaskConditionInput = {\n  authorID?: ModelIDInput | null;\n  roomID?: ModelIDInput | null;\n  chargePersonID?: ModelIDInput | null;\n  title?: ModelStringInput | null;\n  description?: ModelStringInput | null;\n  scheduleDate?: ModelStringInput | null;\n  priority?: ModelIntInput | null;\n  status?: ModelIntInput | null;\n  createdAt?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelTaskConditionInput | null;\n};\n\nexport type ModelIntInput = {\n  ne?: number | null;\n  eq?: number | null;\n  le?: number | null;\n  lt?: number | null;\n  ge?: number | null;\n  gt?: number | null;\n  between?: Array | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n};\n\nexport type UpdateTaskInput = {\n  id: string;\n  authorID?: string | null;\n  roomID?: string | null;\n  chargePersonID?: string | null;\n  title?: string | null;\n  description?: string | null;\n  scheduleDate?: string | null;\n  priority?: number | null;\n  status?: number | null;\n  createdAt?: string | null;\n};\n\nexport type DeleteTaskInput = {\n  id?: string | null;\n};\n\nexport type CreateRoomGroupInput = {\n  id?: string | null;\n  roomID: string;\n  userID: string;\n};\n\nexport type ModelRoomGroupConditionInput = {\n  roomID?: ModelIDInput | null;\n  userID?: ModelIDInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelRoomGroupConditionInput | null;\n};\n\nexport type UpdateRoomGroupInput = {\n  id: string;\n  roomID?: string | null;\n  userID?: string | null;\n};\n\nexport type DeleteRoomGroupInput = {\n  id?: string | null;\n};\n\nexport type CreateRoomInput = {\n  id?: string | null;\n  name: string;\n  companyID: string;\n  description: string;\n};\n\nexport type ModelRoomConditionInput = {\n  name?: ModelStringInput | null;\n  companyID?: ModelIDInput | null;\n  description?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelRoomConditionInput | null;\n};\n\nexport type UpdateRoomInput = {\n  id: string;\n  name?: string | null;\n  companyID?: string | null;\n  description?: string | null;\n};\n\nexport type DeleteRoomInput = {\n  id?: string | null;\n};\n\nexport type CreateMessageInput = {\n  id?: string | null;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt?: string | null;\n  isSent?: boolean | null;\n};\n\nexport type ModelMessageConditionInput = {\n  taskID?: ModelIDInput | null;\n  authorID?: ModelIDInput | null;\n  content?: ModelStringInput | null;\n  createdAt?: ModelStringInput | null;\n  isSent?: ModelBooleanInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelMessageConditionInput | null;\n};\n\nexport type UpdateMessageInput = {\n  id: string;\n  taskID?: string | null;\n  authorID?: string | null;\n  content?: string | null;\n  createdAt?: string | null;\n  isSent?: boolean | null;\n};\n\nexport type DeleteMessageInput = {\n  id?: string | null;\n};\n\nexport type ModelCompanyFilterInput = {\n  id?: ModelIDInput | null;\n  name?: ModelStringInput | null;\n  domain?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelCompanyFilterInput | null;\n};\n\nexport type ModelUserFilterInput = {\n  id?: ModelIDInput | null;\n  username?: ModelStringInput | null;\n  email?: ModelStringInput | null;\n  companyID?: ModelIDInput | null;\n  tel?: ModelStringInput | null;\n  positionName?: ModelStringInput | null;\n  iconImage?: ModelStringInput | null;\n  registered?: ModelBooleanInput | null;\n  authority?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelUserFilterInput | null;\n};\n\nexport type ModelTaskGroupFilterInput = {\n  id?: ModelIDInput | null;\n  taskID?: ModelIDInput | null;\n  userID?: ModelIDInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelTaskGroupFilterInput | null;\n};\n\nexport type ModelTaskFilterInput = {\n  id?: ModelIDInput | null;\n  authorID?: ModelIDInput | null;\n  roomID?: ModelIDInput | null;\n  chargePersonID?: ModelIDInput | null;\n  title?: ModelStringInput | null;\n  description?: ModelStringInput | null;\n  scheduleDate?: ModelStringInput | null;\n  priority?: ModelIntInput | null;\n  status?: ModelIntInput | null;\n  createdAt?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelTaskFilterInput | null;\n};\n\nexport type ModelRoomGroupFilterInput = {\n  id?: ModelIDInput | null;\n  roomID?: ModelIDInput | null;\n  userID?: ModelIDInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelRoomGroupFilterInput | null;\n};\n\nexport type ModelRoomFilterInput = {\n  id?: ModelIDInput | null;\n  name?: ModelStringInput | null;\n  companyID?: ModelIDInput | null;\n  description?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelRoomFilterInput | null;\n};\n\nexport type ModelMessageFilterInput = {\n  id?: ModelIDInput | null;\n  taskID?: ModelIDInput | null;\n  authorID?: ModelIDInput | null;\n  content?: ModelStringInput | null;\n  createdAt?: ModelStringInput | null;\n  isSent?: ModelBooleanInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelMessageFilterInput | null;\n};\n\nexport type CreateCompanyMutation = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateCompanyMutation = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteCompanyMutation = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreateUserMutation = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateUserMutation = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteUserMutation = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreateTaskGroupMutation = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateTaskGroupMutation = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteTaskGroupMutation = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreateTaskMutation = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  updatedAt: string;\n};\n\nexport type UpdateTaskMutation = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  updatedAt: string;\n};\n\nexport type DeleteTaskMutation = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  updatedAt: string;\n};\n\nexport type CreateRoomGroupMutation = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateRoomGroupMutation = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteRoomGroupMutation = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreateRoomMutation = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateRoomMutation = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteRoomMutation = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreateMessageMutation = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type UpdateMessageMutation = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type DeleteMessageMutation = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type GetCompanyQuery = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListCompanysQuery = {\n  __typename: \"ModelCompanyConnection\";\n  items: Array | null;\n  nextToken: string | null;\n};\n\nexport type GetUserQuery = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListUsersQuery = {\n  __typename: \"ModelUserConnection\";\n  items: Array | null;\n  nextToken: string | null;\n};\n\nexport type GetTaskGroupQuery = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListTaskGroupsQuery = {\n  __typename: \"ModelTaskGroupConnection\";\n  items: Array | null;\n  nextToken: string | null;\n};\n\nexport type GetTaskQuery = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  updatedAt: string;\n};\n\nexport type ListTasksQuery = {\n  __typename: \"ModelTaskConnection\";\n  items: Array | null;\n  nextToken: string | null;\n};\n\nexport type GetRoomGroupQuery = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room?: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListRoomGroupsQuery = {\n  __typename: \"ModelRoomGroupConnection\";\n  items: Array | null;\n  nextToken: string | null;\n};\n\nexport type GetRoomQuery = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListRoomsQuery = {\n  __typename: \"ModelRoomConnection\";\n  items: Array | null;\n  nextToken: string | null;\n};\n\nexport type GetMessageQuery = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type ListMessagesQuery = {\n  __typename: \"ModelMessageConnection\";\n  items: Array | null;\n    author: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    };\n    task: {\n      __typename: \"Task\";\n      id: string;\n      authorID: string;\n      roomID: string;\n      chargePersonID: string;\n      title: string;\n      description: string | null;\n      scheduleDate: string | null;\n      priority: number | null;\n      status: number | null;\n      createdAt: string | null;\n      updatedAt: string;\n    };\n    updatedAt: string;\n  } | null> | null;\n  nextToken: string | null;\n};\n\nexport type OnCreateCompanySubscription = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateCompanySubscription = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteCompanySubscription = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreateUserSubscription = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateUserSubscription = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteUserSubscription = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreateTaskGroupSubscription = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateTaskGroupSubscription = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteTaskGroupSubscription = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreateTaskSubscription = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  updatedAt: string;\n};\n\nexport type OnUpdateTaskSubscription = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  updatedAt: string;\n};\n\nexport type OnDeleteTaskSubscription = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  updatedAt: string;\n};\n\nexport type OnCreateRoomGroupSubscription = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateRoomGroupSubscription = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteRoomGroupSubscription = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreateRoomSubscription = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateRoomSubscription = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteRoomSubscription = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreateMessageSubscription = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type OnUpdateMessageSubscription = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type OnDeleteMessageSubscription = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AmplifyService {\n  async CreateCompany(\n    input: CreateCompanyInput,\n    condition?: ModelCompanyConditionInput\n  ): Promise {\n    const statement = `mutation CreateCompany($input: CreateCompanyInput!, $condition: ModelCompanyConditionInput) {\n        createCompany(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.createCompany;\n  }\n  async UpdateCompany(\n    input: UpdateCompanyInput,\n    condition?: ModelCompanyConditionInput\n  ): Promise {\n    const statement = `mutation UpdateCompany($input: UpdateCompanyInput!, $condition: ModelCompanyConditionInput) {\n        updateCompany(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.updateCompany;\n  }\n  async DeleteCompany(\n    input: DeleteCompanyInput,\n    condition?: ModelCompanyConditionInput\n  ): Promise {\n    const statement = `mutation DeleteCompany($input: DeleteCompanyInput!, $condition: ModelCompanyConditionInput) {\n        deleteCompany(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.deleteCompany;\n  }\n  async CreateRoom(\n    input: CreateRoomInput,\n    condition?: ModelRoomConditionInput\n  ): Promise {\n    const statement = `mutation CreateRoom($input: CreateRoomInput!, $condition: ModelRoomConditionInput) {\n        createRoom(input: $input, condition: $condition) {\n          __typename\n          id\n          companyID\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.createRoom;\n  }\n  async UpdateRoom(\n    input: UpdateRoomInput,\n    condition?: ModelRoomConditionInput\n  ): Promise {\n    const statement = `mutation UpdateRoom($input: UpdateRoomInput!, $condition: ModelRoomConditionInput) {\n        updateRoom(input: $input, condition: $condition) {\n          __typename\n          id\n          companyID\n          name\n          description\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          tasks {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.updateRoom;\n  }\n  async DeleteRoom(\n    input: DeleteRoomInput,\n    condition?: ModelRoomConditionInput\n  ): Promise {\n    const statement = `mutation DeleteRoom($input: DeleteRoomInput!, $condition: ModelRoomConditionInput) {\n        deleteRoom(input: $input, condition: $condition) {\n          __typename\n          id\n          companyID\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.deleteRoom;\n  }\n  async CreateTask(\n    input: CreateTaskInput,\n    condition?: ModelTaskConditionInput\n  ): Promise {\n    const statement = `mutation CreateTask($input: CreateTaskInput!, $condition: ModelTaskConditionInput) {\n        createTask(input: $input, condition: $condition) {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          chargePerson {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n          }\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.createTask;\n  }\n  async UpdateTask(\n    input: UpdateTaskInput,\n    condition?: ModelTaskConditionInput\n  ): Promise {\n    const statement = `mutation UpdateTask($input: UpdateTaskInput!, $condition: ModelTaskConditionInput) {\n        updateTask(input: $input, condition: $condition) {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.updateTask;\n  }\n  async DeleteTask(\n    input: DeleteTaskInput,\n    condition?: ModelTaskConditionInput\n  ): Promise {\n    const statement = `mutation DeleteTask($input: DeleteTaskInput!, $condition: ModelTaskConditionInput) {\n        deleteTask(input: $input, condition: $condition) {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.deleteTask;\n  }\n  async CreateMessage(\n    input: CreateMessageInput,\n    condition?: ModelMessageConditionInput\n  ): Promise {\n    const statement = `mutation CreateMessage($input: CreateMessageInput!, $condition: ModelMessageConditionInput) {\n        createMessage(input: $input, condition: $condition) {\n          __typename\n          id\n          taskID\n          content\n          createdAt\n          isSent\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.createMessage;\n  }\n  async UpdateMessage(\n    input: UpdateMessageInput,\n    condition?: ModelMessageConditionInput\n  ): Promise {\n    const statement = `mutation UpdateMessage($input: UpdateMessageInput!, $condition: ModelMessageConditionInput) {\n        updateMessage(input: $input, condition: $condition) {\n          __typename\n          id\n          taskID\n          author {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          content\n          createdAt\n          isSent\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            room {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.updateMessage;\n  }\n  async DeleteMessage(\n    input: DeleteMessageInput,\n    condition?: ModelMessageConditionInput\n  ): Promise {\n    const statement = `mutation DeleteMessage($input: DeleteMessageInput!, $condition: ModelMessageConditionInput) {\n        deleteMessage(input: $input, condition: $condition) {\n          __typename\n          id\n          taskID\n          author {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          content\n          createdAt\n          isSent\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            room {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.deleteMessage;\n  }\n\n  async CreateUser(\n    input: CreateUserInput,\n    condition?: ModelUserConditionInput\n  ): Promise {\n    const statement = `mutation CreateUser($input: CreateUserInput!, $condition: ModelUserConditionInput) {\n        createUser(input: $input, condition: $condition) {\n          __typename\n          id\n          email\n          companyID\n          username\n          tel\n          positionName\n          iconImage\n          registered\n          authority\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.createUser;\n  }\n\n  async UpdateUser(\n    input: UpdateUserInput,\n    condition?: ModelUserConditionInput\n  ): Promise {\n    const statement = `mutation UpdateUser($input: UpdateUserInput!, $condition: ModelUserConditionInput) {\n        updateUser(input: $input, condition: $condition) {\n          __typename\n          id\n          username\n          email\n          companyID\n          tel\n          positionName\n          iconImage\n          registered\n          authority\n          room {\n            __typename\n            items {\n              __typename\n              id\n              roomID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          task {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          chargeTask {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.updateUser;\n  }\n  async DeleteUser(\n    input: DeleteUserInput,\n    condition?: ModelUserConditionInput\n  ): Promise {\n    const statement = `mutation DeleteUser($input: DeleteUserInput!, $condition: ModelUserConditionInput) {\n        deleteUser(input: $input, condition: $condition) {\n          __typename\n          id\n          email\n          companyID\n          username\n          registered\n          authority\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.deleteUser;\n  }\n  async GetCompany(id: string): Promise {\n    const statement = `query GetCompany($id: ID!) {\n        getCompany(id: $id) {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.getCompany;\n  }\n  async ListCompanys(\n    filter?: ModelCompanyFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListCompanys($filter: ModelCompanyFilterInput, $limit: Int, $nextToken: String) {\n        listCompanys(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listCompanys;\n  }\n  async GetRoom(id: string): Promise {\n    const statement = `query GetRoom($id: ID!) {\n        getRoom(id: $id) {\n          __typename\n          id\n          companyID\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.getRoom;\n  }\n  async ListRooms(\n    filter?: ModelRoomFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListRooms($filter: ModelRoomFilterInput, $limit: Int, $nextToken: String) {\n        listRooms(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            companyID\n            name\n            description\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listRooms;\n  }\n  async GetTask(id: string): Promise {\n    const statement = `query GetTask($id: ID!) {\n        getTask(id: $id) {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          room {\n            __typename\n            id\n            name\n            companyID\n            description\n            tasks {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              content\n              createdAt\n              isSent\n              updatedAt\n            }\n            nextToken\n          }\n          users {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          chargePerson {\n            __typename\n            id\n            username\n            email\n            companyID\n            positionName\n            iconImage\n            registered\n            authority\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.getTask;\n  }\n  async ListTasks(\n    filter?: ModelTaskFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListTasks($filter: ModelTaskFilterInput, $limit: Int, $nextToken: String) {\n        listTasks(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            chargePerson {\n              __typename\n              id\n              username\n              email\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listTasks;\n  }\n  async GetMessage(id: string): Promise {\n    const statement = `query GetMessage($id: ID!) {\n        getMessage(id: $id) {\n          __typename\n          id\n          taskID\n          author {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          content\n          createdAt\n          isSent\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            room {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.getMessage;\n  }\n  async ListMessages(\n    filter?: ModelMessageFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListMessages($filter: ModelMessageFilterInput, $limit: Int, $nextToken: String) {\n        listMessages(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            taskID\n            author {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            content\n            createdAt\n            isSent\n            attachmentUri\n            task {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listMessages;\n  }\n\n  async GetUser(id: string): Promise {\n    const statement = `query GetUser($id: ID!) {\n      getUser(id: $id) {\n        __typename\n        id\n        username\n        email\n        companyID\n        tel\n        positionName\n        iconImage\n        registered\n        authority\n        chargeTask {\n          __typename\n          items {\n            __typename\n            id\n            authorID\n            roomID\n            chargePersonID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n    }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.getUser;\n  }\n  async ListUsers(\n    filter?: ModelUserFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListUsers($filter: ModelUserFilterInput, $limit: Int, $nextToken: String) {\n      listUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n        __typename\n        items {\n          __typename\n          id\n          username\n          email\n          companyID\n          tel\n          positionName\n          iconImage\n          registered\n          authority\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n    }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listUsers;\n  }\n  OnCreateCompanyListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateCompany {\n        onCreateCompany {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnUpdateCompanyListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateCompany {\n        onUpdateCompany {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnDeleteCompanyListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteCompany {\n        onDeleteCompany {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnCreateRoomListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateRoom {\n        onCreateRoom {\n          __typename\n          id\n          companyID\n          name\n          description\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          tasks {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnUpdateRoomListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateRoom {\n        onUpdateRoom {\n          __typename\n          id\n          companyID\n          name\n          description\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          tasks {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnDeleteRoomListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteRoom {\n        onDeleteRoom {\n          __typename\n          id\n          companyID\n          name\n          description\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          tasks {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnCreateTaskListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateTask {\n        onCreateTask {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          room {\n            __typename\n            id\n            companyID\n            name\n            description\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              content\n              createdAt\n              isSent\n              updatedAt\n            }\n            nextToken\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnUpdateTaskListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateTask {\n        onUpdateTask {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          room {\n            __typename\n            id\n            companyID\n            name\n            description\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              content\n              createdAt\n              isSent\n              updatedAt\n            }\n            nextToken\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnDeleteTaskListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteTask {\n        onDeleteTask {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          room {\n            __typename\n            id\n            companyID\n            name\n            description\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              content\n              createdAt\n              isSent\n              updatedAt\n            }\n            nextToken\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnCreateMessageListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateMessage {\n        onCreateMessage {\n          __typename\n          id\n          taskID\n          author {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          content\n          createdAt\n          isSent\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            room {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            messages {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n  OnUpdateMessageListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateMessage {\n        onUpdateMessage {\n          __typename\n          id\n          taskID\n          author {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          content\n          createdAt\n          isSent\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            room {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnDeleteMessageListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteMessage {\n        onDeleteMessage {\n          __typename\n          id\n          taskID\n          author {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          content\n          createdAt\n          isSent\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            room {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnCreateUserListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateUser {\n        onCreateUser {\n          __typename\n          id\n          email\n          companyID\n          username\n          registered\n          authority\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnUpdateUserListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateUser {\n        onUpdateUser {\n          __typename\n          id\n          email\n          companyID\n          username\n          registered\n          authority\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnDeleteUserListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteUser {\n        onDeleteUser {\n          __typename\n          id\n          email\n          companyID\n          username\n          registered\n          authority\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  async CreateRoomGroup(\n    input: CreateRoomGroupInput,\n    condition?: ModelRoomConditionInput\n  ): Promise {\n    const statement = `mutation CreateRoomGroup($input: CreateRoomGroupInput!, $condition: ModelRoomGroupConditionInput) {\n        createRoomGroup(input: $input, condition: $condition) {\n          __typename\n          id\n          roomID\n          userID\n          room {\n            __typename\n            id\n            name\n            companyID\n            description\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.createRoomGroup;\n  }\n\n  async ListRoomGroups(\n    filter?: ModelRoomGroupFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListRoomGroups($filter: ModelRoomGroupFilterInput, $limit: Int, $nextToken: String) {\n        listRoomGroups(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            roomID\n            userID\n            room {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            user {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listRoomGroups;\n  }\n  async ListTaskGroups(\n    filter?: ModelTaskGroupFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListTaskGroups($filter: ModelTaskGroupFilterInput, $limit: Int, $nextToken: String) {\n        listTaskGroups(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            taskID\n            userID\n            task {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            user {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listTaskGroups;\n  }\n  async DeleteRoomGroup(\n    input: DeleteRoomGroupInput,\n    condition?: ModelRoomGroupConditionInput\n  ): Promise {\n    const statement = `mutation DeleteRoomGroup($input: DeleteRoomGroupInput!, $condition: ModelRoomGroupConditionInput) {\n        deleteRoomGroup(input: $input, condition: $condition) {\n          __typename\n          id\n          roomID\n          userID\n          room {\n            __typename\n            id\n            name\n            companyID\n            description\n            tasks {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          user {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.deleteRoomGroup;\n  }\n\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/guard/auth.guard.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(sessionService: SessionService, router: Router)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     canActivate\n                                \n                            \n            \n                            \n                                \n            canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { SessionService } from '../shared/service/session.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private readonly sessionService: SessionService, private router: Router) { }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    return this.sessionService.isAuthenticated().pipe(tap(loggedIn => {\n      if (!loggedIn) {\n        this.router.navigate(['/login'])\n      }\n    }))\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfirmLogic.html":{"url":"injectables/ConfirmLogic.html","title":"injectable - ConfirmLogic","body":"\n                   \n\n\n\n\n\n  Injectables\n  ConfirmLogic\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/confirm/logic/confirm.logic.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(sessionService: SessionService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     sendConfirmUser\n                                \n                            \n            \n                            \n                                \n            sendConfirmUser(username: any, code: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     resendConfirm\n                                \n                            \n            \n                            \n                                \n            resendConfirm(username: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { SessionService } from '../../../shared/service/session.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmLogic {\n\n  constructor(\n    private sessionService: SessionService,\n  ) { }\n\n  sendConfirmUser(username, code): Observable {\n    return this.sessionService.confirmSignUp(username, code);\n  }\n\n  resendConfirm(username): Observable {\n    return this.sessionService.resendConfirmNumberForSignUp(username);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HomeLogic.html":{"url":"injectables/HomeLogic.html","title":"injectable - HomeLogic","body":"\n                   \n\n\n\n\n\n  Injectables\n  HomeLogic\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/home/logic/home.logic.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(homeService: HomeService, sessionService: SessionService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     checkRegistrationUser\n                                \n                            \n            \n                            \n                                \n            checkRegistrationUser(attribute: Attribute)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchCurrentUser\n                                \n                            \n            \n                            \n                                \n            fetchCurrentUser()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createRoom\n                                \n                            \n            \n                            \n                                \n            createRoom(content: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createUser\n                                \n                            \n            \n                            \n                                \n            createUser(formContent: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateUser\n                                \n                            \n            \n                            \n                                \n            updateUser(formContent: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteRoomItem\n                                \n                            \n            \n                            \n                                \n            deleteRoomItem(roomId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createUserRoomGroup\n                                \n                            \n            \n                            \n                                \n            createUserRoomGroup(userId: any, roomId: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchRoomMembers\n                                \n                            \n            \n                            \n                                \n            fetchRoomMembers(roomId: string, currentUserId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     removeMeFromRoom\n                                \n                            \n            \n                            \n                                \n            removeMeFromRoom(roomId: string, meId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchRoomGroupsId\n                                \n                            \n            \n                            \n                                \n            fetchRoomGroupsId(roomId: string, meId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchRoomList\n                                \n                            \n            \n                            \n                                \n            fetchRoomList(currentUseId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setExitsRoomAndUser\n                                \n                            \n            \n                            \n                                \n            setExitsRoomAndUser(data: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { HomeService } from '../service/home.service';\nimport { SessionService } from '../../../shared/service/session.service';\nimport { v4 as uuid } from 'uuid';\nimport { Observable, from } from 'rxjs';\nimport { concatMap, map, filter, toArray } from 'rxjs/operators';\nimport { ModelRoomGroupFilterInput } from 'src/app/shared/service/amplify.service';\nimport { ResponseListRoomGroupsQueryItems } from '../service/reponse/response.model';\n\ninterface Attribute {\n  email: string,\n  email_verified: boolean,\n  sub: string,\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HomeLogic {\n\n  constructor(\n    private homeService: HomeService,\n    private sessionService: SessionService,\n  ) { }\n\n  checkRegistrationUser(attribute: Attribute): Observable {\n    return this.homeService.checkRegistrationUser(attribute.email);\n  }\n\n  fetchCurrentUser(): Observable {\n    return this.sessionService.fetchCurrentUser()\n      .pipe(map((res) => res.attributes));\n  }\n\n  createRoom(content): Observable {\n    const requestContent = {\n      id: `${uuid()}`,\n      companyID: 'takuCloudCom',\n      name: content.nameItem,\n      description: content.descriptionItem,\n    };\n    return this.homeService.createRoom(requestContent);\n  }\n\n  createUser(formContent): Observable {\n    const requestContent = {\n      id: formContent.get('id').value,\n      companyID: 'takuCloudCom',\n      email: formContent.get('targetEmail').value,\n      username: formContent.get('userName').value,\n      positionName: formContent.get('positionName').value,\n      tel: formContent.get('tel').value,\n      iconImage: formContent.get('iconImage').value,\n    };\n    return this.homeService.createUser(requestContent);\n  }\n\n  updateUser(formContent): Observable {\n    const requestContent = {\n      id: formContent.get('id').value,\n      companyID: 'takuCloudCom',\n      email: formContent.get('targetEmail').value,\n      username: formContent.get('userName').value,\n      positionName: formContent.get('positionName').value,\n      tel: formContent.get('tel').value,\n      iconImage: formContent.get('iconImage').value,\n    };\n    return this.homeService.updateUser(requestContent);\n  }\n\n  deleteRoomItem(roomId: string): Observable {\n    return this.homeService.deleteRoomItem(roomId);\n  }\n\n  createUserRoomGroup(userId, roomId): Observable {\n    const content = {\n      id: `user-room-group-${uuid()}`,\n      roomID: `${roomId}`,\n      userID: `${userId}`,\n    }\n    return this.homeService.createUserRoomGroup(content);\n  }\n\n  fetchRoomMembers(roomId: string, currentUserId: string): Observable {\n    const filterContent: ModelRoomGroupFilterInput = {\n      roomID: {\n        eq: `${roomId}`\n      },\n      userID: {\n        ne: `${currentUserId}`\n      }\n    }\n    return this.homeService.fetchRoomMembers(filterContent)\n      .pipe(map((result) => result.items));\n  }\n\n  removeMeFromRoom(roomId: string, meId: string): Observable {\n    return this.fetchRoomGroupsId(roomId, meId)\n      .pipe(concatMap((roomGroupId) => this.homeService.deleteRoomGroupsItem(roomGroupId)));\n  }\n\n  fetchRoomGroupsId(roomId: string, meId: string): Observable {\n    const filterContent = {\n      roomID: {\n        eq: roomId,\n      },\n      userID: {\n        eq: meId,\n      }\n    }\n    return this.homeService.fetchRoomGroupsId(filterContent)\n      .pipe(map(({ items }) => items[0].id));\n  }\n\n  fetchRoomList(currentUseId: string): Observable> {\n    const filterContent = {\n      userID: {\n        eq: currentUseId\n      }\n    }\n    return this.homeService.fetchRoomList(filterContent)\n      .pipe(map(({ items }) => items));\n  }\n\n  setExitsRoomAndUser(data): Observable {\n    return from(data)\n      .pipe(filter((item: ResponseListRoomGroupsQueryItems) => item.room !== null))\n      .pipe(filter((item: ResponseListRoomGroupsQueryItems) => item.user !== null))\n      .pipe(toArray());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HomeService.html":{"url":"injectables/HomeService.html","title":"injectable - HomeService","body":"\n                   \n\n\n\n\n\n  Injectables\n  HomeService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/home/service/home.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(amplifyService: AmplifyService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     checkRegistrationUser\n                                \n                            \n            \n                            \n                                \n            checkRegistrationUser(email: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createRoom\n                                \n                            \n            \n                            \n                                \n            createRoom(content: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createUser\n                                \n                            \n            \n                            \n                                \n            createUser(content: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateUser\n                                \n                            \n            \n                            \n                                \n            updateUser(content: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchRoomList\n                                \n                            \n            \n                            \n                                \n            fetchRoomList(filterContent: ModelRoomGroupFilterInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteRoomItem\n                                \n                            \n            \n                            \n                                \n            deleteRoomItem(roomId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createUserRoomGroup\n                                \n                            \n            \n                            \n                                \n            createUserRoomGroup(filterContent: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchRoomMembers\n                                \n                            \n            \n                            \n                                \n            fetchRoomMembers(filterContent: ModelRoomGroupFilterInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchRoomGroupsId\n                                \n                            \n            \n                            \n                                \n            fetchRoomGroupsId(filterContent: ModelRoomGroupFilterInput)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteRoomGroupsItem\n                                \n                            \n            \n                            \n                                \n            deleteRoomGroupsItem(roomGroupId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { AmplifyService, ModelRoomFilterInput, ListRoomsQuery, ModelUserFilterInput, ModelRoomGroupFilterInput, ListRoomGroupsQuery } from '../../../shared/service/amplify.service';\nimport { from, Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HomeService {\n\n  constructor(private amplifyService: AmplifyService) { }\n\n  checkRegistrationUser(email: string): Observable {\n    const filterContent: ModelUserFilterInput = {\n      email: {\n        eq: `${email}`\n      }\n    }\n    return from(this.amplifyService.ListUsers(filterContent));\n  }\n\n  createRoom(content): Observable {\n    return from(this.amplifyService.CreateRoom(content));\n  }\n\n  createUser(content): Observable {\n    return from(this.amplifyService.CreateUser(content));\n  }\n\n  updateUser(content): Observable {\n    return from(this.amplifyService.UpdateUser(content));\n  }\n\n  fetchRoomList(filterContent: ModelRoomGroupFilterInput): Observable {\n    return from(this.amplifyService.ListRoomGroups(filterContent));\n  }\n\n  deleteRoomItem(roomId: string): Observable {\n    const requestContent = {\n      id: roomId\n    }\n    return from(this.amplifyService.DeleteRoom(requestContent));\n  }\n\n  createUserRoomGroup(filterContent): Observable {\n    return from(this.amplifyService.CreateRoomGroup(filterContent));\n  }\n\n  fetchRoomMembers(filterContent: ModelRoomGroupFilterInput): Observable {\n    return from(this.amplifyService.ListRoomGroups(filterContent));\n  }\n\n  fetchRoomGroupsId(filterContent: ModelRoomGroupFilterInput): Observable {\n    return from(this.amplifyService.ListRoomGroups(filterContent));\n  }\n\n  deleteRoomGroupsItem(roomGroupId: string): Observable {\n    const requestContent = {\n      id: roomGroupId\n    }\n    console.log('Service [deleteRoomGroupsItem requestContent]', requestContent);\n    return from(this.amplifyService.DeleteRoomGroup(requestContent));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginLogic.html":{"url":"injectables/LoginLogic.html","title":"injectable - LoginLogic","body":"\n                   \n\n\n\n\n\n  Injectables\n  LoginLogic\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/login/logic/login-logic.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(sessionService: SessionService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     sendLoginInfo\n                                \n                            \n            \n                            \n                                \n            sendLoginInfo(email: any, password: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { SessionService } from '../../../shared/service/session.service';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginLogic {\n\n  constructor(\n    private sessionService: SessionService\n  ) { }\n\n  sendLoginInfo(email, password): Observable {\n    return this.sessionService.userLogin(email, password)\n      .pipe(catchError(() => {\n        throw 'Login Error';\n      }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OwnTaskLogic.html":{"url":"injectables/OwnTaskLogic.html","title":"injectable - OwnTaskLogic","body":"\n                   \n\n\n\n\n\n  Injectables\n  OwnTaskLogic\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/own-task/logic/own-task.logic.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(ownTaskService: OwnTaskService, sessionService: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     fetchCurrentUser\n                                \n                            \n            \n                            \n                                \n            fetchCurrentUser()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getTaskChargeItems\n                                \n                            \n            \n                            \n                                \n            getTaskChargeItems(userId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setTaskPerRoom\n                                \n                            \n            \n                            \n                                \n            setTaskPerRoom(arrayTask: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchRoomInfo\n                                \n                            \n            \n                            \n                                \n            fetchRoomInfo(taskItem: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     makeOwnTaskItems\n                                \n                            \n            \n                            \n                                \n            makeOwnTaskItems(taskItem: any, roomInfo: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { from, Observable, concat, of } from 'rxjs';\nimport { concatMap, map, toArray, filter, groupBy } from 'rxjs/operators';\nimport { SessionService } from 'src/app/shared/service/session.service';\nimport { OwnTaskService } from '../service/own-task.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OwnTaskLogic {\n\n  constructor(\n    private ownTaskService: OwnTaskService,\n    private sessionService: SessionService,\n  ) { }\n\n  fetchCurrentUser(): Observable {\n    return this.sessionService.fetchCurrentUser()\n      .pipe(map((res) => res.attributes));\n  }\n\n  getTaskChargeItems(userId: string): Observable {\n    return this.ownTaskService.getUserInfo(userId)\n      .pipe(map((result) => result.chargeTask));\n  }\n\n  setTaskPerRoom(arrayTask): Observable {\n    return from(arrayTask)\n      .pipe(concatMap((taskItem) => this.fetchRoomInfo(taskItem)))\n      .pipe(toArray());\n  }\n\n  fetchRoomInfo(taskItem): Observable {\n    return this.ownTaskService.fetchRoomInfoItem(taskItem)\n      .pipe(filter((result) => result !== null))\n      .pipe(concatMap((roomInfo) => this.makeOwnTaskItems(taskItem, roomInfo)))\n  }\n\n  makeOwnTaskItems(taskItem, roomInfo): Observable {\n    return of({\n      task: taskItem,\n      room: roomInfo,\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OwnTaskService.html":{"url":"injectables/OwnTaskService.html","title":"injectable - OwnTaskService","body":"\n                   \n\n\n\n\n\n  Injectables\n  OwnTaskService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/own-task/service/own-task.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(amplifyService: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getUserInfo\n                                \n                            \n            \n                            \n                                \n            getUserInfo(userId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchRoomInfoItem\n                                \n                            \n            \n                            \n                                \n            fetchRoomInfoItem(taskItem: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { from, Observable, of } from 'rxjs';\nimport { AmplifyService } from 'src/app/shared/service/amplify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OwnTaskService {\n\n  constructor(\n    private amplifyService: AmplifyService,\n  ) { }\n\n  getUserInfo(userId: string): Observable {\n    return from(this.amplifyService.GetUser(userId));\n  }\n\n  fetchRoomInfoItem(taskItem): Observable {\n    const roomId: string = taskItem.roomID;\n    return from(this.amplifyService.GetRoom(roomId));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoomMemberService.html":{"url":"injectables/RoomMemberService.html","title":"injectable - RoomMemberService","body":"\n                   \n\n\n\n\n\n  Injectables\n  RoomMemberService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/room-members/service/room-member.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(amplifyService: AmplifyService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     fetchCompanyMember\n                                \n                            \n            \n                            \n                                \n            fetchCompanyMember(content: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchRoomMember\n                                \n                            \n            \n                            \n                                \n            fetchRoomMember(filterContent: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createUserRoomGroup\n                                \n                            \n            \n                            \n                                \n            createUserRoomGroup(filterContent: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchCurrentUser\n                                \n                            \n            \n                            \n                                \n            fetchCurrentUser(currentUserId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { from, Observable } from 'rxjs';\nimport { AmplifyService, ListRoomGroupsQuery } from '../../../shared/service/amplify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoomMemberService {\n\n  constructor(\n    private amplifyService: AmplifyService,\n  ) { }\n\n  fetchCompanyMember(content): Observable {\n    return from(this.amplifyService.ListUsers(content));\n  }\n\n  fetchRoomMember(filterContent?): Observable {\n    return from(this.amplifyService.ListRoomGroups(filterContent));\n  }\n\n  createUserRoomGroup(filterContent): Observable {\n    return from(this.amplifyService.CreateRoomGroup(filterContent));\n  }\n\n  fetchCurrentUser(currentUserId: string): Observable {\n    return from(this.amplifyService.GetUser(currentUserId))\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoomMembersLogic.html":{"url":"injectables/RoomMembersLogic.html","title":"injectable - RoomMembersLogic","body":"\n                   \n\n\n\n\n\n  Injectables\n  RoomMembersLogic\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/room-members/logic/room-members.logic.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(roomMemberService: RoomMemberService, sessionService: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     fetchCompanyMember\n                                \n                            \n            \n                            \n                                \n            fetchCompanyMember(companyId: string | number, queryFilterUser: InterfaceRoomMembers[])\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchRoomMemberGroup\n                                \n                            \n            \n                            \n                                \n            fetchRoomMemberGroup(roomId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchRoomMembers\n                                \n                            \n            \n                            \n                                \n            fetchRoomMembers(roomId: string, queryFilterUserName: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchNonAssignRoomMemberGroup\n                                \n                            \n            \n                            \n                                \n            fetchNonAssignRoomMemberGroup(roomId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setRoomMembers\n                                \n                            \n            \n                            \n                                \n            setRoomMembers(items: ListRoomMembersInfo[], currentUserId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchCurrentUserId\n                                \n                            \n            \n                            \n                                \n            fetchCurrentUserId()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchCurrentUser\n                                \n                            \n            \n                            \n                                \n            fetchCurrentUser(currentUserId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { from, Observable, of } from 'rxjs';\nimport { RoomMemberService } from '../service/room-member.service';\nimport { InterfaceRoomMembers } from '../interface/room-members.interface';\nimport { filter, map, toArray } from 'rxjs/operators';\nimport { ListRoomMembersInfo, ListUserInfo } from '../models/room-members.model';\nimport { SessionService } from 'src/app/shared/service/session.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoomMembersLogic {\n\n  constructor(\n    private roomMemberService: RoomMemberService,\n    private sessionService: SessionService,\n  ) { }\n\n  fetchCompanyMember(companyId: number | string, queryFilterUser?: Array): Observable {\n    const contentObject = {\n      companyID: {\n        eq: `${companyId}`\n      },\n    }\n    if (queryFilterUser === undefined) {\n      return this.roomMemberService.fetchCompanyMember(contentObject);\n    } else {\n      return of({});\n    }\n  };\n\n  fetchRoomMemberGroup(roomId: string): Observable> {\n    const filterContent = {\n      roomID: {\n        eq: `${roomId}`\n      }\n    }\n    return this.roomMemberService.fetchRoomMember(filterContent)\n      .pipe(map((result) => result.items));\n  }\n\n  fetchRoomMembers(roomId: string, queryFilterUserName?: string): Observable {\n    const filterContent = {\n      roomID: {\n        eq: `${roomId}`\n      },\n    }\n    return this.roomMemberService.fetchRoomMember(filterContent)\n  }\n\n  fetchNonAssignRoomMemberGroup(roomId?: string): Observable {\n    return this.roomMemberService.fetchRoomMember()\n      .pipe(map(({ items }) => items));\n  }\n\n  setRoomMembers(items: Array, currentUserId: string): Observable> {\n    return from(items)\n      .pipe(filter((item) => item.userID !== currentUserId))\n      .pipe(map((result) => result.user))\n      .pipe(toArray());\n  }\n\n  fetchCurrentUserId(): Observable {\n    return this.sessionService.fetchCurrentUser()\n      .pipe(map((res) => res.attributes.sub))\n  }\n\n  fetchCurrentUser(currentUserId: string): Observable {\n    return this.roomMemberService.fetchCurrentUser(currentUserId)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionService.html":{"url":"injectables/SessionService.html","title":"injectable - SessionService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SessionService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/service/session.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(router: Router)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     entryUserSignup\n                                \n                            \n            \n                            \n                                \n            entryUserSignup(valueObj: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isAuthenticated\n                                \n                            \n            \n                            \n                                \n            isAuthenticated()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     confirmSignUp\n                                \n                            \n            \n                            \n                                \n            confirmSignUp(username: any, code: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     resendConfirmNumberForSignUp\n                                \n                            \n            \n                            \n                                \n            resendConfirmNumberForSignUp(username: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     userLogin\n                                \n                            \n            \n                            \n                                \n            userLogin(email: any, password: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchCurrentUser\n                                \n                            \n            \n                            \n                                \n            fetchCurrentUser()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     signOut\n                                \n                            \n            \n                            \n                                \n            signOut()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     loggedIn\n                                \n                            \n                            \n                                \n                                    loggedIn:     BehaviorSubject\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Auth } from \"aws-amplify\";\nimport { Observable, from, BehaviorSubject, of } from \"rxjs\";\nimport { map, tap, catchError } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SessionService {\n  loggedIn: BehaviorSubject;\n\n  constructor(private readonly router: Router) {\n    this.loggedIn = new BehaviorSubject(false);\n  }\n\n  entryUserSignup(valueObj): Observable {\n    return from(Auth.signUp(valueObj));\n  }\n\n  isAuthenticated(): Observable {\n    return from(Auth.currentAuthenticatedUser()).pipe(\n      map(() => {\n        this.loggedIn.next(true);\n        return true;\n      }),\n      catchError(() => {\n        this.loggedIn.next(false);\n        return of(false);\n      })\n    );\n  }\n\n  confirmSignUp(username, code): Observable {\n    return from(Auth.confirmSignUp(username, code));\n  }\n\n  resendConfirmNumberForSignUp(username): Observable {\n    return from(Auth.resendSignUp(username));\n  }\n\n  userLogin(email, password): Observable {\n    return from(Auth.signIn(email, password))\n      .pipe(tap(() => this.loggedIn.next(true)));\n  }\n\n  fetchCurrentUser(): Observable {\n    return from(Auth.currentAuthenticatedUser());\n  }\n\n  signOut() {\n    return from(Auth.signOut())\n      .pipe(tap(() => this.loggedIn.next(false)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingLogic.html":{"url":"injectables/SettingLogic.html","title":"injectable - SettingLogic","body":"\n                   \n\n\n\n\n\n  Injectables\n  SettingLogic\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/setting/logic/setting.logic.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(sessionService: SessionService, settingService: SettingService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     signOut\n                                \n                            \n            \n                            \n                                \n            signOut()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchCurrentUser\n                                \n                            \n            \n                            \n                                \n            fetchCurrentUser()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchUserInfo\n                                \n                            \n            \n                            \n                                \n            fetchUserInfo(userId: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { SessionService } from '../../../shared/service/session.service';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { SettingService } from '../service/setting.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingLogic {\n\n  constructor(\n    private sessionService: SessionService,\n    private settingService: SettingService,\n  ) { }\n\n  signOut(): Observable {\n    return this.sessionService.signOut()\n      .pipe(catchError((error) => { return error }))\n  }\n\n  fetchCurrentUser(): Observable {\n    return this.sessionService.fetchCurrentUser();\n  }\n\n  fetchUserInfo(userId): Observable {\n    return this.settingService.fetchUserInfo(userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingService.html":{"url":"injectables/SettingService.html","title":"injectable - SettingService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SettingService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/setting/service/setting.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(amplifyService: AmplifyService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     fetchUserInfo\n                                \n                            \n            \n                            \n                                \n            fetchUserInfo(userId: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { AmplifyService } from '../../../shared/service/amplify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingService {\n\n  constructor(\n    private amplifyService: AmplifyService,\n  ) { }\n\n  fetchUserInfo(userId): Observable {\n    return from(this.amplifyService.GetUser(userId));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SharedLogicService.html":{"url":"injectables/SharedLogicService.html","title":"injectable - SharedLogicService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SharedLogicService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/logic/shared-logic.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(modalCtrl: ModalController)\n                                \n                            \n            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     modalCtrl\n                                \n                            \n                            \n                                \n                                    modalCtrl:     ModalController\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedLogicService {\n\n  constructor(public modalCtrl: ModalController) { }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignupLogicService.html":{"url":"injectables/SignupLogicService.html","title":"injectable - SignupLogicService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SignupLogicService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/signup/logic/signup-logic.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(sessionService: SessionService, amplifyService: AmplifyService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     entrySignupUser\n                                \n                            \n            \n                            \n                                \n            entrySignupUser(value: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createUser\n                                \n                            \n            \n                            \n                                \n            createUser(value: any, formValue: any, companyId: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { SessionService } from '../../../shared/service/session.service';\nimport { AmplifyService } from '../../../shared/service/amplify.service';\nimport { v4 as uuid } from 'uuid';\nimport { Observable, from } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignupLogicService {\n\n  constructor(\n    private sessionService: SessionService,\n    private amplifyService: AmplifyService,\n  ) { }\n\n  entrySignupUser(value): Observable {\n    const signupContent = {\n      username: value.email,\n      password: value.passwordform,\n      attributes: {\n        email: value.email,\n      }\n    }\n    return this.sessionService.entryUserSignup(signupContent);\n  }\n\n  /*\n  value = {\n    Session: null\n    authenticationFlowType: \"USER_SRP_AUTH\"\n    client: Client {endpoint: \"https://cognito-idp.ap-northeast-1.amazonaws.com/\", fetchOptions: {…}}\n    userDataKey: \"CognitoIdentityServiceProvider.47bkbu7qf1aue8v7i0elq754tr.r.taaaaabo+dev03@gmail.com.userData\"\n    username: \"r.taaaaabo+dev03@gmail.com\"\n  }\n  */\n  createUser(value, formValue, companyId): Observable {\n    const isoNowDate = new Date().toISOString();\n    const createUser = {\n      id: `${isoNowDate}_${uuid()}`, // いつ作成されたUserであるのか判断できるようにした\n      email: formValue.email,\n      companyID: companyId,\n      username: formValue.username,\n      registered: false,\n      authority: 'member',\n    }\n    return from(this.amplifyService.CreateUser(createUser));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskDetailLogic.html":{"url":"injectables/TaskDetailLogic.html","title":"injectable - TaskDetailLogic","body":"\n                   \n\n\n\n\n\n  Injectables\n  TaskDetailLogic\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/task-detail/logic/task-detail.logic.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(taskDetailService: TaskDetailService, sessionService: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     fetchAnyTask\n                                \n                            \n            \n                            \n                                \n            fetchAnyTask(taskId: string)\n                                \n                            \n            \n                            \n                                \n                                        任意のタスクの詳細情報を取得します\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                taskId\n                                                            \n                                                            \n                                                                TaskIDです\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                            \n                                                Observable型で Taskの詳細情報を返します\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchMessagePerTask\n                                \n                            \n            \n                            \n                                \n            fetchMessagePerTask(taskId: string)\n                                \n                            \n            \n                            \n                                \n                                        タスクあたりのMessageを返します\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                taskId\n                                                            \n                                                            \n                                                                TaskIDです\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                            \n                                                Observable型で タスクあたりのMessageを返します\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateTaskItem\n                                \n                            \n            \n                            \n                                \n            updateTaskItem(taskItem: any, status: any)\n                                \n                            \n            \n                            \n                                \n                                        任意のタスクの情報をアップデートします\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                taskItem\n                                                            \n                                                            \n                                                                TaskItemのObject\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                status\n                                                            \n                                                            \n                                                                TaskItemのObject\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                            \n                                                Observable型で updateTaskItemを返します\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     sendNewMessage\n                                \n                            \n            \n                            \n                                \n            sendNewMessage(taskId: string, messageContent: string, userId: string, arrayAttachmentUri: string[])\n                                \n                            \n            \n                            \n                                \n                                        Message（コメントを新規で作成します）\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                taskId\n                                                            \n                                                            \n                                                                TaskID\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                messageContent\n                                                            \n                                                            \n                                                                messageContent\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                userId\n                                                            \n                                                            \n                                                                userId\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                arrayAttachmentUri\n                                                            \n                                                            \n                                                                arrayAttachmentUri\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                            \n                                                Observable型でcreateMessageItemを返します\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     onCreateMessageListener\n                                \n                            \n            \n                            \n                                \n            onCreateMessageListener()\n                                \n                            \n            \n                            \n                                \n                                        新規で作られたMessageをSubscribeします\n            \n                                        \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                Observable型でonMessageListenerを返します\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchCurrentUserInfo\n                                \n                            \n            \n                            \n                                \n            fetchCurrentUserInfo()\n                                \n                            \n            \n                            \n                                \n                                        ログイン済みのユーザーIDを取得します\n            \n                                        \n                                        \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                            \n                                                Observable型でCurrentUserInfoを返します\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateTaskToRoom\n                                \n                            \n            \n                            \n                                \n            updateTaskToRoom(dismissData: any, taskId: any)\n                                \n                            \n            \n                            \n                                \n                                        任意のRoomにTaskを追加します\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                dismissData\n                                                            \n                                                            \n                                                                dismissData\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                taskId\n                                                            \n                                                            \n                                                                taskId\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                            \n                                                Observable型でupdateTaskItemを返します\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchMemberListOnRoom\n                                \n                            \n            \n                            \n                                \n            fetchMemberListOnRoom(roomId: string | number)\n                                \n                            \n            \n                            \n                                \n                                        Roomのメンバーを取得します\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                roomId\n                                                            \n                                                            \n                                                                roomId\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                            \n                                                Observable型でfetchRoomMemberを返します\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     uploadFile\n                                \n                            \n            \n                            \n                                \n            uploadFile(arrayBase64Data: any[], taskId: string)\n                                \n                            \n            \n                            \n                                \n                                        S3にアップロードするロジックです。\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                fileName\n                                                            \n                                                            \n                                                                ファイルのディレクトリ名と名前を繋げています。\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                arrayBase64Data\n                                                            \n                                                            \n                                                                配列型のBase64Dataを渡します。\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                            \n                                                Observable型でS3から返ってきた値を返します。\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     makeExt\n                                \n                            \n            \n                            \n                                \n            makeExt(contentType: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     putStorage\n                                \n                            \n            \n                            \n                                \n            putStorage(fileName: string, blobFile: Blob, contentType: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getStorage\n                                \n                            \n            \n                            \n                                \n            getStorage(fileName: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getDirString\n                                \n                            \n            \n                            \n                                \n            getDirString(dt: Date)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fileWrite\n                                \n                            \n            \n                            \n                                \n            fileWrite(fileName: string, fileData: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fileRead\n                                \n                            \n            \n                            \n                                \n            fileRead(fileName: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fileDelete\n                                \n                            \n            \n                            \n                                \n            fileDelete(fileName: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getContentType\n                                \n                            \n            \n                            \n                                \n            getContentType(base64Data: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     base64toBlob\n                                \n                            \n            \n                            \n                                \n            base64toBlob(base64data: any, contentType: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { Observable, from, of } from 'rxjs';\nimport { concatMap, map } from 'rxjs/operators';\nimport { Storage } from 'aws-amplify';\nimport { v4 as uuid } from 'uuid';\nimport { SessionService } from 'src/app/shared/service/session.service';\nimport { CurrentUserInfo } from '../../task/interface/current-user-info.interface';\nimport { TaskDetailService } from '../service/task-detail.service';\nimport { Filesystem, FilesystemDirectory, FilesystemEncoding, FileWriteResult, FileReadResult, FileDeleteResult } from \"@capacitor/core\";\n\nconst OneWeekSecond = 604800;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskDetailLogic {\n\n  constructor(\n    private taskDetailService: TaskDetailService,\n    private sessionService: SessionService,\n  ) { }\n\n  /**\n   * 任意のタスクの詳細情報を取得します\n   * @param taskId TaskIDです\n   * @returns Observable型で Taskの詳細情報を返します\n   */\n  fetchAnyTask(taskId: string): Observable {\n    return from(this.taskDetailService.getTask(taskId));\n  }\n\n  /**\n   * タスクあたりのMessageを返します\n   * @param taskId TaskIDです\n   * @returns Observable型で タスクあたりのMessageを返します\n   */\n  fetchMessagePerTask(taskId: string): Observable {\n    const filterContent = {\n      taskID: {\n        eq: `${taskId}`\n      }\n    }\n    return this.taskDetailService.fetchMessagePerTask(filterContent);\n  }\n\n  /**\n   * 任意のタスクの情報をアップデートします\n   * @param taskItem TaskItemのObject\n   * @param status TaskItemのObject\n   * @returns Observable型で updateTaskItemを返します\n   */\n  updateTaskItem(taskItem, status): Observable {\n    const content = {\n      id: taskItem.id,\n      status: status,\n    }\n    return this.taskDetailService.updateTaskItem(content);\n  }\n\n  /**\n   * Message（コメントを新規で作成します）\n   * @param taskId TaskID\n   * @param messageContent messageContent\n   * @param userId userId\n   * @param arrayAttachmentUri arrayAttachmentUri\n   * @returns Observable型でcreateMessageItemを返します\n   */\n  sendNewMessage(taskId: string, messageContent: string, userId: string, arrayAttachmentUri?: Array): Observable {\n    const inputContent = {\n      id: `${uuid()}`,\n      authorID: `${userId}`,\n      content: messageContent,\n      taskID: taskId,\n      isSent: true,\n      attachmentUri: arrayAttachmentUri,\n    }\n    return this.taskDetailService.createMessageItem(inputContent);\n  }\n\n  /**\n   * 新規で作られたMessageをSubscribeします\n   * @returns Observable型でonMessageListenerを返します\n   */\n  onCreateMessageListener() {\n    return this.taskDetailService.onMessageListener();\n  }\n\n  /**\n   * ログイン済みのユーザーIDを取得します\n   * @returns Observable型でCurrentUserInfoを返します\n   */\n  fetchCurrentUserInfo(): Observable {\n    return this.sessionService.fetchCurrentUser()\n      .pipe(map((res) => res.attributes));\n  }\n\n  /**\n   * 任意のRoomにTaskを追加します\n   * @param dismissData dismissData\n   * @param taskId taskId\n   * @returns Observable型でupdateTaskItemを返します\n   */\n  updateTaskToRoom(dismissData, taskId): Observable {\n    const content = {\n      id: `${taskId}`,\n      title: `${dismissData.nameItem}`,\n      description: `${dismissData.descriptionItem}`,\n      scheduleDate: `${dismissData.scheduleDateItem}`,\n    }\n    return this.taskDetailService.updateTaskItem(content);\n  }\n\n  /**\n   * Roomのメンバーを取得します\n   * @param roomId roomId\n   * @returns Observable型でfetchRoomMemberを返します\n   */\n  fetchMemberListOnRoom(roomId: string | number): Observable {\n    const filterContent = {\n      roomID: {\n        eq: `${roomId}`\n      }\n    }\n    return this.taskDetailService.fetchRoomMember(filterContent);\n  }\n\n  /**\n   * S3にアップロードするロジックです。\n   * @param fileName ファイルのディレクトリ名と名前を繋げています。\n   * @param arrayBase64Data 配列型のBase64Dataを渡します。\n   * @returns Observable型でS3から返ってきた値を返します。\n   */\n  uploadFile(arrayBase64Data: Array, taskId: string): Observable {\n    let fileName: string;\n    let base64Data: any;\n    let ext: string;\n    let contentType: string;\n    let uploadFileName: string;\n    const dt = new Date();\n    const dirName = this.getDirString(dt);\n    return from(arrayBase64Data)\n      .pipe(map((base64Result) => base64Data = base64Result))\n      .pipe(concatMap((base64Data) => this.getContentType(base64Data)))\n      .pipe(map((result) => contentType = result))\n      .pipe(concatMap((contentType) => this.makeExt(contentType)))\n      .pipe(map((result) => ext = result))\n      .pipe(map(() => fileName = `attachment_${uuid()}_${taskId}`))\n      .pipe(map(() => uploadFileName = `${dirName}/${fileName}.${ext}`))\n      .pipe(concatMap(() => this.base64toBlob(base64Data, contentType)))\n      .pipe(concatMap((blobFile) => this.putStorage(uploadFileName, blobFile, contentType)))\n  }\n\n  makeExt(contentType: string): Observable {\n    return of(contentType.match(/([^/]+?)?$/)[0]);\n  }\n\n  putStorage(fileName: string, blobFile: Blob, contentType: string): Observable {\n    return from(Storage.put(fileName, blobFile, {\n      contentType: contentType\n    }));\n  }\n\n  getStorage(fileName: string): Observable {\n    return from(Storage.get(fileName, {\n      expires: OneWeekSecond,\n    }))\n  }\n\n  getDirString(dt: Date): string {\n    const random = dt.getTime() + Math.floor(100000 * Math.random());\n    const randomMath = Math.random() * random;\n    const randomFloor = randomMath.toString(16);\n    return \"\" +\n      (\"00\" + dt.getUTCFullYear()).slice(-2) +\n      (\"00\" + (dt.getMonth() + 1)).slice(-2) +\n      (\"00\" + dt.getUTCDate()).slice(-2) +\n      (\"00\" + dt.getUTCHours()).slice(-2) +\n      (\"00\" + dt.getMinutes()).slice(-2) +\n      (\"00\" + dt.getUTCSeconds()).slice(-2) +\n      \"-\" + randomFloor;\n  }\n\n  fileWrite(fileName: string, fileData: string): Observable {\n    return from(Filesystem.writeFile({\n      path: fileName,\n      data: fileData,\n      directory: FilesystemDirectory.Documents,\n      encoding: FilesystemEncoding.UTF8,\n    }));\n  }\n\n  fileRead(fileName: string): Observable {\n    return from(Filesystem.readFile({\n      path: fileName,\n      directory: FilesystemDirectory.Documents,\n      encoding: FilesystemEncoding.UTF8\n    }));\n  }\n\n  fileDelete(fileName: string): Observable {\n    return from(Filesystem.deleteFile({\n      path: fileName,\n      directory: FilesystemDirectory.Documents\n    }));\n  }\n\n  getContentType(base64Data: any): Observable {\n    const block = base64Data.split(\";\");\n    const contentType: string = block[0].split(\":\")[1];\n    return of(contentType);\n  }\n\n  base64toBlob(base64data: any, contentType: string): Observable {\n    const byteCharacters = atob(base64data.replace(/^.*,/, ''));\n    let buffer = new Uint8Array(byteCharacters.length);\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskDetailService.html":{"url":"injectables/TaskDetailService.html","title":"injectable - TaskDetailService","body":"\n                   \n\n\n\n\n\n  Injectables\n  TaskDetailService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/task-detail/service/task-detail.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(amplifyService: AmplifyService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getTask\n                                \n                            \n            \n                            \n                                \n            getTask(taskId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchMessagePerTask\n                                \n                            \n            \n                            \n                                \n            fetchMessagePerTask(filterInfo: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateTaskItem\n                                \n                            \n            \n                            \n                                \n            updateTaskItem(inputContent: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createMessageItem\n                                \n                            \n            \n                            \n                                \n            createMessageItem(inputContent: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     onMessageListener\n                                \n                            \n            \n                            \n                                \n            onMessageListener()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchRoomMember\n                                \n                            \n            \n                            \n                                \n            fetchRoomMember(content: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { AmplifyService, GetTaskQuery, OnCreateMessageSubscription } from '../../../shared/service/amplify.service';\nimport { Observable, from } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskDetailService {\n\n  constructor(\n    private amplifyService: AmplifyService,\n  ) { }\n\n  getTask(taskId: string): Observable {\n    return from(this.amplifyService.GetTask(taskId))\n  }\n\n  fetchMessagePerTask(filterInfo): Observable {\n    return from(this.amplifyService.ListMessages(filterInfo));\n  }\n\n  updateTaskItem(inputContent): Observable {\n    return from(this.amplifyService.UpdateTask(inputContent));\n  }\n\n  createMessageItem(inputContent): Observable {\n    return from(this.amplifyService.CreateMessage(inputContent));\n  }\n\n  onMessageListener() {\n    return this.amplifyService.OnCreateMessageListener;\n  }\n\n  fetchRoomMember(content): Observable {\n    return from(this.amplifyService.ListRoomGroups(content));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskLogic.html":{"url":"injectables/TaskLogic.html","title":"injectable - TaskLogic","body":"\n                   \n\n\n\n\n\n  Injectables\n  TaskLogic\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/task/logic/task.logic.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(taskService: TaskService, sessionService: SessionService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     fetchRoomInfo\n                                \n                            \n            \n                            \n                                \n            fetchRoomInfo(roomId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchCurrentUserInfo\n                                \n                            \n            \n                            \n                                \n            fetchCurrentUserInfo()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createTaskToRoom\n                                \n                            \n            \n                            \n                                \n            createTaskToRoom(taskFormData: any, roomId: any, userId: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createRoomGroup\n                                \n                            \n            \n                            \n                                \n            createRoomGroup(userId: any, roomId: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchActiveTaskPerRoom\n                                \n                            \n            \n                            \n                                \n            fetchActiveTaskPerRoom(roomId: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchDoneTaskPerRoom\n                                \n                            \n            \n                            \n                                \n            fetchDoneTaskPerRoom(roomId: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateDoneTaskItem\n                                \n                            \n            \n                            \n                                \n            updateDoneTaskItem(taskFormItem: any, status: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateStatusTaskItems\n                                \n                            \n            \n                            \n                                \n            updateStatusTaskItems(taskItems: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getIndexNewArray\n                                \n                            \n            \n                            \n                                \n            getIndexNewArray(taskActiveItems: any[], taskActiveItem: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateTaskItemPriority\n                                \n                            \n            \n                            \n                                \n            updateTaskItemPriority(indexArray: number, taskActiveItems: any[])\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteTaskItem\n                                \n                            \n            \n                            \n                                \n            deleteTaskItem(taskId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchUserInfoFromAmplify\n                                \n                            \n            \n                            \n                                \n            fetchUserInfoFromAmplify(userId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchCompanyMember\n                                \n                            \n            \n                            \n                                \n            fetchCompanyMember(companyId: string, queryFilterUser: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchMemberListOnRoom\n                                \n                            \n            \n                            \n                                \n            fetchMemberListOnRoom(roomId: string | number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     compareTaskArray\n                                \n                            \n            \n                            \n                                \n            compareTaskArray(a: any, b: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     number\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createUserRoomGroup\n                                \n                            \n            \n                            \n                                \n            createUserRoomGroup(userId: string, roomId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     addMembersToAnyRoom\n                                \n                            \n            \n                            \n                                \n            addMembersToAnyRoom(arrayUserId: string[], roomId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from \"@angular/core\";\nimport { from, Observable, of } from \"rxjs\";\nimport {\n  map,\n  filter,\n  toArray,\n  concatMap,\n  findIndex,\n} from \"rxjs/operators\";\nimport { Storage } from 'aws-amplify';\nimport {\n  CreateRoomGroupMutation,\n  CreateTaskMutation,\n  DeleteTaskMutation,\n  GetRoomQuery,\n  GetUserQuery,\n  ListRoomGroupsQuery,\n  ListUsersQuery,\n  UpdateTaskMutation,\n} from \"src/app/shared/service/amplify.service\";\nimport { SessionService } from \"../../../shared/service/session.service\";\nimport { v4 as uuid } from \"uuid\";\nimport { TaskService } from \"../service/task.service\";\nimport { CurrentUserInfo } from \"../interface/current-user-info.interface\";\nimport { InterfaceTask } from \"src/app/interfaces/task.interface\";\n\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TaskLogic {\n  constructor(\n    private taskService: TaskService,\n    private sessionService: SessionService\n  ) { }\n\n  fetchRoomInfo(roomId: string): Observable {\n    return this.taskService.fetchRoomInfo(roomId);\n  }\n\n  fetchCurrentUserInfo(): Observable {\n    return this.sessionService\n      .fetchCurrentUser()\n      .pipe(map((res) => res.attributes));\n  }\n\n  createTaskToRoom(\n    taskFormData,\n    roomId,\n    userId\n  ): Observable {\n    const isoStringDate = new Date().toISOString();\n    if (taskFormData === undefined) {\n      return of();\n    } else {\n      const content = {\n        id: `${uuid()}`,\n        authorID: `${userId}`,\n        roomID: `${roomId}`,\n        chargePersonID: `${taskFormData.chargePersonId}`,\n        title: `${taskFormData.nameItem}`,\n        description: `${taskFormData.descriptionItem}`,\n        scheduleDate: `${taskFormData.scheduleDateItem}`,\n        createdAt: `${isoStringDate}`,\n        status: 0,\n        priority: 0,\n      };\n      return this.taskService.createTaskItem(content);\n    }\n  }\n\n  createRoomGroup(userId, roomId): Observable {\n    const content = {\n      id: `room-group${uuid()}`,\n      roomID: `${roomId}`,\n      userID: `${userId}`,\n    };\n    return this.taskService.createRoomGroup(content);\n  }\n\n  fetchActiveTaskPerRoom(roomId): Observable> {\n    const filterContent = {\n      roomID: {\n        eq: `${roomId}`,\n      },\n    };\n    return this.taskService\n      .fetchTaskItemsPerRoom(filterContent)\n      .pipe(concatMap((res) => res.items))\n      .pipe(filter((data) => data.status > {\n    const filterContent = {\n      roomID: {\n        eq: `${roomId}`,\n      },\n    };\n    return this.taskService\n      .fetchTaskItemsPerRoom(filterContent)\n      .pipe(concatMap((res) => res.items))\n      .pipe(filter((data) => data.status === 10))\n      .pipe(toArray());\n  }\n\n  updateDoneTaskItem(taskFormItem, status): Observable {\n    const content = {\n      id: taskFormItem.id,\n      status: status,\n    };\n    return this.taskService.updateTaskItem(content);\n  }\n\n  updateStatusTaskItems(taskItems): Observable> {\n    return from(taskItems)\n      .pipe(\n        concatMap((result: InterfaceTask) =>\n          this.taskService.updateTaskStatusItem(result)\n        )\n      )\n      .pipe(toArray());\n  }\n\n  getIndexNewArray(taskActiveItems: Array, taskActiveItem): Observable {\n    return from(taskActiveItems)\n      .pipe(findIndex(taskItem => taskItem.id === taskActiveItem.id))\n  }\n\n  updateTaskItemPriority(indexArray: number, taskActiveItems: Array): Observable {\n    const targetTaskItem = taskActiveItems[indexArray];\n    const content = {\n      id: targetTaskItem.id,\n      priority: indexArray\n    };\n    return this.taskService.updateTaskStatusForReorder(content);\n  }\n\n  deleteTaskItem(taskId: string): Observable {\n    const content = {\n      id: `${taskId}`,\n    };\n    return this.taskService.deleteTaskItem(content);\n  }\n\n  fetchUserInfoFromAmplify(userId: string): Observable {\n    return this.taskService.fetchUserInfo(userId);\n  }\n\n  fetchCompanyMember(\n    companyId: string,\n    queryFilterUser?: string\n  ): Observable {\n    const filterContent = queryFilterUser !== undefined ?\n      {\n        companyID: {\n          eq: `${companyId}`,\n        },\n        username: {\n          contains: queryFilterUser,\n        },\n      } :\n      {\n        companyID: {\n          eq: `${companyId}`,\n        },\n      }\n    return this.taskService.fetchCompanyMember(filterContent);\n  }\n\n  fetchMemberListOnRoom(\n    roomId: string | number\n  ): Observable {\n    const filterContent = {\n      roomID: {\n        eq: `${roomId}`,\n      },\n    };\n    return this.taskService.fetchRoomMember(filterContent);\n  }\n\n  compareTaskArray(a: InterfaceTask, b: InterfaceTask): number {\n    const priorityA = a.priority;\n    const priorityB = b.priority;\n    return priorityA - priorityB;\n  }\n\n  createUserRoomGroup(userId: string, roomId: string): Observable {\n    const content = {\n      id: `user-room-group-${uuid()}`,\n      roomID: `${roomId}`,\n      userID: `${userId}`,\n    }\n    return this.taskService.createUserRoomGroup(content);\n  }\n\n  addMembersToAnyRoom(arrayUserId: Array, roomId: string): Observable {\n    return from(arrayUserId).pipe(concatMap((userId) => this.createUserRoomGroup(userId, roomId)))\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/task/service/task.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(amplifyService: AmplifyService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     fetchRoomInfo\n                                \n                            \n            \n                            \n                                \n            fetchRoomInfo(roomId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createTaskItem\n                                \n                            \n            \n                            \n                                \n            createTaskItem(content: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createRoomGroup\n                                \n                            \n            \n                            \n                                \n            createRoomGroup(content: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateTaskItem\n                                \n                            \n            \n                            \n                                \n            updateTaskItem(content: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateTaskStatusItem\n                                \n                            \n            \n                            \n                                \n            updateTaskStatusItem(taskItem: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateTaskStatusForReorder\n                                \n                            \n            \n                            \n                                \n            updateTaskStatusForReorder(targetItem: { id: string; priority: number; })\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchTaskItemsPerRoom\n                                \n                            \n            \n                            \n                                \n            fetchTaskItemsPerRoom(content: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteTaskItem\n                                \n                            \n            \n                            \n                                \n            deleteTaskItem(content: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchUserInfo\n                                \n                            \n            \n                            \n                                \n            fetchUserInfo(userId: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchCompanyMember\n                                \n                            \n            \n                            \n                                \n            fetchCompanyMember(content: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fetchRoomMember\n                                \n                            \n            \n                            \n                                \n            fetchRoomMember(content: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createUserRoomGroup\n                                \n                            \n            \n                            \n                                \n            createUserRoomGroup(filterContent: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     Observable\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from \"@angular/core\";\nimport {\n  AmplifyService,\n  CreateRoomGroupMutation,\n  CreateTaskMutation,\n  DeleteTaskMutation,\n  GetRoomQuery,\n  GetUserQuery,\n  ListRoomGroupsQuery,\n  ListTasksQuery,\n  ListUsersQuery,\n  UpdateTaskMutation,\n} from \"../../../shared/service/amplify.service\";\nimport { Observable, from } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TaskService {\n  constructor(private amplifyService: AmplifyService) { }\n\n  fetchRoomInfo(roomId: string): Observable {\n    return from(this.amplifyService.GetRoom(roomId));\n  }\n\n  createTaskItem(content): Observable {\n    return from(this.amplifyService.CreateTask(content));\n  }\n\n  createRoomGroup(content): Observable {\n    return from(this.amplifyService.CreateRoomGroup(content));\n  }\n\n  updateTaskItem(content): Observable {\n    return from(this.amplifyService.UpdateTask(content));\n  }\n\n  updateTaskStatusItem(taskItem): Observable {\n    const content = {\n      id: taskItem.id,\n      priority: taskItem.priority + 1,\n    };\n    return from(this.amplifyService.UpdateTask(content));\n  }\n\n  updateTaskStatusForReorder(\n    targetItem: { id: string, priority: number }\n  ): Observable {\n    const content = {\n      id: targetItem.id,\n      priority: targetItem.priority,\n    };\n    return from(this.amplifyService.UpdateTask(content));\n  }\n\n  fetchTaskItemsPerRoom(content): Observable {\n    return from(this.amplifyService.ListTasks(content));\n  }\n\n  deleteTaskItem(content): Observable {\n    return from(this.amplifyService.DeleteTask(content));\n  }\n\n  fetchUserInfo(userId: string): Observable {\n    return from(this.amplifyService.GetUser(userId));\n  }\n\n  fetchCompanyMember(content): Observable {\n    return from(this.amplifyService.ListUsers(content));\n  }\n\n  fetchRoomMember(content): Observable {\n    return from(this.amplifyService.ListRoomGroups(content));\n  }\n\n  createUserRoomGroup(filterContent): Observable {\n    return from(this.amplifyService.CreateRoomGroup(filterContent));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\nRoutes\n\n    \n        \n            path\n            pathMatch\n            component\n            redirectTo\n        \n\n        \n            \n                    \" \"\n            \n            \n            CommentPage\n            \n        \n        \n            \n                    \" \"\n            \n            \n            ConfirmPage\n            \n        \n        \n            \n                    \" \"\n            \n            \n            HomePage\n            \n        \n        \n            \n                    \" \"\n            \n            \n            LoginPage\n            \n        \n        \n            \n                    \" \"\n            \n            \n            OwnTaskPage\n            \n        \n        \n            \n                    :roomId/:companyId\n            \n            \n            RoomMembersPage\n            \n        \n        \n            \n                    \" \"\n            \n            \n            SettingPage\n            \n        \n        \n            \n                    \" \"\n            \n            \n            SignupPage\n            \n        \n        \n            \n                    :id\n            \n            \n            TaskPage\n            \n        \n        \n            \n                    :id/:segment\n            \n            \n            TaskDetailPage\n            \n        \n        \n            \n                    \" \"\n            \n            full\n            \n            :id\n        \n\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Attribute.html":{"url":"interfaces/Attribute.html","title":"interface - Attribute","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Attribute\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/home/logic/home.logic.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        email_verified\n                                    \n                                \n                                \n                                    \n                                        email_verified:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\nimport { HomeService } from '../service/home.service';\nimport { SessionService } from '../../../shared/service/session.service';\nimport { v4 as uuid } from 'uuid';\nimport { Observable, from } from 'rxjs';\nimport { concatMap, map, filter, toArray } from 'rxjs/operators';\nimport { ModelRoomGroupFilterInput } from 'src/app/shared/service/amplify.service';\nimport { ResponseListRoomGroupsQueryItems } from '../service/reponse/response.model';\n\ninterface Attribute {\n  email: string,\n  email_verified: boolean,\n  sub: string,\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HomeLogic {\n\n  constructor(\n    private homeService: HomeService,\n    private sessionService: SessionService,\n  ) { }\n\n  checkRegistrationUser(attribute: Attribute): Observable {\n    return this.homeService.checkRegistrationUser(attribute.email);\n  }\n\n  fetchCurrentUser(): Observable {\n    return this.sessionService.fetchCurrentUser()\n      .pipe(map((res) => res.attributes));\n  }\n\n  createRoom(content): Observable {\n    const requestContent = {\n      id: `${uuid()}`,\n      companyID: 'takuCloudCom',\n      name: content.nameItem,\n      description: content.descriptionItem,\n    };\n    return this.homeService.createRoom(requestContent);\n  }\n\n  createUser(formContent): Observable {\n    const requestContent = {\n      id: formContent.get('id').value,\n      companyID: 'takuCloudCom',\n      email: formContent.get('targetEmail').value,\n      username: formContent.get('userName').value,\n      positionName: formContent.get('positionName').value,\n      tel: formContent.get('tel').value,\n      iconImage: formContent.get('iconImage').value,\n    };\n    return this.homeService.createUser(requestContent);\n  }\n\n  updateUser(formContent): Observable {\n    const requestContent = {\n      id: formContent.get('id').value,\n      companyID: 'takuCloudCom',\n      email: formContent.get('targetEmail').value,\n      username: formContent.get('userName').value,\n      positionName: formContent.get('positionName').value,\n      tel: formContent.get('tel').value,\n      iconImage: formContent.get('iconImage').value,\n    };\n    return this.homeService.updateUser(requestContent);\n  }\n\n  deleteRoomItem(roomId: string): Observable {\n    return this.homeService.deleteRoomItem(roomId);\n  }\n\n  createUserRoomGroup(userId, roomId): Observable {\n    const content = {\n      id: `user-room-group-${uuid()}`,\n      roomID: `${roomId}`,\n      userID: `${userId}`,\n    }\n    return this.homeService.createUserRoomGroup(content);\n  }\n\n  fetchRoomMembers(roomId: string, currentUserId: string): Observable {\n    const filterContent: ModelRoomGroupFilterInput = {\n      roomID: {\n        eq: `${roomId}`\n      },\n      userID: {\n        ne: `${currentUserId}`\n      }\n    }\n    return this.homeService.fetchRoomMembers(filterContent)\n      .pipe(map((result) => result.items));\n  }\n\n  removeMeFromRoom(roomId: string, meId: string): Observable {\n    return this.fetchRoomGroupsId(roomId, meId)\n      .pipe(concatMap((roomGroupId) => this.homeService.deleteRoomGroupsItem(roomGroupId)));\n  }\n\n  fetchRoomGroupsId(roomId: string, meId: string): Observable {\n    const filterContent = {\n      roomID: {\n        eq: roomId,\n      },\n      userID: {\n        eq: meId,\n      }\n    }\n    return this.homeService.fetchRoomGroupsId(filterContent)\n      .pipe(map(({ items }) => items[0].id));\n  }\n\n  fetchRoomList(currentUseId: string): Observable> {\n    const filterContent = {\n      userID: {\n        eq: currentUseId\n      }\n    }\n    return this.homeService.fetchRoomList(filterContent)\n      .pipe(map(({ items }) => items));\n  }\n\n  setExitsRoomAndUser(data): Observable {\n    return from(data)\n      .pipe(filter((item: ResponseListRoomGroupsQueryItems) => item.room !== null))\n      .pipe(filter((item: ResponseListRoomGroupsQueryItems) => item.user !== null))\n      .pipe(toArray());\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompanyMembers.html":{"url":"interfaces/CompanyMembers.html","title":"interface - CompanyMembers","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  CompanyMembers\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/task/model/task-member.model.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        room\n                                    \n                                \n                                \n                                    \n                                        room:     { id: string; companyID: string; name: string; description: string; createdAt: string; updatedAt:...\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     { id: string; companyID: string; name: string; description: string; createdAt: string; updatedAt:...\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        roomID\n                                    \n                                \n                                \n                                    \n                                        roomID:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     { authority: string; companyID: string; createdAt: string; email: string; iconImage: string; id: ...\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     { authority: string; companyID: string; createdAt: string; email: string; iconImage: string; id: ...\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        userID\n                                    \n                                \n                                \n                                    \n                                        userID:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { StatusBarInfoResult } from '@capacitor/core';\n\nexport interface MemberTask {\n    __typename: string,\n    id: string,\n    companyID: string,\n    username: string,\n    email: string,\n    iconImage: string,\n    positionName: string,\n    tel: string,\n    registered: null,\n    authority: null,\n    createdAt: string,\n    updatedAt: string,\n    checked: boolean\n}\n\nexport interface CompanyMembers {\n    createdAt: string,\n    id: string,\n    room: {\n        id: string,\n        companyID: string,\n        name: string,\n        description: string,\n        createdAt: string\n        updatedAt: string,\n        __typename: string,\n    }\n    roomID: string\n    updatedAt: string,\n    user: {\n        authority: string,\n        companyID: string,\n        createdAt: string,\n        email: string,\n        iconImage: string,\n        id: string,\n        positionName: string,\n        registered: boolean,\n        tel: string,\n        updatedAt: string,\n        username: string\n        __typename: string,\n    }\n    userID: string,\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurrentUserInfo.html":{"url":"interfaces/CurrentUserInfo.html","title":"interface - CurrentUserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  CurrentUserInfo\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/task/interface/current-user-info.interface.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        email_verified\n                                    \n                                \n                                \n                                    \n                                        email_verified:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface CurrentUserInfo {\n    email: string;\n    email_verified: boolean;\n    sub: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InterfaceRoomMembers.html":{"url":"interfaces/InterfaceRoomMembers.html","title":"interface - InterfaceRoomMembers","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  InterfaceRoomMembers\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/room-members/interface/room-members.interface.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        ___typename\n                                    \n                                \n                                \n                                    \n                                        ___typename:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        roomID\n                                    \n                                \n                                \n                                    \n                                        roomID:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     InterfaceUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InterfaceUser\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        userID\n                                    \n                                \n                                \n                                    \n                                        userID:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface InterfaceRoomMembers {\n    createdAt: string;\n    id: string;\n    roomID: string;\n    updatedAt: string;\n    user: InterfaceUser;\n    userID: string;\n    __typename: string;\n}\n\nexport interface InterfaceUser {\n    authority: string;\n    companyID: string;\n    createdAt: string;\n    email: string;\n    iconImage: string;\n    id: string;\n    positionName: string;\n    registered: string;\n    tel: string;\n    updatedAt: string;\n    username: string;\n    __typename: string;\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InterfaceSignup.html":{"url":"interfaces/InterfaceSignup.html","title":"interface - InterfaceSignup","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  InterfaceSignup\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/signup.interface.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        passwordform\n                                    \n                                \n                                \n                                    \n                                        passwordform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface InterfaceSignup {\n    username: string;\n    email: string;\n    passwordform: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InterfaceTask.html":{"url":"interfaces/InterfaceTask.html","title":"interface - InterfaceTask","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  InterfaceTask\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/task.interface.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        ___typename\n                                    \n                                \n                                \n                                    \n                                        ___typename:     \"Task\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Task\"\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        authorID\n                                    \n                                \n                                \n                                    \n                                        authorID:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        chargePersonID\n                                    \n                                \n                                \n                                    \n                                        chargePersonID:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        priority\n                                    \n                                \n                                \n                                    \n                                        priority:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        roomID\n                                    \n                                \n                                \n                                    \n                                        roomID:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        scheduleDate\n                                    \n                                \n                                \n                                    \n                                        scheduleDate:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface InterfaceTask {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    updatedAt: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InterfaceUser.html":{"url":"interfaces/InterfaceUser.html","title":"interface - InterfaceUser","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  InterfaceUser\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/room-members/interface/room-members.interface.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        ___typename\n                                    \n                                \n                                \n                                    \n                                        ___typename:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        authority\n                                    \n                                \n                                \n                                    \n                                        authority:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        companyID\n                                    \n                                \n                                \n                                    \n                                        companyID:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        iconImage\n                                    \n                                \n                                \n                                    \n                                        iconImage:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        positionName\n                                    \n                                \n                                \n                                    \n                                        positionName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        registered\n                                    \n                                \n                                \n                                    \n                                        registered:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        tel\n                                    \n                                \n                                \n                                    \n                                        tel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface InterfaceRoomMembers {\n    createdAt: string;\n    id: string;\n    roomID: string;\n    updatedAt: string;\n    user: InterfaceUser;\n    userID: string;\n    __typename: string;\n}\n\nexport interface InterfaceUser {\n    authority: string;\n    companyID: string;\n    createdAt: string;\n    email: string;\n    iconImage: string;\n    id: string;\n    positionName: string;\n    registered: string;\n    tel: string;\n    updatedAt: string;\n    username: string;\n    __typename: string;\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MemberTask.html":{"url":"interfaces/MemberTask.html","title":"interface - MemberTask","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  MemberTask\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/task/model/task-member.model.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        ___typename\n                                    \n                                \n                                \n                                    \n                                        ___typename:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        authority\n                                    \n                                \n                                \n                                    \n                                        authority:     null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        companyID\n                                    \n                                \n                                \n                                    \n                                        companyID:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        iconImage\n                                    \n                                \n                                \n                                    \n                                        iconImage:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        positionName\n                                    \n                                \n                                \n                                    \n                                        positionName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        registered\n                                    \n                                \n                                \n                                    \n                                        registered:     null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        tel\n                                    \n                                \n                                \n                                    \n                                        tel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { StatusBarInfoResult } from '@capacitor/core';\n\nexport interface MemberTask {\n    __typename: string,\n    id: string,\n    companyID: string,\n    username: string,\n    email: string,\n    iconImage: string,\n    positionName: string,\n    tel: string,\n    registered: null,\n    authority: null,\n    createdAt: string,\n    updatedAt: string,\n    checked: boolean\n}\n\nexport interface CompanyMembers {\n    createdAt: string,\n    id: string,\n    room: {\n        id: string,\n        companyID: string,\n        name: string,\n        description: string,\n        createdAt: string\n        updatedAt: string,\n        __typename: string,\n    }\n    roomID: string\n    updatedAt: string,\n    user: {\n        authority: string,\n        companyID: string,\n        createdAt: string,\n        email: string,\n        iconImage: string,\n        id: string,\n        positionName: string,\n        registered: boolean,\n        tel: string,\n        updatedAt: string,\n        username: string\n        __typename: string,\n    }\n    userID: string,\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OwnUser.html":{"url":"interfaces/OwnUser.html","title":"interface - OwnUser","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  OwnUser\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/setting/setting.page.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        ___typename\n                                    \n                                \n                                \n                                    \n                                        ___typename:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        authority\n                                    \n                                \n                                \n                                    \n                                        authority:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        companyID\n                                    \n                                \n                                \n                                    \n                                        companyID:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        positionName\n                                    \n                                \n                                \n                                    \n                                        positionName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        registered\n                                    \n                                \n                                \n                                    \n                                        registered:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActionSheetController, ModalController } from '@ionic/angular';\nimport { SettingLogic } from './logic/setting.logic';\nimport { EditProfileModalComponent } from '../../shared/component/modal/edit-profile-modal/edit-profile-modal.component';\nimport { from } from 'rxjs';\nimport { concatMap, flatMap } from 'rxjs/operators';\n\n// interface User\ninterface OwnUser {\n  authority: string;\n  companyID: string;\n  createdAt: string;\n  positionName: string;\n  email: string;\n  id: string;\n  registered?: boolean\n  updatedAt: string;\n  username: string;\n  __typename: string;\n}\n\n@Component({\n  selector: 'app-setting',\n  templateUrl: './setting.page.html',\n  styleUrls: ['./setting.page.scss'],\n})\nexport class SettingPage implements OnInit {\n\n  user: OwnUser;\n\n  constructor(\n    private actionSheetCtrl: ActionSheetController,\n    private logic: SettingLogic,\n    private router: Router,\n    private modalCtrl: ModalController,\n  ) { }\n\n  ngOnInit() {\n    this.logic.fetchCurrentUser()\n      .pipe(flatMap((result) => this.logic.fetchUserInfo(result.username)))\n      .subscribe((data) => {\n        this.user = data;\n      });\n  }\n\n  async confirmLogout() {\n    const logoutActionSheet = await this.actionSheetCtrl.create({\n      cssClass: 'my-custom-class',\n      buttons: [\n        {\n          text: '\bログアウト',\n          role: 'destructive',\n          handler: () => {\n            this.actionLogout()\n          }\n        },\n        {\n          text: 'キャンセル',\n          role: 'cancel',\n        }\n      ]\n    });\n    return logoutActionSheet.present();\n  }\n\n  actionLogout() {\n    this.logic.signOut()\n      .subscribe(() => this.router.navigate(['/login']));\n  }\n\n  async presentEditModal(): Promise {\n    const modal = await this.modalCtrl.create({\n      component: EditProfileModalComponent,\n      componentProps: {\n        'status': 'already',\n        'user': this.user,\n      }\n    });\n    const dismissObservable = from(modal.onDidDismiss());\n    dismissObservable\n      .pipe(concatMap(() => this.logic.fetchCurrentUser()))\n      .pipe(flatMap((result) => this.logic.fetchUserInfo(result.username)))\n      .subscribe((data) => {\n        this.user = data;\n      });\n    return modal.present();\n  }\n\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseListRoomGroupsQueryItems.html":{"url":"interfaces/ResponseListRoomGroupsQueryItems.html","title":"interface - ResponseListRoomGroupsQueryItems","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  ResponseListRoomGroupsQueryItems\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/home/service/reponse/response.model.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        ___typename\n                                    \n                                \n                                \n                                    \n                                        ___typename:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        room\n                                    \n                                \n                                \n                                    \n                                        room:     { __typename: string; id: string; name: string; companyID: string; description: string; createdAt...\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     { __typename: string; id: string; name: string; companyID: string; description: string; createdAt...\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        roomID\n                                    \n                                \n                                \n                                    \n                                        roomID:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     { __typename: string; id: string; username: string; email: string; companyID: string; tel: string...\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     { __typename: string; id: string; username: string; email: string; companyID: string; tel: string...\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        userID\n                                    \n                                \n                                \n                                    \n                                        userID:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface ResponseListRoomGroupsQueryItems {\n    // items: {\n    __typename: string,\n    id: string,\n    roomID: string,\n    userID: string,\n    room?: {\n        __typename: string,\n        id: string,\n        name: string,\n        companyID: string,\n        description: string,\n        createdAt: string,\n        updatedAt: string,\n    } | null,\n    user?: {\n        __typename: string,\n        id: string,\n        username: string,\n        email: string,\n        companyID: string,\n        tel: string,\n        positionName: string,\n        iconImage: string,\n        registered: boolean,\n        authority: string,\n        createdAt: string,\n        updatedAt: string,\n    } | null,\n    createdAt: string,\n    updatedAt: string,\n    // }\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SubscriptionResponse.html":{"url":"interfaces/SubscriptionResponse.html","title":"interface - SubscriptionResponse","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  SubscriptionResponse\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/service/amplify.service.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Injectable } from \"@angular/core\";\nimport API, { graphqlOperation } from \"@aws-amplify/api\";\nimport { GraphQLResult } from \"@aws-amplify/api/lib/types\";\nimport { Observable } from \"zen-observable-ts\";\n\nexport interface SubscriptionResponse {\n  value: GraphQLResult;\n}\n\nexport type CreateCompanyInput = {\n  id?: string | null;\n  name: string;\n  domain: string;\n};\n\nexport type ModelCompanyConditionInput = {\n  name?: ModelStringInput | null;\n  domain?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelCompanyConditionInput | null;\n};\n\nexport type ModelStringInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport enum ModelAttributeTypes {\n  binary = \"binary\",\n  binarySet = \"binarySet\",\n  bool = \"bool\",\n  list = \"list\",\n  map = \"map\",\n  number = \"number\",\n  numberSet = \"numberSet\",\n  string = \"string\",\n  stringSet = \"stringSet\",\n  _null = \"_null\"\n}\n\nexport type ModelSizeInput = {\n  ne?: number | null;\n  eq?: number | null;\n  le?: number | null;\n  lt?: number | null;\n  ge?: number | null;\n  gt?: number | null;\n  between?: Array | null;\n};\n\nexport type UpdateCompanyInput = {\n  id: string;\n  name?: string | null;\n  domain?: string | null;\n};\n\nexport type DeleteCompanyInput = {\n  id?: string | null;\n};\n\nexport type CreateUserInput = {\n  id?: string | null;\n  username: string;\n  email: string;\n  companyID: string;\n  tel?: string | null;\n  positionName?: string | null;\n  iconImage?: string | null;\n  registered?: boolean | null;\n  authority?: string | null;\n};\n\nexport type ModelUserConditionInput = {\n  username?: ModelStringInput | null;\n  email?: ModelStringInput | null;\n  companyID?: ModelIDInput | null;\n  tel?: ModelStringInput | null;\n  positionName?: ModelStringInput | null;\n  iconImage?: ModelStringInput | null;\n  registered?: ModelBooleanInput | null;\n  authority?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelUserConditionInput | null;\n};\n\nexport type ModelIDInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport type ModelBooleanInput = {\n  ne?: boolean | null;\n  eq?: boolean | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n};\n\nexport type UpdateUserInput = {\n  id: string;\n  username?: string | null;\n  email?: string | null;\n  companyID?: string | null;\n  tel?: string | null;\n  positionName?: string | null;\n  iconImage?: string | null;\n  registered?: boolean | null;\n  authority?: string | null;\n};\n\nexport type DeleteUserInput = {\n  id?: string | null;\n};\n\nexport type CreateTaskGroupInput = {\n  id?: string | null;\n  taskID: string;\n  userID: string;\n};\n\nexport type ModelTaskGroupConditionInput = {\n  taskID?: ModelIDInput | null;\n  userID?: ModelIDInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelTaskGroupConditionInput | null;\n};\n\nexport type UpdateTaskGroupInput = {\n  id: string;\n  taskID?: string | null;\n  userID?: string | null;\n};\n\nexport type DeleteTaskGroupInput = {\n  id?: string | null;\n};\n\nexport type CreateTaskInput = {\n  id?: string | null;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  description?: string | null;\n  scheduleDate?: string | null;\n  priority?: number | null;\n  status?: number | null;\n  createdAt?: string | null;\n};\n\nexport type ModelTaskConditionInput = {\n  authorID?: ModelIDInput | null;\n  roomID?: ModelIDInput | null;\n  chargePersonID?: ModelIDInput | null;\n  title?: ModelStringInput | null;\n  description?: ModelStringInput | null;\n  scheduleDate?: ModelStringInput | null;\n  priority?: ModelIntInput | null;\n  status?: ModelIntInput | null;\n  createdAt?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelTaskConditionInput | null;\n};\n\nexport type ModelIntInput = {\n  ne?: number | null;\n  eq?: number | null;\n  le?: number | null;\n  lt?: number | null;\n  ge?: number | null;\n  gt?: number | null;\n  between?: Array | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n};\n\nexport type UpdateTaskInput = {\n  id: string;\n  authorID?: string | null;\n  roomID?: string | null;\n  chargePersonID?: string | null;\n  title?: string | null;\n  description?: string | null;\n  scheduleDate?: string | null;\n  priority?: number | null;\n  status?: number | null;\n  createdAt?: string | null;\n};\n\nexport type DeleteTaskInput = {\n  id?: string | null;\n};\n\nexport type CreateRoomGroupInput = {\n  id?: string | null;\n  roomID: string;\n  userID: string;\n};\n\nexport type ModelRoomGroupConditionInput = {\n  roomID?: ModelIDInput | null;\n  userID?: ModelIDInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelRoomGroupConditionInput | null;\n};\n\nexport type UpdateRoomGroupInput = {\n  id: string;\n  roomID?: string | null;\n  userID?: string | null;\n};\n\nexport type DeleteRoomGroupInput = {\n  id?: string | null;\n};\n\nexport type CreateRoomInput = {\n  id?: string | null;\n  name: string;\n  companyID: string;\n  description: string;\n};\n\nexport type ModelRoomConditionInput = {\n  name?: ModelStringInput | null;\n  companyID?: ModelIDInput | null;\n  description?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelRoomConditionInput | null;\n};\n\nexport type UpdateRoomInput = {\n  id: string;\n  name?: string | null;\n  companyID?: string | null;\n  description?: string | null;\n};\n\nexport type DeleteRoomInput = {\n  id?: string | null;\n};\n\nexport type CreateMessageInput = {\n  id?: string | null;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt?: string | null;\n  isSent?: boolean | null;\n};\n\nexport type ModelMessageConditionInput = {\n  taskID?: ModelIDInput | null;\n  authorID?: ModelIDInput | null;\n  content?: ModelStringInput | null;\n  createdAt?: ModelStringInput | null;\n  isSent?: ModelBooleanInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelMessageConditionInput | null;\n};\n\nexport type UpdateMessageInput = {\n  id: string;\n  taskID?: string | null;\n  authorID?: string | null;\n  content?: string | null;\n  createdAt?: string | null;\n  isSent?: boolean | null;\n};\n\nexport type DeleteMessageInput = {\n  id?: string | null;\n};\n\nexport type ModelCompanyFilterInput = {\n  id?: ModelIDInput | null;\n  name?: ModelStringInput | null;\n  domain?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelCompanyFilterInput | null;\n};\n\nexport type ModelUserFilterInput = {\n  id?: ModelIDInput | null;\n  username?: ModelStringInput | null;\n  email?: ModelStringInput | null;\n  companyID?: ModelIDInput | null;\n  tel?: ModelStringInput | null;\n  positionName?: ModelStringInput | null;\n  iconImage?: ModelStringInput | null;\n  registered?: ModelBooleanInput | null;\n  authority?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelUserFilterInput | null;\n};\n\nexport type ModelTaskGroupFilterInput = {\n  id?: ModelIDInput | null;\n  taskID?: ModelIDInput | null;\n  userID?: ModelIDInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelTaskGroupFilterInput | null;\n};\n\nexport type ModelTaskFilterInput = {\n  id?: ModelIDInput | null;\n  authorID?: ModelIDInput | null;\n  roomID?: ModelIDInput | null;\n  chargePersonID?: ModelIDInput | null;\n  title?: ModelStringInput | null;\n  description?: ModelStringInput | null;\n  scheduleDate?: ModelStringInput | null;\n  priority?: ModelIntInput | null;\n  status?: ModelIntInput | null;\n  createdAt?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelTaskFilterInput | null;\n};\n\nexport type ModelRoomGroupFilterInput = {\n  id?: ModelIDInput | null;\n  roomID?: ModelIDInput | null;\n  userID?: ModelIDInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelRoomGroupFilterInput | null;\n};\n\nexport type ModelRoomFilterInput = {\n  id?: ModelIDInput | null;\n  name?: ModelStringInput | null;\n  companyID?: ModelIDInput | null;\n  description?: ModelStringInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelRoomFilterInput | null;\n};\n\nexport type ModelMessageFilterInput = {\n  id?: ModelIDInput | null;\n  taskID?: ModelIDInput | null;\n  authorID?: ModelIDInput | null;\n  content?: ModelStringInput | null;\n  createdAt?: ModelStringInput | null;\n  isSent?: ModelBooleanInput | null;\n  and?: Array | null;\n  or?: Array | null;\n  not?: ModelMessageFilterInput | null;\n};\n\nexport type CreateCompanyMutation = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateCompanyMutation = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteCompanyMutation = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreateUserMutation = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateUserMutation = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteUserMutation = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreateTaskGroupMutation = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateTaskGroupMutation = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteTaskGroupMutation = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreateTaskMutation = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  updatedAt: string;\n};\n\nexport type UpdateTaskMutation = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  updatedAt: string;\n};\n\nexport type DeleteTaskMutation = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  updatedAt: string;\n};\n\nexport type CreateRoomGroupMutation = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateRoomGroupMutation = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteRoomGroupMutation = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreateRoomMutation = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateRoomMutation = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteRoomMutation = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreateMessageMutation = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type UpdateMessageMutation = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type DeleteMessageMutation = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type GetCompanyQuery = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListCompanysQuery = {\n  __typename: \"ModelCompanyConnection\";\n  items: Array | null;\n  nextToken: string | null;\n};\n\nexport type GetUserQuery = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListUsersQuery = {\n  __typename: \"ModelUserConnection\";\n  items: Array | null;\n  nextToken: string | null;\n};\n\nexport type GetTaskGroupQuery = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListTaskGroupsQuery = {\n  __typename: \"ModelTaskGroupConnection\";\n  items: Array | null;\n  nextToken: string | null;\n};\n\nexport type GetTaskQuery = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  updatedAt: string;\n};\n\nexport type ListTasksQuery = {\n  __typename: \"ModelTaskConnection\";\n  items: Array | null;\n  nextToken: string | null;\n};\n\nexport type GetRoomGroupQuery = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room?: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListRoomGroupsQuery = {\n  __typename: \"ModelRoomGroupConnection\";\n  items: Array | null;\n  nextToken: string | null;\n};\n\nexport type GetRoomQuery = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListRoomsQuery = {\n  __typename: \"ModelRoomConnection\";\n  items: Array | null;\n  nextToken: string | null;\n};\n\nexport type GetMessageQuery = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type ListMessagesQuery = {\n  __typename: \"ModelMessageConnection\";\n  items: Array | null;\n    author: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    };\n    task: {\n      __typename: \"Task\";\n      id: string;\n      authorID: string;\n      roomID: string;\n      chargePersonID: string;\n      title: string;\n      description: string | null;\n      scheduleDate: string | null;\n      priority: number | null;\n      status: number | null;\n      createdAt: string | null;\n      updatedAt: string;\n    };\n    updatedAt: string;\n  } | null> | null;\n  nextToken: string | null;\n};\n\nexport type OnCreateCompanySubscription = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateCompanySubscription = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteCompanySubscription = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  companyMembers: {\n    __typename: \"ModelUserConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreateUserSubscription = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateUserSubscription = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteUserSubscription = {\n  __typename: \"User\";\n  id: string;\n  username: string;\n  email: string;\n  companyID: string;\n  tel: string | null;\n  positionName: string | null;\n  iconImage: string | null;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  room: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  task: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargeTask: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreateTaskGroupSubscription = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateTaskGroupSubscription = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteTaskGroupSubscription = {\n  __typename: \"TaskGroup\";\n  id: string;\n  taskID: string;\n  userID: string;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreateTaskSubscription = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  updatedAt: string;\n};\n\nexport type OnUpdateTaskSubscription = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  updatedAt: string;\n};\n\nexport type OnDeleteTaskSubscription = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  chargePersonID: string;\n  title: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelTaskGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  chargePerson: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  updatedAt: string;\n};\n\nexport type OnCreateRoomGroupSubscription = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateRoomGroupSubscription = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteRoomGroupSubscription = {\n  __typename: \"RoomGroup\";\n  id: string;\n  roomID: string;\n  userID: string;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    name: string;\n    companyID: string;\n    description: string;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  user: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreateRoomSubscription = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateRoomSubscription = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteRoomSubscription = {\n  __typename: \"Room\";\n  id: string;\n  name: string;\n  companyID: string;\n  description: string;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    companyMembers: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  users: {\n    __typename: \"ModelRoomGroupConnection\";\n    items: Array | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreateMessageSubscription = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type OnUpdateMessageSubscription = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type OnDeleteMessageSubscription = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  authorID: string;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  author: {\n    __typename: \"User\";\n    id: string;\n    username: string;\n    email: string;\n    companyID: string;\n    tel: string | null;\n    positionName: string | null;\n    iconImage: string | null;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    room: {\n      __typename: \"ModelRoomGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    task: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargeTask: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    chargePersonID: string;\n    title: string;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      name: string;\n      companyID: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    users: {\n      __typename: \"ModelTaskGroupConnection\";\n      nextToken: string | null;\n    } | null;\n    chargePerson: {\n      __typename: \"User\";\n      id: string;\n      username: string;\n      email: string;\n      companyID: string;\n      tel: string | null;\n      positionName: string | null;\n      iconImage: string | null;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AmplifyService {\n  async CreateCompany(\n    input: CreateCompanyInput,\n    condition?: ModelCompanyConditionInput\n  ): Promise {\n    const statement = `mutation CreateCompany($input: CreateCompanyInput!, $condition: ModelCompanyConditionInput) {\n        createCompany(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.createCompany;\n  }\n  async UpdateCompany(\n    input: UpdateCompanyInput,\n    condition?: ModelCompanyConditionInput\n  ): Promise {\n    const statement = `mutation UpdateCompany($input: UpdateCompanyInput!, $condition: ModelCompanyConditionInput) {\n        updateCompany(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.updateCompany;\n  }\n  async DeleteCompany(\n    input: DeleteCompanyInput,\n    condition?: ModelCompanyConditionInput\n  ): Promise {\n    const statement = `mutation DeleteCompany($input: DeleteCompanyInput!, $condition: ModelCompanyConditionInput) {\n        deleteCompany(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.deleteCompany;\n  }\n  async CreateRoom(\n    input: CreateRoomInput,\n    condition?: ModelRoomConditionInput\n  ): Promise {\n    const statement = `mutation CreateRoom($input: CreateRoomInput!, $condition: ModelRoomConditionInput) {\n        createRoom(input: $input, condition: $condition) {\n          __typename\n          id\n          companyID\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.createRoom;\n  }\n  async UpdateRoom(\n    input: UpdateRoomInput,\n    condition?: ModelRoomConditionInput\n  ): Promise {\n    const statement = `mutation UpdateRoom($input: UpdateRoomInput!, $condition: ModelRoomConditionInput) {\n        updateRoom(input: $input, condition: $condition) {\n          __typename\n          id\n          companyID\n          name\n          description\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          tasks {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.updateRoom;\n  }\n  async DeleteRoom(\n    input: DeleteRoomInput,\n    condition?: ModelRoomConditionInput\n  ): Promise {\n    const statement = `mutation DeleteRoom($input: DeleteRoomInput!, $condition: ModelRoomConditionInput) {\n        deleteRoom(input: $input, condition: $condition) {\n          __typename\n          id\n          companyID\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.deleteRoom;\n  }\n  async CreateTask(\n    input: CreateTaskInput,\n    condition?: ModelTaskConditionInput\n  ): Promise {\n    const statement = `mutation CreateTask($input: CreateTaskInput!, $condition: ModelTaskConditionInput) {\n        createTask(input: $input, condition: $condition) {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          chargePerson {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n          }\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.createTask;\n  }\n  async UpdateTask(\n    input: UpdateTaskInput,\n    condition?: ModelTaskConditionInput\n  ): Promise {\n    const statement = `mutation UpdateTask($input: UpdateTaskInput!, $condition: ModelTaskConditionInput) {\n        updateTask(input: $input, condition: $condition) {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.updateTask;\n  }\n  async DeleteTask(\n    input: DeleteTaskInput,\n    condition?: ModelTaskConditionInput\n  ): Promise {\n    const statement = `mutation DeleteTask($input: DeleteTaskInput!, $condition: ModelTaskConditionInput) {\n        deleteTask(input: $input, condition: $condition) {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.deleteTask;\n  }\n  async CreateMessage(\n    input: CreateMessageInput,\n    condition?: ModelMessageConditionInput\n  ): Promise {\n    const statement = `mutation CreateMessage($input: CreateMessageInput!, $condition: ModelMessageConditionInput) {\n        createMessage(input: $input, condition: $condition) {\n          __typename\n          id\n          taskID\n          content\n          createdAt\n          isSent\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.createMessage;\n  }\n  async UpdateMessage(\n    input: UpdateMessageInput,\n    condition?: ModelMessageConditionInput\n  ): Promise {\n    const statement = `mutation UpdateMessage($input: UpdateMessageInput!, $condition: ModelMessageConditionInput) {\n        updateMessage(input: $input, condition: $condition) {\n          __typename\n          id\n          taskID\n          author {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          content\n          createdAt\n          isSent\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            room {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.updateMessage;\n  }\n  async DeleteMessage(\n    input: DeleteMessageInput,\n    condition?: ModelMessageConditionInput\n  ): Promise {\n    const statement = `mutation DeleteMessage($input: DeleteMessageInput!, $condition: ModelMessageConditionInput) {\n        deleteMessage(input: $input, condition: $condition) {\n          __typename\n          id\n          taskID\n          author {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          content\n          createdAt\n          isSent\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            room {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.deleteMessage;\n  }\n\n  async CreateUser(\n    input: CreateUserInput,\n    condition?: ModelUserConditionInput\n  ): Promise {\n    const statement = `mutation CreateUser($input: CreateUserInput!, $condition: ModelUserConditionInput) {\n        createUser(input: $input, condition: $condition) {\n          __typename\n          id\n          email\n          companyID\n          username\n          tel\n          positionName\n          iconImage\n          registered\n          authority\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.createUser;\n  }\n\n  async UpdateUser(\n    input: UpdateUserInput,\n    condition?: ModelUserConditionInput\n  ): Promise {\n    const statement = `mutation UpdateUser($input: UpdateUserInput!, $condition: ModelUserConditionInput) {\n        updateUser(input: $input, condition: $condition) {\n          __typename\n          id\n          username\n          email\n          companyID\n          tel\n          positionName\n          iconImage\n          registered\n          authority\n          room {\n            __typename\n            items {\n              __typename\n              id\n              roomID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          task {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          chargeTask {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.updateUser;\n  }\n  async DeleteUser(\n    input: DeleteUserInput,\n    condition?: ModelUserConditionInput\n  ): Promise {\n    const statement = `mutation DeleteUser($input: DeleteUserInput!, $condition: ModelUserConditionInput) {\n        deleteUser(input: $input, condition: $condition) {\n          __typename\n          id\n          email\n          companyID\n          username\n          registered\n          authority\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.deleteUser;\n  }\n  async GetCompany(id: string): Promise {\n    const statement = `query GetCompany($id: ID!) {\n        getCompany(id: $id) {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.getCompany;\n  }\n  async ListCompanys(\n    filter?: ModelCompanyFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListCompanys($filter: ModelCompanyFilterInput, $limit: Int, $nextToken: String) {\n        listCompanys(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listCompanys;\n  }\n  async GetRoom(id: string): Promise {\n    const statement = `query GetRoom($id: ID!) {\n        getRoom(id: $id) {\n          __typename\n          id\n          companyID\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.getRoom;\n  }\n  async ListRooms(\n    filter?: ModelRoomFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListRooms($filter: ModelRoomFilterInput, $limit: Int, $nextToken: String) {\n        listRooms(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            companyID\n            name\n            description\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listRooms;\n  }\n  async GetTask(id: string): Promise {\n    const statement = `query GetTask($id: ID!) {\n        getTask(id: $id) {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          room {\n            __typename\n            id\n            name\n            companyID\n            description\n            tasks {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              content\n              createdAt\n              isSent\n              updatedAt\n            }\n            nextToken\n          }\n          users {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              userID\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          chargePerson {\n            __typename\n            id\n            username\n            email\n            companyID\n            positionName\n            iconImage\n            registered\n            authority\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.getTask;\n  }\n  async ListTasks(\n    filter?: ModelTaskFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListTasks($filter: ModelTaskFilterInput, $limit: Int, $nextToken: String) {\n        listTasks(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            chargePerson {\n              __typename\n              id\n              username\n              email\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listTasks;\n  }\n  async GetMessage(id: string): Promise {\n    const statement = `query GetMessage($id: ID!) {\n        getMessage(id: $id) {\n          __typename\n          id\n          taskID\n          author {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          content\n          createdAt\n          isSent\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            room {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.getMessage;\n  }\n  async ListMessages(\n    filter?: ModelMessageFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListMessages($filter: ModelMessageFilterInput, $limit: Int, $nextToken: String) {\n        listMessages(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            taskID\n            author {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            content\n            createdAt\n            isSent\n            attachmentUri\n            task {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listMessages;\n  }\n\n  async GetUser(id: string): Promise {\n    const statement = `query GetUser($id: ID!) {\n      getUser(id: $id) {\n        __typename\n        id\n        username\n        email\n        companyID\n        tel\n        positionName\n        iconImage\n        registered\n        authority\n        chargeTask {\n          __typename\n          items {\n            __typename\n            id\n            authorID\n            roomID\n            chargePersonID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n    }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.getUser;\n  }\n  async ListUsers(\n    filter?: ModelUserFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListUsers($filter: ModelUserFilterInput, $limit: Int, $nextToken: String) {\n      listUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n        __typename\n        items {\n          __typename\n          id\n          username\n          email\n          companyID\n          tel\n          positionName\n          iconImage\n          registered\n          authority\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n    }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listUsers;\n  }\n  OnCreateCompanyListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateCompany {\n        onCreateCompany {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnUpdateCompanyListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateCompany {\n        onUpdateCompany {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnDeleteCompanyListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteCompany {\n        onDeleteCompany {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnCreateRoomListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateRoom {\n        onCreateRoom {\n          __typename\n          id\n          companyID\n          name\n          description\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          tasks {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnUpdateRoomListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateRoom {\n        onUpdateRoom {\n          __typename\n          id\n          companyID\n          name\n          description\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          tasks {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnDeleteRoomListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteRoom {\n        onDeleteRoom {\n          __typename\n          id\n          companyID\n          name\n          description\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          tasks {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnCreateTaskListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateTask {\n        onCreateTask {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          room {\n            __typename\n            id\n            companyID\n            name\n            description\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              content\n              createdAt\n              isSent\n              updatedAt\n            }\n            nextToken\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnUpdateTaskListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateTask {\n        onUpdateTask {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          room {\n            __typename\n            id\n            companyID\n            name\n            description\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              content\n              createdAt\n              isSent\n              updatedAt\n            }\n            nextToken\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnDeleteTaskListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteTask {\n        onDeleteTask {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          room {\n            __typename\n            id\n            companyID\n            name\n            description\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              content\n              createdAt\n              isSent\n              updatedAt\n            }\n            nextToken\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnCreateMessageListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateMessage {\n        onCreateMessage {\n          __typename\n          id\n          taskID\n          author {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          content\n          createdAt\n          isSent\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            room {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            messages {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n  OnUpdateMessageListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateMessage {\n        onUpdateMessage {\n          __typename\n          id\n          taskID\n          author {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          content\n          createdAt\n          isSent\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            room {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnDeleteMessageListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteMessage {\n        onDeleteMessage {\n          __typename\n          id\n          taskID\n          author {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          content\n          createdAt\n          isSent\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            room {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnCreateUserListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateUser {\n        onCreateUser {\n          __typename\n          id\n          email\n          companyID\n          username\n          registered\n          authority\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnUpdateUserListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateUser {\n        onUpdateUser {\n          __typename\n          id\n          email\n          companyID\n          username\n          registered\n          authority\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  OnDeleteUserListener: Observable = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteUser {\n        onDeleteUser {\n          __typename\n          id\n          email\n          companyID\n          username\n          registered\n          authority\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable;\n\n  async CreateRoomGroup(\n    input: CreateRoomGroupInput,\n    condition?: ModelRoomConditionInput\n  ): Promise {\n    const statement = `mutation CreateRoomGroup($input: CreateRoomGroupInput!, $condition: ModelRoomGroupConditionInput) {\n        createRoomGroup(input: $input, condition: $condition) {\n          __typename\n          id\n          roomID\n          userID\n          room {\n            __typename\n            id\n            name\n            companyID\n            description\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.createRoomGroup;\n  }\n\n  async ListRoomGroups(\n    filter?: ModelRoomGroupFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListRoomGroups($filter: ModelRoomGroupFilterInput, $limit: Int, $nextToken: String) {\n        listRoomGroups(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            roomID\n            userID\n            room {\n              __typename\n              id\n              name\n              companyID\n              description\n              createdAt\n              updatedAt\n            }\n            user {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listRoomGroups;\n  }\n  async ListTaskGroups(\n    filter?: ModelTaskGroupFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise {\n    const statement = `query ListTaskGroups($filter: ModelTaskGroupFilterInput, $limit: Int, $nextToken: String) {\n        listTaskGroups(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            taskID\n            userID\n            task {\n              __typename\n              id\n              authorID\n              roomID\n              chargePersonID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            user {\n              __typename\n              id\n              username\n              email\n              companyID\n              tel\n              positionName\n              iconImage\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.listTaskGroups;\n  }\n  async DeleteRoomGroup(\n    input: DeleteRoomGroupInput,\n    condition?: ModelRoomGroupConditionInput\n  ): Promise {\n    const statement = `mutation DeleteRoomGroup($input: DeleteRoomGroupInput!, $condition: ModelRoomGroupConditionInput) {\n        deleteRoomGroup(input: $input, condition: $condition) {\n          __typename\n          id\n          roomID\n          userID\n          room {\n            __typename\n            id\n            name\n            companyID\n            description\n            tasks {\n              __typename\n              nextToken\n            }\n            users {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          user {\n            __typename\n            id\n            username\n            email\n            companyID\n            tel\n            positionName\n            iconImage\n            registered\n            authority\n            messages {\n              __typename\n              nextToken\n            }\n            room {\n              __typename\n              nextToken\n            }\n            task {\n              __typename\n              nextToken\n            }\n            chargeTask {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return response.data.deleteRoomGroup;\n  }\n\n}\n\n\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaskFormModel.html":{"url":"interfaces/TaskFormModel.html","title":"interface - TaskFormModel","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TaskFormModel\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/task-form.model.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        chargePersonId\n                                    \n                                \n                                \n                                    \n                                        chargePersonId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        descriptionItem\n                                    \n                                \n                                \n                                    \n                                        descriptionItem:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        nameItem\n                                    \n                                \n                                \n                                    \n                                        nameItem:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        scheduleDateItem\n                                    \n                                \n                                \n                                    \n                                        scheduleDateItem:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface TaskFormModel {\n    nameItem: string;\n    descriptionItem: string;\n    chargePersonId: string;\n    scheduleDateItem: string;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous.html":{"url":"miscellaneous.html","title":"miscellaneous - miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n\n\n    \n        Variables\n            \n                \n                    \n                        \n                             OneWeekSecond\n                        \n                    \n                    \n                        \n                            OneWeekSecond:     \n    \n                        \n                    \n                        \n                            \n                                Default value: 604800\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             \n                        \n                    \n                    \n                        \n                            :     \n    \n                        \n                    \n                        \n                            \n                                Default value: Plugins\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             viewKind\n                        \n                    \n                    \n                        \n                            viewKind:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             environment\n                        \n                    \n                    \n                        \n                            environment:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             environment\n                        \n                    \n                    \n                        \n                            environment:     \n    \n                        \n                    \n                \n            \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage \n\n\n\n    Project\n    2%\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                src/app/API.service.ts\n            \n            \n                injectable\n            \n            \n                APIService\n            \n            \n                0 %\n                (0/56)\n            \n        \n        \n            \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/guard/auth.guard.ts\n            \n            \n                injectable\n            \n            \n                AuthGuard\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/interfaces/signup.interface.ts\n            \n            \n                interface\n            \n            \n                InterfaceSignup\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/interfaces/task.interface.ts\n            \n            \n                interface\n            \n            \n                InterfaceTask\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                src/app/pages/comment/comment.page.ts\n            \n            \n                component\n            \n            \n                CommentPage\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/pages/confirm/confirm.page.ts\n            \n            \n                component\n            \n            \n                ConfirmPage\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/app/pages/confirm/logic/confirm.logic.ts\n            \n            \n                injectable\n            \n            \n                ConfirmLogic\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/pages/home/componet/list-room/list-room.component.ts\n            \n            \n                component\n            \n            \n                ListRoomComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                src/app/pages/home/home.page.ts\n            \n            \n                component\n            \n            \n                HomePage\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/pages/home/logic/home.logic.ts\n            \n            \n                injectable\n            \n            \n                HomeLogic\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                src/app/pages/home/logic/home.logic.ts\n            \n            \n                interface\n            \n            \n                Attribute\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/pages/home/service/home.service.ts\n            \n            \n                injectable\n            \n            \n                HomeService\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                src/app/pages/home/service/reponse/response.model.ts\n            \n            \n                interface\n            \n            \n                ResponseListRoomGroupsQueryItems\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                src/app/pages/login/logic/login-logic.service.ts\n            \n            \n                injectable\n            \n            \n                LoginLogic\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/pages/login/login.page.ts\n            \n            \n                component\n            \n            \n                LoginPage\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/pages/own-task/logic/own-task.logic.ts\n            \n            \n                injectable\n            \n            \n                OwnTaskLogic\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/app/pages/own-task/own-task.page.ts\n            \n            \n                component\n            \n            \n                OwnTaskPage\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/pages/own-task/service/own-task.service.ts\n            \n            \n                injectable\n            \n            \n                OwnTaskService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/pages/room-members/interface/room-members.interface.ts\n            \n            \n                interface\n            \n            \n                InterfaceRoomMembers\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                src/app/pages/room-members/interface/room-members.interface.ts\n            \n            \n                interface\n            \n            \n                InterfaceUser\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                src/app/pages/room-members/logic/room-members.logic.ts\n            \n            \n                injectable\n            \n            \n                RoomMembersLogic\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                src/app/pages/room-members/room-members.page.ts\n            \n            \n                component\n            \n            \n                RoomMembersPage\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                src/app/pages/room-members/service/room-member.service.ts\n            \n            \n                injectable\n            \n            \n                RoomMemberService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/pages/setting/logic/setting.logic.ts\n            \n            \n                injectable\n            \n            \n                SettingLogic\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/pages/setting/service/setting.service.ts\n            \n            \n                injectable\n            \n            \n                SettingService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/pages/setting/setting.page.ts\n            \n            \n                component\n            \n            \n                SettingPage\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/app/pages/setting/setting.page.ts\n            \n            \n                interface\n            \n            \n                OwnUser\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                src/app/pages/signup/logic/signup-logic.service.ts\n            \n            \n                injectable\n            \n            \n                SignupLogicService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/pages/signup/signup.page.ts\n            \n            \n                component\n            \n            \n                SignupPage\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/app/pages/tabs/tabs.page.ts\n            \n            \n                component\n            \n            \n                TabsPage\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/pages/task-detail/logic/task-detail.logic.ts\n            \n            \n                injectable\n            \n            \n                TaskDetailLogic\n            \n            \n                50 %\n                (9/18)\n            \n        \n        \n            \n                src/app/pages/task-detail/service/task-detail.service.ts\n            \n            \n                injectable\n            \n            \n                TaskDetailService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/app/pages/task-detail/task-detail.page.ts\n            \n            \n                component\n            \n            \n                TaskDetailPage\n            \n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                src/app/pages/task/component/add-person-modal/add-person-modal.component.ts\n            \n            \n                component\n            \n            \n                AddPersonModalComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                src/app/pages/task/interface/current-user-info.interface.ts\n            \n            \n                interface\n            \n            \n                CurrentUserInfo\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/pages/task/logic/add-person.logic.ts\n            \n            \n                injectable\n            \n            \n                AddPersonLogic\n            \n            \n                0 %\n                (0/0)\n            \n        \n        \n            \n                src/app/pages/task/logic/task.logic.ts\n            \n            \n                injectable\n            \n            \n                TaskLogic\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                src/app/pages/task/model/task-member.model.ts\n            \n            \n                interface\n            \n            \n                CompanyMembers\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                src/app/pages/task/model/task-member.model.ts\n            \n            \n                interface\n            \n            \n                MemberTask\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                src/app/pages/task/service/task.service.ts\n            \n            \n                injectable\n            \n            \n                TaskService\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                src/app/pages/task/task.page.ts\n            \n            \n                component\n            \n            \n                TaskPage\n            \n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                src/app/shared/component/modal/add-room-modal/add-room-modal.component.ts\n            \n            \n                component\n            \n            \n                AddRoomModalComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/app/shared/component/modal/add-task-modal/add-task-modal.component.ts\n            \n            \n                component\n            \n            \n                AddTaskModalComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                src/app/shared/component/modal/delete-task-modal/delete-task-modal.component.ts\n            \n            \n                component\n            \n            \n                DeleteTaskModalComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/shared/component/modal/edit-profile-modal/edit-profile-modal.component.ts\n            \n            \n                component\n            \n            \n                EditProfileModalComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                src/app/shared/component/no-content/no-content.component.ts\n            \n            \n                component\n            \n            \n                NoContentComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/shared/logic/shared-logic.service.ts\n            \n            \n                injectable\n            \n            \n                SharedLogicService\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                src/app/shared/model/task-form.model.ts\n            \n            \n                interface\n            \n            \n                TaskFormModel\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/shared/service/amplify.service.ts\n            \n            \n                injectable\n            \n            \n                AmplifyService\n            \n            \n                0 %\n                (0/44)\n            \n        \n        \n            \n                src/app/shared/service/amplify.service.ts\n            \n            \n                interface\n            \n            \n                SubscriptionResponse\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/shared/service/session.service.ts\n            \n            \n                injectable\n            \n            \n                SessionService\n            \n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
