{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./src/app/app.component.html","./src/app/shared/component/modal/add-room-modal/add-room-modal.component.html","./src/app/shared/component/modal/add-task-modal/add-task-modal.component.html","./src/app/shared/component/modal/delete-task-modal/delete-task-modal.component.html","./src/app/shared/component/modal/edit-profile-modal/edit-profile-modal.component.html","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/guard/auth.guard.ts","./src/app/pages/home/logic/home-logic.service.ts","./src/app/pages/home/service/home-service.service.ts","./src/app/shared/component/modal/add-room-modal/add-room-modal.component.scss","./src/app/shared/component/modal/add-room-modal/add-room-modal.component.ts","./src/app/shared/component/modal/add-task-modal/add-task-modal.component.scss","./src/app/shared/component/modal/add-task-modal/add-task-modal.component.ts","./src/app/shared/component/modal/delete-task-modal/delete-task-modal.component.scss","./src/app/shared/component/modal/delete-task-modal/delete-task-modal.component.ts","./src/app/shared/component/modal/edit-profile-modal/edit-profile-modal.component.scss","./src/app/shared/component/modal/edit-profile-modal/edit-profile-modal.component.ts","./src/app/shared/logic/shared-logic.service.ts","./src/app/shared/service/amplify.service.ts","./src/app/shared/service/session.service.ts","./src/app/shared/shared.module.ts","./src/aws-exports.js","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-action-sheet.entry.js\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-alert.entry.js\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-app_8.entry.js\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-avatar_3.entry.js\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-back-button.entry.js\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-backdrop.entry.js\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-button_2.entry.js\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-card_5.entry.js\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-checkbox.entry.js\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-chip.entry.js\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-col_3.entry.js\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-datetime_3.entry.js\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-fab_3.entry.js\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-img.entry.js\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-infinite-scroll_2.entry.js\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-input.entry.js\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item-option_3.entry.js\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item_8.entry.js\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-loading.entry.js\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-menu_3.entry.js\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-modal.entry.js\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-popover.entry.js\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-progress-bar.entry.js\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-range.entry.js\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-refresher_2.entry.js\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-reorder_2.entry.js\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-ripple-effect.entry.js\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-searchbar.entry.js\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-segment_2.entry.js\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-select_3.entry.js\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-slide_2.entry.js\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-spinner.entry.js\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-split-pane.entry.js\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab-bar_2.entry.js\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab_2.entry.js\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-text.entry.js\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-textarea.entry.js\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toast.entry.js\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toggle.entry.js\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-virtual-scroll.entry.js\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./node_modules/@ionic/core/dist/esm lazy recursive ^\\\\.\\\\/.*\\\\.entry\\\\.js$ include: \\\\.entry\\\\.js$ exclude: \\\\.system\\\\.entry\\\\.js$\";\nmodule.exports = webpackAsyncContext;","export default \"<ion-app>\\n  <ion-router-outlet></ion-router-outlet>\\n</ion-app>\\n\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>案件の追加</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"dismissModal()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"roomItemGroup\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">案件名</ion-label>\\n      <ion-input formControlName=\\\"nameItem\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">詳細</ion-label>\\n      <ion-textarea autoGrow=\\\"true\\b\\\" formControlName=\\\"descriptionItem\\\">\\n      </ion-textarea>\\n    </ion-item>\\n\\n    <ion-button\\n      (click)=\\\"createItem()\\\"\\n      [disabled]=\\\"nameItem.invalid\\\"\\n      expand=\\\"full\\\"\\n      >追加\\n    </ion-button>\\n  </form>\\n</ion-content>\\n\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>{{ room.name }}</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"dismissModal()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"taskItemForm\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">名前</ion-label>\\n      <ion-input formControlName=\\\"nameItem\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">説明</ion-label>\\n      <ion-input formControlName=\\\"descriptionItem\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">期限</ion-label>\\n      <ion-datetime\\n        (ionChange)=\\\"changeDate()\\\"\\n        displayFormat=\\\"YYYY/MM/DD\\\"\\n        displayTimezone=\\\"Asia/Tokyo\\\"\\n        cancelText=\\\"キャンセル\\\"\\n        dayNames=\\\"曜日\\\"\\n        formControlName=\\\"scheduleDateItem\\\"\\n        doneText=\\\"完了\\\"\\n        [min]=\\\"minYear\\\"\\n        [max]=\\\"maxYear\\\"\\n        [value]=\\\"currentIsoString\\\"\\n      ></ion-datetime>\\n    </ion-item>\\n\\n    \\b<ion-button\\n      (click)=\\\"createTaskItem()\\\"\\n      [disabled]=\\\"taskItemForm.invalid\\\"\\n      expand=\\\"full\\\"\\n    >\\n      追加\\n    </ion-button>\\n  </form>\\n</ion-content>\\n\";","export default \"<!-- <ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>タスクを削除してもよいでしょうか？</ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n\\n<ion-content fullscreen padding>\\n  <ion-grid class=\\\"item-paddind\\\">\\n    <ion-row class=\\\"ion-align-items-center ion-padding-vertical\\\">\\n      <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n        <p>「{{ task.title }}」</p>\\n        <p>削除してもよいでしょうか？</p>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row class=\\\"ion-align-items-center\\\">\\n      <ion-col size=\\\"6\\\" class=\\\"ion-text-center ion-padding-top\\\">\\n        <ion-button (click)=\\\"onCancel()\\\">キャンセル</ion-button>\\n      </ion-col>\\n      <ion-col size=\\\"6\\\" class=\\\"ion-text-center\\\">\\n        <ion-button\\n          (click)=\\\"deleteTargetTask(task)\\\"\\n          color=\\\"danger\\\"\\n          fill=\\\"outline\\\"\\n        >\\n          削除\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>{{ title }}</ion-title>\\n    <ion-buttons *ngIf=\\\"status !== 'new'\\\" slot=\\\"start\\\">\\n      <ion-button (click)=\\\"dismissModal()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"close-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button [disabled]=\\\"editProfileForm.invalid\\\" (click)=\\\"saveProfile()\\\"\\n        >保存</ion-button\\n      >\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"editProfileForm\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"header\\\">\\n        <div class=\\\"avatar\\\">\\n          <img src=\\\"../../../../../assets/svg/anonymous.svg\\\" alt=\\\"\\\" />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"user-meta ion-text-center\\\">\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">名前</ion-label>\\n          <ion-input\\n            formControlName=\\\"userName\\\"\\n            placeholder=\\\"名前を追加\\\"\\n          ></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">役職</ion-label>\\n          <ion-input\\n            formControlName=\\\"positionName\\\"\\n            placeholder=\\\"役職や職種、ポジションなどを追加\\\"\\n          ></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">Email</ion-label>\\n          <ion-input\\n            [disabled]=\\\"true\\\"\\n            formControlName=\\\"targetEmail\\\"\\n            placeholder=\\\"メールアドレスを追加\\\"\\n          ></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">電話番号</ion-label>\\n          <ion-input\\n            formControlName=\\\"tel\\\"\\n            placeholder=\\\"電話番号を追加\\\"\\n          ></ion-input>\\n        </ion-item>\\n      </div>\\n    </div>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './guard/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => import('./pages/tabs/tabs.module').then(m => m.TabsPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'home',\n    loadChildren: () => import('./pages/home/home.module').then(m => m.HomePageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'setting',\n    loadChildren: () => import('./pages/setting/setting.module').then(m => m.SettingPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'own-task',\n    loadChildren: () => import('./pages/own-task/own-task.module').then(m => m.OwnTaskPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'signup',\n    loadChildren: () => import('./pages/signup/signup.module').then(m => m.SignupPageModule),\n  },\n  {\n    path: 'confirm',\n    loadChildren: () => import('./pages/confirm/confirm.module').then(m => m.ConfirmPageModule)\n  },\n  {\n    path: 'login',\n    loadChildren: () => import('./pages/login/login.module').then(m => m.LoginPageModule)\n  },\n  {\n    path: 'task',\n    loadChildren: () => import('./pages/task/task.module').then(m => m.TaskPageModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'task-detail',\n    loadChildren: () => import('./pages/task-detail/task-detail.module').then(m => m.TaskDetailPageModule)\n  },\n  {\n    path: 'comment',\n    loadChildren: () => import('./pages/comment/comment.module').then(m => m.CommentPageModule)\n  }\n];\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      preloadingStrategy: PreloadAllModules,\n      scrollPositionRestoration: 'enabled',\n      anchorScrolling: 'enabled',\n      scrollOffset: [0, 64],\n    })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component } from '@angular/core';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar\n  ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    SharedModule\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { SessionService } from '../shared/service/session.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private readonly sessionService: SessionService, private router: Router) { }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    return this.sessionService.isAuthenticated().pipe(tap(loggedIn => {\n      if (!loggedIn) {\n        this.router.navigate(['/login'])\n      }\n    }))\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HomeService } from '../service/home-service.service';\nimport { SessionService } from '../../../shared/service/session.service';\nimport { v4 as uuid } from 'uuid';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\ninterface Attribute {\n  email: string,\n  email_verified: boolean,\n  sub: string,\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HomeLogicService {\n\n  constructor(\n    private homeService: HomeService,\n    private sessionService: SessionService,\n  ) { }\n\n\n  checkRegistrationUser(attribute: Attribute): Observable<any> {\n    return this.homeService.checkRegistrationUser(attribute.email);\n  }\n\n  fetchCurrentUser(): Observable<Attribute> {\n    return this.sessionService.fetchCurrentUser()\n      .pipe(map((res) => res.attributes));\n  }\n\n  createRoom(content): Observable<any> {\n    const requestContent = {\n      id: `${uuid()}`,\n      companyID: 'takuCloudCom',\n      name: content.nameItem,\n      description: content.descriptionItem,\n    };\n    return this.homeService.createRoom(requestContent);\n  }\n\n  createUser(formContent): Observable<any> {\n    const requestContent = {\n      id: formContent.get('id').value,\n      companyID: 'takuCloudCom',\n      email: formContent.get('targetEmail').value,\n      username: formContent.get('userName').value,\n      positionName: formContent.get('positionName').value,\n      tel: formContent.get('tel').value,\n      iconImage: formContent.get('iconImage').value,\n    };\n    console.log(`requestContent: ${requestContent}`);\n    return this.homeService.createUser(requestContent);\n  }\n\n  listRoom(companyId: string): Observable<any> {\n    return this.homeService.fetchRoomList(companyId).pipe(map((result) => result.items));\n  }\n\n  deleteRoomItem(roomId: string): Observable<any> {\n    return this.homeService.deleteRoomItem(roomId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AmplifyService, ModelRoomFilterInput, ListRoomsQuery, ModelUserFilterInput } from '../../../shared/service/amplify.service';\nimport { from, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HomeService {\n\n  constructor(private amplifyService: AmplifyService) { }\n\n  checkRegistrationUser(email: string): Observable<any> {\n    const filterContent: ModelUserFilterInput = {\n      email: {\n        eq: `${email}`\n      }\n    }\n    return from(this.amplifyService.ListUsers(filterContent));\n  }\n\n  createRoom(content): Observable<any> {\n    return from(this.amplifyService.CreateRoom(content));\n  }\n\n  createUser(content): Observable<any> {\n    return from(this.amplifyService.CreateUser(content))\n  }\n\n  fetchRoomList(companyId: string): Observable<ListRoomsQuery> {\n    const filterContent: ModelRoomFilterInput = {\n      companyID: {\n        eq: `${companyId}`\n      }\n    }\n    return from(this.amplifyService.ListRooms(filterContent));\n  }\n\n  deleteRoomItem(roomId: string): Observable<any> {\n    const requestContent = {\n      id: roomId\n    }\n    return from(this.amplifyService.DeleteRoom(requestContent));\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnQvbW9kYWwvYWRkLXJvb20tbW9kYWwvYWRkLXJvb20tbW9kYWwuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-room-modal',\n  templateUrl: './add-room-modal.component.html',\n  styleUrls: ['./add-room-modal.component.scss'],\n})\nexport class AddRoomModalComponent implements OnInit {\n\n  roomItemGroup = new FormGroup({\n    nameItem: new FormControl('', [Validators.required]),\n    descriptionItem: new FormControl(''),\n  });\n\n  constructor(\n    private modalCtrl: ModalController,\n  ) { }\n\n  get nameItem() {\n    return this.roomItemGroup.get('nameItem');\n  }\n\n  get descriptionItem() {\n    return this.roomItemGroup.get('descriptionItem');\n  }\n\n  ngOnInit() { }\n\n  dismissModal(): void {\n    this.modalCtrl.dismiss();\n  }\n\n  createItem(): void {\n    this.modalCtrl.dismiss(this.roomItemGroup.value);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnQvbW9kYWwvYWRkLXRhc2stbW9kYWwvYWRkLXRhc2stbW9kYWwuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-task-modal',\n  templateUrl: './add-task-modal.component.html',\n  styleUrls: ['./add-task-modal.component.scss'],\n})\nexport class AddTaskModalComponent implements OnInit {\n\n  taskItemForm = new FormGroup({\n    nameItem: new FormControl('', [Validators.required]),\n    descriptionItem: new FormControl(''),\n    scheduleDateItem: new FormControl(''),\n  });\n\n  room;\n  taskDetail;\n\n  minYear: string = '';\n  maxYear: string = '';\n  currentIsoString: string;\n\n  constructor(\n    private modalCtrl: ModalController,\n  ) { }\n\n  ngOnInit() {\n    if (this.taskDetail !== undefined) {\n      this.taskItemForm.patchValue({\n        nameItem: this.taskDetail.title,\n        descriptionItem: this.taskDetail.description,\n      });\n      this.room = this.taskDetail.room;\n    }\n    console.log(this.taskDetail);\n    const currentDate = new Date();\n    this.minYear = (currentDate.getFullYear()).toString();\n    this.maxYear = (currentDate.getFullYear() + 1).toString();\n    this.currentIsoString = currentDate.toISOString();\n    this.taskItemForm.patchValue({\n      scheduleDateItem: this.currentIsoString\n    })\n  }\n\n  dismissModal(): void {\n    this.modalCtrl.dismiss();\n  }\n\n  createTaskItem(): void {\n    this.modalCtrl.dismiss(this.taskItemForm.value);\n  }\n\n  changeDate() {\n    console.log('changeDate');\n  }\n\n}\n","export default \".item-paddind {\\n  margin-top: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90YWt1bmFrYWdhd2EvZGV2L2lvbmljL3dhbnRUby9zcmMvYXBwL3NoYXJlZC9jb21wb25lbnQvbW9kYWwvZGVsZXRlLXRhc2stbW9kYWwvZGVsZXRlLXRhc2stbW9kYWwuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnQvbW9kYWwvZGVsZXRlLXRhc2stbW9kYWwvZGVsZXRlLXRhc2stbW9kYWwuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBVUE7RUFDSSxlQUFBO0FDVEoiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50L21vZGFsL2RlbGV0ZS10YXNrLW1vZGFsL2RlbGV0ZS10YXNrLW1vZGFsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW9uLWNvbnRlbnQge1xuLy8gICAgIGRpdiB7XG4vLyAgICAgICAgIGhlaWdodDogMTAwJTtcbi8vICAgICAgICAgd2lkdGg6IDEwMCU7XG4vLyAgICAgICAgIC8vIGRpc3BsYXk6IGZsZXg7XG4vLyAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuLy8gICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuLy8gICAgIH1cbi8vIH1cblxuLml0ZW0tcGFkZGluZCB7XG4gICAgbWFyZ2luLXRvcDogNTAlO1xufSIsIi5pdGVtLXBhZGRpbmQge1xuICBtYXJnaW4tdG9wOiA1MCU7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-delete-task-modal',\n  templateUrl: './delete-task-modal.component.html',\n  styleUrls: ['./delete-task-modal.component.scss'],\n})\nexport class DeleteTaskModalComponent implements OnInit {\n  task;\n\n  constructor(\n    private modalCtrl: ModalController,\n  ) { }\n\n  ngOnInit() { }\n\n  onCancel() {\n    this.modalCtrl.dismiss();\n  }\n\n\n  deleteTargetTask(taskItem) {\n    this.modalCtrl.dismiss(taskItem);\n  }\n\n}\n","export default \"@charset \\\"UTF-8\\\";\\n.card {\\n  margin: 0 auto;\\n}\\n.card .header {\\n  height: 200px;\\n}\\n.card .header .avatar {\\n  width: 120px;\\n  height: 120px;\\n  position: relative;\\n  margin: 0 auto;\\n}\\n.card .header .avatar img {\\n  display: block;\\n  border-radius: 50%;\\n  position: absolute;\\n  bottom: calc(-1*(80px + 4px));\\n  border: 3px solid #4dd0e1;\\n}\\n.card-body {\\n  padding: 10px;\\n  height: calc(100vh – (200px + 56px));\\n  overflow: hidden;\\n}\\n.card-body .user-meta {\\n  padding-top: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudC9tb2RhbC9lZGl0LXByb2ZpbGUtbW9kYWwvZWRpdC1wcm9maWxlLW1vZGFsLmNvbXBvbmVudC5zY3NzIiwiL1VzZXJzL3Rha3VuYWthZ2F3YS9kZXYvaW9uaWMvd2FudFRvL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudC9tb2RhbC9lZGl0LXByb2ZpbGUtbW9kYWwvZWRpdC1wcm9maWxlLW1vZGFsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQjtBQ0FoQjtFQUNJLGNBQUE7QURFSjtBQ0FJO0VBQ0ksYUFBQTtBREVSO0FDQVE7RUFDSSxZQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0EsY0FBQTtBREVaO0FDQVk7RUFDSSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtFQUNBLDZCQUFBO0VBQ0EseUJBQUE7QURFaEI7QUNJQTtFQUNJLGFBQUE7RUFDQSxvQ0FBQTtFQUNBLGdCQUFBO0FEREo7QUNHSTtFQUNJLGlCQUFBO0FERFIiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50L21vZGFsL2VkaXQtcHJvZmlsZS1tb2RhbC9lZGl0LXByb2ZpbGUtbW9kYWwuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG4uY2FyZCB7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuLmNhcmQgLmhlYWRlciB7XG4gIGhlaWdodDogMjAwcHg7XG59XG4uY2FyZCAuaGVhZGVyIC5hdmF0YXIge1xuICB3aWR0aDogMTIwcHg7XG4gIGhlaWdodDogMTIwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG4uY2FyZCAuaGVhZGVyIC5hdmF0YXIgaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IGNhbGMoLTEqKDgwcHggKyA0cHgpKTtcbiAgYm9yZGVyOiAzcHggc29saWQgIzRkZDBlMTtcbn1cblxuLmNhcmQtYm9keSB7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGhlaWdodDogY2FsYygxMDB2aCDigJMgKDIwMHB4ICsgNTZweCkpO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLmNhcmQtYm9keSAudXNlci1tZXRhIHtcbiAgcGFkZGluZy10b3A6IDQwcHg7XG59IiwiLmNhcmQge1xuICAgIG1hcmdpbjogMCBhdXRvO1xuXG4gICAgLmhlYWRlciB7XG4gICAgICAgIGhlaWdodDogMjAwcHg7XG5cbiAgICAgICAgLmF2YXRhciB7XG4gICAgICAgICAgICB3aWR0aDogMTIwcHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDEyMHB4O1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XG5cbiAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICBib3R0b206IGNhbGMoLTEqKDgwcHggKyA0cHgpKTtcbiAgICAgICAgICAgICAgICBib3JkZXI6IDNweCBzb2xpZCAjNGRkMGUxO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4uY2FyZC1ib2R5IHtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGhlaWdodDogY2FsYygxMDB2aCDigJMgKDIwMHB4ICsgNTZweCkpO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgICAudXNlci1tZXRhIHtcbiAgICAgICAgcGFkZGluZy10b3A6IDQwcHg7XG4gICAgfVxufSJdfQ== */\";","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HomeLogicService } from '../../../../pages/home/logic/home-logic.service';\n\n@Component({\n  selector: 'app-edit-profile-modal',\n  templateUrl: './edit-profile-modal.component.html',\n  styleUrls: ['./edit-profile-modal.component.scss'],\n})\nexport class EditProfileModalComponent implements OnInit {\n  editProfileForm = new FormGroup({\n    id: new FormControl(''),\n    iconImage: new FormControl(''),\n    userName: new FormControl('', [Validators.required]),\n    positionName: new FormControl(''),\n    targetEmail: new FormControl('', [Validators.required, Validators.email]),\n    tel: new FormControl(''),\n  });\n  @Input() status: string;\n  @Input() email: string;\n  @Input() userId: string;\n  title: string;\n\n  @Input() user;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private logic: HomeLogicService,\n  ) { }\n\n  ngOnInit() {\n    if (this.status === 'new') {\n      this.editProfileForm.patchValue({\n        id: this.userId,\n        targetEmail: this.email\n      });\n      this.title = 'プロフィールの作成';\n      console.log(this.editProfileForm.value);\n    } else {\n      this.editProfileForm.patchValue({\n        id: this.user.id,\n        targetEmail: this.user.email,\n        userName: this.user.username,\n        positionName: this.user.positionName,\n        tel: this.user.tel,\n      })\n      this.title = 'プロフィールの編集';\n    }\n  }\n\n  saveProfile() {\n    this.logic.createUser(this.editProfileForm).subscribe(() => {\n      this.modalCtrl.dismiss();\n    })\n  }\n\n  dismissModal() {\n    this.modalCtrl.dismiss();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedLogicService {\n\n  constructor(public modalCtrl: ModalController) { }\n}\n","/* tslint:disable */\n/* eslint-disable */\n//  This file was automatically generated and should not be edited.\nimport { Injectable } from \"@angular/core\";\nimport API, { graphqlOperation } from \"@aws-amplify/api\";\nimport { GraphQLResult } from \"@aws-amplify/api/lib/types\";\nimport { Observable } from \"zen-observable-ts\";\n\nexport type CreateCompanyInput = {\n  id?: string | null;\n  name: string;\n  domain: string;\n};\n\nexport type ModelCompanyConditionInput = {\n  name?: ModelStringInput | null;\n  domain?: ModelStringInput | null;\n  and?: Array<ModelCompanyConditionInput | null> | null;\n  or?: Array<ModelCompanyConditionInput | null> | null;\n  not?: ModelCompanyConditionInput | null;\n};\n\nexport type ModelStringInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array<string | null> | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport enum ModelAttributeTypes {\n  binary = \"binary\",\n  binarySet = \"binarySet\",\n  bool = \"bool\",\n  list = \"list\",\n  map = \"map\",\n  number = \"number\",\n  numberSet = \"numberSet\",\n  string = \"string\",\n  stringSet = \"stringSet\",\n  _null = \"_null\"\n}\n\nexport type ModelSizeInput = {\n  ne?: number | null;\n  eq?: number | null;\n  le?: number | null;\n  lt?: number | null;\n  ge?: number | null;\n  gt?: number | null;\n  between?: Array<number | null> | null;\n};\n\nexport type UpdateCompanyInput = {\n  id: string;\n  name?: string | null;\n  domain?: string | null;\n};\n\nexport type DeleteCompanyInput = {\n  id?: string | null;\n};\n\nexport type CreateRoomInput = {\n  id?: string | null;\n  companyID: string;\n  name: string;\n  description: string;\n};\n\nexport type ModelRoomConditionInput = {\n  companyID?: ModelIDInput | null;\n  name?: ModelStringInput | null;\n  description?: ModelStringInput | null;\n  and?: Array<ModelRoomConditionInput | null> | null;\n  or?: Array<ModelRoomConditionInput | null> | null;\n  not?: ModelRoomConditionInput | null;\n};\n\nexport type ModelIDInput = {\n  ne?: string | null;\n  eq?: string | null;\n  le?: string | null;\n  lt?: string | null;\n  ge?: string | null;\n  gt?: string | null;\n  contains?: string | null;\n  notContains?: string | null;\n  between?: Array<string | null> | null;\n  beginsWith?: string | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n  size?: ModelSizeInput | null;\n};\n\nexport type UpdateRoomInput = {\n  id: string;\n  companyID?: string | null;\n  name?: string | null;\n  description?: string | null;\n};\n\nexport type DeleteRoomInput = {\n  id?: string | null;\n};\n\nexport type CreateTaskInput = {\n  id?: string | null;\n  authorID: string;\n  roomID: string;\n  title: string;\n  description?: string | null;\n  scheduleDate?: string | null;\n  priority?: number | null;\n  status?: number | null;\n  createdAt?: string | null;\n};\n\nexport type ModelTaskConditionInput = {\n  authorID?: ModelIDInput | null;\n  roomID?: ModelIDInput | null;\n  title?: ModelStringInput | null;\n  description?: ModelStringInput | null;\n  scheduleDate?: ModelStringInput | null;\n  priority?: ModelIntInput | null;\n  status?: ModelIntInput | null;\n  createdAt?: ModelStringInput | null;\n  and?: Array<ModelTaskConditionInput | null> | null;\n  or?: Array<ModelTaskConditionInput | null> | null;\n  not?: ModelTaskConditionInput | null;\n};\n\nexport type ModelIntInput = {\n  ne?: number | null;\n  eq?: number | null;\n  le?: number | null;\n  lt?: number | null;\n  ge?: number | null;\n  gt?: number | null;\n  between?: Array<number | null> | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n};\n\nexport type UpdateTaskInput = {\n  id: string;\n  authorID?: string | null;\n  roomID?: string | null;\n  title?: string | null;\n  description?: string | null;\n  scheduleDate?: string | null;\n  priority?: number | null;\n  status?: number | null;\n  createdAt?: string | null;\n};\n\nexport type DeleteTaskInput = {\n  id?: string | null;\n};\n\nexport type CreateMessageInput = {\n  id?: string | null;\n  taskID: string;\n  content: string;\n  createdAt?: string | null;\n  isSent?: boolean | null;\n};\n\nexport type ModelMessageConditionInput = {\n  taskID?: ModelIDInput | null;\n  content?: ModelStringInput | null;\n  createdAt?: ModelStringInput | null;\n  isSent?: ModelBooleanInput | null;\n  and?: Array<ModelMessageConditionInput | null> | null;\n  or?: Array<ModelMessageConditionInput | null> | null;\n  not?: ModelMessageConditionInput | null;\n};\n\nexport type ModelBooleanInput = {\n  ne?: boolean | null;\n  eq?: boolean | null;\n  attributeExists?: boolean | null;\n  attributeType?: ModelAttributeTypes | null;\n};\n\nexport type UpdateMessageInput = {\n  id: string;\n  taskID?: string | null;\n  content?: string | null;\n  createdAt?: string | null;\n  isSent?: boolean | null;\n};\n\nexport type DeleteMessageInput = {\n  id?: string | null;\n};\n\nexport type CreateUserInput = {\n  id?: string | null;\n  email: string;\n  companyID: string;\n  username: string;\n  registered?: boolean | null;\n  authority?: string | null;\n};\n\nexport type ModelUserConditionInput = {\n  email?: ModelStringInput | null;\n  companyID?: ModelIDInput | null;\n  username?: ModelStringInput | null;\n  registered?: ModelBooleanInput | null;\n  authority?: ModelStringInput | null;\n  and?: Array<ModelUserConditionInput | null> | null;\n  or?: Array<ModelUserConditionInput | null> | null;\n  not?: ModelUserConditionInput | null;\n};\n\nexport type UpdateUserInput = {\n  id: string;\n  email?: string | null;\n  companyID?: string | null;\n  username?: string | null;\n  registered?: boolean | null;\n  authority?: string | null;\n};\n\nexport type DeleteUserInput = {\n  id?: string | null;\n};\n\nexport type ModelCompanyFilterInput = {\n  id?: ModelIDInput | null;\n  name?: ModelStringInput | null;\n  domain?: ModelStringInput | null;\n  and?: Array<ModelCompanyFilterInput | null> | null;\n  or?: Array<ModelCompanyFilterInput | null> | null;\n  not?: ModelCompanyFilterInput | null;\n};\n\nexport type ModelRoomFilterInput = {\n  id?: ModelIDInput | null;\n  companyID?: ModelIDInput | null;\n  name?: ModelStringInput | null;\n  description?: ModelStringInput | null;\n  and?: Array<ModelRoomFilterInput | null> | null;\n  or?: Array<ModelRoomFilterInput | null> | null;\n  not?: ModelRoomFilterInput | null;\n};\n\nexport type ModelTaskFilterInput = {\n  id?: ModelIDInput | null;\n  authorID?: ModelIDInput | null;\n  roomID?: ModelIDInput | null;\n  title?: ModelStringInput | null;\n  description?: ModelStringInput | null;\n  scheduleDate?: ModelStringInput | null;\n  priority?: ModelIntInput | null;\n  status?: ModelIntInput | null;\n  createdAt?: ModelStringInput | null;\n  and?: Array<ModelTaskFilterInput | null> | null;\n  or?: Array<ModelTaskFilterInput | null> | null;\n  not?: ModelTaskFilterInput | null;\n};\n\nexport type ModelMessageFilterInput = {\n  id?: ModelIDInput | null;\n  taskID?: ModelIDInput | null;\n  content?: ModelStringInput | null;\n  createdAt?: ModelStringInput | null;\n  isSent?: ModelBooleanInput | null;\n  and?: Array<ModelMessageFilterInput | null> | null;\n  or?: Array<ModelMessageFilterInput | null> | null;\n  not?: ModelMessageFilterInput | null;\n};\n\nexport type ModelUserFilterInput = {\n  id?: ModelIDInput | null;\n  email?: ModelStringInput | null;\n  companyID?: ModelIDInput | null;\n  username?: ModelStringInput | null;\n  registered?: ModelBooleanInput | null;\n  authority?: ModelStringInput | null;\n  and?: Array<ModelUserFilterInput | null> | null;\n  or?: Array<ModelUserFilterInput | null> | null;\n  not?: ModelUserFilterInput | null;\n};\n\nexport type CreateCompanyMutation = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array<{\n      __typename: \"Room\";\n      id: string;\n      companyID: string;\n      name: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  members: {\n    __typename: \"ModelUserConnection\";\n    items: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateCompanyMutation = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array<{\n      __typename: \"Room\";\n      id: string;\n      companyID: string;\n      name: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  members: {\n    __typename: \"ModelUserConnection\";\n    items: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteCompanyMutation = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array<{\n      __typename: \"Room\";\n      id: string;\n      companyID: string;\n      name: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  members: {\n    __typename: \"ModelUserConnection\";\n    items: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreateRoomMutation = {\n  __typename: \"Room\";\n  id: string;\n  companyID: string;\n  name: string;\n  description: string;\n  members: Array<{\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    members: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array<{\n      __typename: \"Task\";\n      id: string;\n      authorID: string;\n      roomID: string;\n      title: string;\n      description: string | null;\n      scheduleDate: string | null;\n      priority: number | null;\n      status: number | null;\n      createdAt: string | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateRoomMutation = {\n  __typename: \"Room\";\n  id: string;\n  companyID: string;\n  name: string;\n  description: string;\n  members: Array<{\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    members: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array<{\n      __typename: \"Task\";\n      id: string;\n      authorID: string;\n      roomID: string;\n      title: string;\n      description: string | null;\n      scheduleDate: string | null;\n      priority: number | null;\n      status: number | null;\n      createdAt: string | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteRoomMutation = {\n  __typename: \"Room\";\n  id: string;\n  companyID: string;\n  name: string;\n  description: string;\n  members: Array<{\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    members: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array<{\n      __typename: \"Task\";\n      id: string;\n      authorID: string;\n      roomID: string;\n      title: string;\n      description: string | null;\n      scheduleDate: string | null;\n      priority: number | null;\n      status: number | null;\n      createdAt: string | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type CreateTaskMutation = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  title: string;\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  members: Array<{\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    companyID: string;\n    name: string;\n    description: string;\n    members: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array<{\n      __typename: \"Message\";\n      id: string;\n      taskID: string;\n      content: string;\n      createdAt: string | null;\n      isSent: boolean | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  updatedAt: string;\n};\n\nexport type UpdateTaskMutation = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  title: string;\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  members: Array<{\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    companyID: string;\n    name: string;\n    description: string;\n    members: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array<{\n      __typename: \"Message\";\n      id: string;\n      taskID: string;\n      content: string;\n      createdAt: string | null;\n      isSent: boolean | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  updatedAt: string;\n};\n\nexport type DeleteTaskMutation = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  title: string;\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  members: Array<{\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    companyID: string;\n    name: string;\n    description: string;\n    members: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array<{\n      __typename: \"Message\";\n      id: string;\n      taskID: string;\n      content: string;\n      createdAt: string | null;\n      isSent: boolean | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  updatedAt: string;\n};\n\nexport type CreateMessageMutation = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  author: {\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    title: string;\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    members: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      companyID: string;\n      name: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type UpdateMessageMutation = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  author: {\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    title: string;\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    members: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      companyID: string;\n      name: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type DeleteMessageMutation = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  author: {\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    title: string;\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    members: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      companyID: string;\n      name: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type CreateUserMutation = {\n  __typename: \"User\";\n  id: string;\n  email: string;\n  companyID: string;\n  username: string;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    members: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type UpdateUserMutation = {\n  __typename: \"User\";\n  id: string;\n  email: string;\n  companyID: string;\n  username: string;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    members: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type DeleteUserMutation = {\n  __typename: \"User\";\n  id: string;\n  email: string;\n  companyID: string;\n  username: string;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    members: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type GetCompanyQuery = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array<{\n      __typename: \"Room\";\n      id: string;\n      companyID: string;\n      name: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  members: {\n    __typename: \"ModelUserConnection\";\n    items: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListCompanysQuery = {\n  __typename: \"ModelCompanyConnection\";\n  items: Array<{\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    members: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  nextToken: string | null;\n};\n\nexport type GetRoomQuery = {\n  __typename: \"Room\";\n  id: string;\n  companyID: string;\n  name: string;\n  description: string;\n  members: Array<{\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    members: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array<{\n      __typename: \"Task\";\n      id: string;\n      authorID: string;\n      roomID: string;\n      title: string;\n      description: string | null;\n      scheduleDate: string | null;\n      priority: number | null;\n      status: number | null;\n      createdAt: string | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListRoomsQuery = {\n  __typename: \"ModelRoomConnection\";\n  items: Array<{\n    __typename: \"Room\";\n    id: string;\n    companyID: string;\n    name: string;\n    description: string;\n    members: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  nextToken: string | null;\n};\n\nexport type GetTaskQuery = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  title: string;\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  members: Array<{\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    companyID: string;\n    name: string;\n    description: string;\n    members: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array<{\n      __typename: \"Message\";\n      id: string;\n      taskID: string;\n      content: string;\n      createdAt: string | null;\n      isSent: boolean | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  updatedAt: string;\n};\n\nexport type ListTasksQuery = {\n  __typename: \"ModelTaskConnection\";\n  items: Array<{\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    title: string;\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    members: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      companyID: string;\n      name: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  } | null> | null;\n  nextToken: string | null;\n};\n\nexport type GetMessageQuery = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  author: {\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    title: string;\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    members: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      companyID: string;\n      name: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type ListMessagesQuery = {\n  __typename: \"ModelMessageConnection\";\n  items: Array<{\n    __typename: \"Message\";\n    id: string;\n    taskID: string;\n    author: {\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null;\n    content: string;\n    createdAt: string | null;\n    isSent: boolean | null;\n    task: {\n      __typename: \"Task\";\n      id: string;\n      authorID: string;\n      roomID: string;\n      title: string;\n      description: string | null;\n      scheduleDate: string | null;\n      priority: number | null;\n      status: number | null;\n      createdAt: string | null;\n      updatedAt: string;\n    };\n    updatedAt: string;\n  } | null> | null;\n  nextToken: string | null;\n};\n\nexport type GetUserQuery = {\n  __typename: \"User\";\n  id: string;\n  email: string;\n  companyID: string;\n  username: string;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    members: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type ListUsersQuery = {\n  __typename: \"ModelUserConnection\";\n  items: Array<{\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  nextToken: string | null;\n};\n\nexport type OnCreateCompanySubscription = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array<{\n      __typename: \"Room\";\n      id: string;\n      companyID: string;\n      name: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  members: {\n    __typename: \"ModelUserConnection\";\n    items: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateCompanySubscription = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array<{\n      __typename: \"Room\";\n      id: string;\n      companyID: string;\n      name: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  members: {\n    __typename: \"ModelUserConnection\";\n    items: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteCompanySubscription = {\n  __typename: \"Company\";\n  id: string;\n  name: string;\n  domain: string;\n  room: {\n    __typename: \"ModelRoomConnection\";\n    items: Array<{\n      __typename: \"Room\";\n      id: string;\n      companyID: string;\n      name: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  members: {\n    __typename: \"ModelUserConnection\";\n    items: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreateRoomSubscription = {\n  __typename: \"Room\";\n  id: string;\n  companyID: string;\n  name: string;\n  description: string;\n  members: Array<{\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    members: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array<{\n      __typename: \"Task\";\n      id: string;\n      authorID: string;\n      roomID: string;\n      title: string;\n      description: string | null;\n      scheduleDate: string | null;\n      priority: number | null;\n      status: number | null;\n      createdAt: string | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateRoomSubscription = {\n  __typename: \"Room\";\n  id: string;\n  companyID: string;\n  name: string;\n  description: string;\n  members: Array<{\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    members: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array<{\n      __typename: \"Task\";\n      id: string;\n      authorID: string;\n      roomID: string;\n      title: string;\n      description: string | null;\n      scheduleDate: string | null;\n      priority: number | null;\n      status: number | null;\n      createdAt: string | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteRoomSubscription = {\n  __typename: \"Room\";\n  id: string;\n  companyID: string;\n  name: string;\n  description: string;\n  members: Array<{\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    members: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  tasks: {\n    __typename: \"ModelTaskConnection\";\n    items: Array<{\n      __typename: \"Task\";\n      id: string;\n      authorID: string;\n      roomID: string;\n      title: string;\n      description: string | null;\n      scheduleDate: string | null;\n      priority: number | null;\n      status: number | null;\n      createdAt: string | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnCreateTaskSubscription = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  title: string;\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  members: Array<{\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    companyID: string;\n    name: string;\n    description: string;\n    members: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array<{\n      __typename: \"Message\";\n      id: string;\n      taskID: string;\n      content: string;\n      createdAt: string | null;\n      isSent: boolean | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  updatedAt: string;\n};\n\nexport type OnUpdateTaskSubscription = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  title: string;\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  members: Array<{\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    companyID: string;\n    name: string;\n    description: string;\n    members: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array<{\n      __typename: \"Message\";\n      id: string;\n      taskID: string;\n      content: string;\n      createdAt: string | null;\n      isSent: boolean | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  updatedAt: string;\n};\n\nexport type OnDeleteTaskSubscription = {\n  __typename: \"Task\";\n  id: string;\n  authorID: string;\n  roomID: string;\n  title: string;\n  description: string | null;\n  scheduleDate: string | null;\n  priority: number | null;\n  status: number | null;\n  createdAt: string | null;\n  members: Array<{\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null> | null;\n  room: {\n    __typename: \"Room\";\n    id: string;\n    companyID: string;\n    name: string;\n    description: string;\n    members: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    tasks: {\n      __typename: \"ModelTaskConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  messages: {\n    __typename: \"ModelMessageConnection\";\n    items: Array<{\n      __typename: \"Message\";\n      id: string;\n      taskID: string;\n      content: string;\n      createdAt: string | null;\n      isSent: boolean | null;\n      updatedAt: string;\n    } | null> | null;\n    nextToken: string | null;\n  } | null;\n  updatedAt: string;\n};\n\nexport type OnCreateMessageSubscription = {\n  _isScalar: 'string',\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  author: {\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    title: string;\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    members: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      companyID: string;\n      name: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type OnUpdateMessageSubscription = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  author: {\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    title: string;\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    members: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      companyID: string;\n      name: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type OnDeleteMessageSubscription = {\n  __typename: \"Message\";\n  id: string;\n  taskID: string;\n  author: {\n    __typename: \"User\";\n    id: string;\n    email: string;\n    companyID: string;\n    username: string;\n    registered: boolean | null;\n    authority: string | null;\n    company: {\n      __typename: \"Company\";\n      id: string;\n      name: string;\n      domain: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    createdAt: string;\n    updatedAt: string;\n  } | null;\n  content: string;\n  createdAt: string | null;\n  isSent: boolean | null;\n  task: {\n    __typename: \"Task\";\n    id: string;\n    authorID: string;\n    roomID: string;\n    title: string;\n    description: string | null;\n    scheduleDate: string | null;\n    priority: number | null;\n    status: number | null;\n    createdAt: string | null;\n    members: Array<{\n      __typename: \"User\";\n      id: string;\n      email: string;\n      companyID: string;\n      username: string;\n      registered: boolean | null;\n      authority: string | null;\n      createdAt: string;\n      updatedAt: string;\n    } | null> | null;\n    room: {\n      __typename: \"Room\";\n      id: string;\n      companyID: string;\n      name: string;\n      description: string;\n      createdAt: string;\n      updatedAt: string;\n    };\n    messages: {\n      __typename: \"ModelMessageConnection\";\n      nextToken: string | null;\n    } | null;\n    updatedAt: string;\n  };\n  updatedAt: string;\n};\n\nexport type OnCreateUserSubscription = {\n  __typename: \"User\";\n  id: string;\n  email: string;\n  companyID: string;\n  username: string;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    members: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnUpdateUserSubscription = {\n  __typename: \"User\";\n  id: string;\n  email: string;\n  companyID: string;\n  username: string;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    members: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type OnDeleteUserSubscription = {\n  __typename: \"User\";\n  id: string;\n  email: string;\n  companyID: string;\n  username: string;\n  registered: boolean | null;\n  authority: string | null;\n  company: {\n    __typename: \"Company\";\n    id: string;\n    name: string;\n    domain: string;\n    room: {\n      __typename: \"ModelRoomConnection\";\n      nextToken: string | null;\n    } | null;\n    members: {\n      __typename: \"ModelUserConnection\";\n      nextToken: string | null;\n    } | null;\n    createdAt: string;\n    updatedAt: string;\n  };\n  createdAt: string;\n  updatedAt: string;\n};\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AmplifyService {\n  async CreateCompany(\n    input: CreateCompanyInput,\n    condition?: ModelCompanyConditionInput\n  ): Promise<CreateCompanyMutation> {\n    const statement = `mutation CreateCompany($input: CreateCompanyInput!, $condition: ModelCompanyConditionInput) {\n        createCompany(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <CreateCompanyMutation>response.data.createCompany;\n  }\n  async UpdateCompany(\n    input: UpdateCompanyInput,\n    condition?: ModelCompanyConditionInput\n  ): Promise<UpdateCompanyMutation> {\n    const statement = `mutation UpdateCompany($input: UpdateCompanyInput!, $condition: ModelCompanyConditionInput) {\n        updateCompany(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <UpdateCompanyMutation>response.data.updateCompany;\n  }\n  async DeleteCompany(\n    input: DeleteCompanyInput,\n    condition?: ModelCompanyConditionInput\n  ): Promise<DeleteCompanyMutation> {\n    const statement = `mutation DeleteCompany($input: DeleteCompanyInput!, $condition: ModelCompanyConditionInput) {\n        deleteCompany(input: $input, condition: $condition) {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <DeleteCompanyMutation>response.data.deleteCompany;\n  }\n  async CreateRoom(\n    input: CreateRoomInput,\n    condition?: ModelRoomConditionInput\n  ): Promise<CreateRoomMutation> {\n    const statement = `mutation CreateRoom($input: CreateRoomInput!, $condition: ModelRoomConditionInput) {\n        createRoom(input: $input, condition: $condition) {\n          __typename\n          id\n          companyID\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <CreateRoomMutation>response.data.createRoom;\n  }\n  async UpdateRoom(\n    input: UpdateRoomInput,\n    condition?: ModelRoomConditionInput\n  ): Promise<UpdateRoomMutation> {\n    const statement = `mutation UpdateRoom($input: UpdateRoomInput!, $condition: ModelRoomConditionInput) {\n        updateRoom(input: $input, condition: $condition) {\n          __typename\n          id\n          companyID\n          name\n          description\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          tasks {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <UpdateRoomMutation>response.data.updateRoom;\n  }\n  async DeleteRoom(\n    input: DeleteRoomInput,\n    condition?: ModelRoomConditionInput\n  ): Promise<DeleteRoomMutation> {\n    const statement = `mutation DeleteRoom($input: DeleteRoomInput!, $condition: ModelRoomConditionInput) {\n        deleteRoom(input: $input, condition: $condition) {\n          __typename\n          id\n          companyID\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <DeleteRoomMutation>response.data.deleteRoom;\n  }\n  async CreateTask(\n    input: CreateTaskInput,\n    condition?: ModelTaskConditionInput\n  ): Promise<CreateTaskMutation> {\n    const statement = `mutation CreateTask($input: CreateTaskInput!, $condition: ModelTaskConditionInput) {\n        createTask(input: $input, condition: $condition) {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <CreateTaskMutation>response.data.createTask;\n  }\n  async UpdateTask(\n    input: UpdateTaskInput,\n    condition?: ModelTaskConditionInput\n  ): Promise<UpdateTaskMutation> {\n    const statement = `mutation UpdateTask($input: UpdateTaskInput!, $condition: ModelTaskConditionInput) {\n        updateTask(input: $input, condition: $condition) {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <UpdateTaskMutation>response.data.updateTask;\n  }\n  async DeleteTask(\n    input: DeleteTaskInput,\n    condition?: ModelTaskConditionInput\n  ): Promise<DeleteTaskMutation> {\n    const statement = `mutation DeleteTask($input: DeleteTaskInput!, $condition: ModelTaskConditionInput) {\n        deleteTask(input: $input, condition: $condition) {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <DeleteTaskMutation>response.data.deleteTask;\n  }\n  async CreateMessage(\n    input: CreateMessageInput,\n    condition?: ModelMessageConditionInput\n  ): Promise<CreateMessageMutation> {\n    const statement = `mutation CreateMessage($input: CreateMessageInput!, $condition: ModelMessageConditionInput) {\n        createMessage(input: $input, condition: $condition) {\n          __typename\n          id\n          taskID\n          content\n          createdAt\n          isSent\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <CreateMessageMutation>response.data.createMessage;\n  }\n  async UpdateMessage(\n    input: UpdateMessageInput,\n    condition?: ModelMessageConditionInput\n  ): Promise<UpdateMessageMutation> {\n    const statement = `mutation UpdateMessage($input: UpdateMessageInput!, $condition: ModelMessageConditionInput) {\n        updateMessage(input: $input, condition: $condition) {\n          __typename\n          id\n          taskID\n          author {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          content\n          createdAt\n          isSent\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            room {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <UpdateMessageMutation>response.data.updateMessage;\n  }\n  async DeleteMessage(\n    input: DeleteMessageInput,\n    condition?: ModelMessageConditionInput\n  ): Promise<DeleteMessageMutation> {\n    const statement = `mutation DeleteMessage($input: DeleteMessageInput!, $condition: ModelMessageConditionInput) {\n        deleteMessage(input: $input, condition: $condition) {\n          __typename\n          id\n          taskID\n          author {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          content\n          createdAt\n          isSent\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            room {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <DeleteMessageMutation>response.data.deleteMessage;\n  }\n\n  async CreateUser(\n    input: CreateUserInput,\n    condition?: ModelUserConditionInput\n  ): Promise<CreateUserMutation> {\n    const statement = `mutation CreateUser($input: CreateUserInput!, $condition: ModelUserConditionInput) {\n        createUser(input: $input, condition: $condition) {\n          __typename\n          id\n          email\n          companyID\n          username\n          tel\n          positionName\n          iconImage\n          registered\n          authority\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <CreateUserMutation>response.data.createUser;\n  }\n\n  async UpdateUser(\n    input: UpdateUserInput,\n    condition?: ModelUserConditionInput\n  ): Promise<UpdateUserMutation> {\n    const statement = `mutation UpdateUser($input: UpdateUserInput!, $condition: ModelUserConditionInput) {\n        updateUser(input: $input, condition: $condition) {\n          __typename\n          id\n          email\n          companyID\n          username\n          registered\n          authority\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <UpdateUserMutation>response.data.updateUser;\n  }\n  async DeleteUser(\n    input: DeleteUserInput,\n    condition?: ModelUserConditionInput\n  ): Promise<DeleteUserMutation> {\n    const statement = `mutation DeleteUser($input: DeleteUserInput!, $condition: ModelUserConditionInput) {\n        deleteUser(input: $input, condition: $condition) {\n          __typename\n          id\n          email\n          companyID\n          username\n          registered\n          authority\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      input\n    };\n    if (condition) {\n      gqlAPIServiceArguments.condition = condition;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <DeleteUserMutation>response.data.deleteUser;\n  }\n  async GetCompany(id: string): Promise<GetCompanyQuery> {\n    const statement = `query GetCompany($id: ID!) {\n        getCompany(id: $id) {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <GetCompanyQuery>response.data.getCompany;\n  }\n  async ListCompanys(\n    filter?: ModelCompanyFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise<ListCompanysQuery> {\n    const statement = `query ListCompanys($filter: ModelCompanyFilterInput, $limit: Int, $nextToken: String) {\n        listCompanys(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <ListCompanysQuery>response.data.listCompanys;\n  }\n  async GetRoom(id: string): Promise<GetRoomQuery> {\n    const statement = `query GetRoom($id: ID!) {\n        getRoom(id: $id) {\n          __typename\n          id\n          companyID\n          name\n          description\n          createdAt\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <GetRoomQuery>response.data.getRoom;\n  }\n  async ListRooms(\n    filter?: ModelRoomFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise<ListRoomsQuery> {\n    const statement = `query ListRooms($filter: ModelRoomFilterInput, $limit: Int, $nextToken: String) {\n        listRooms(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            companyID\n            name\n            description\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <ListRoomsQuery>response.data.listRooms;\n  }\n  async GetTask(id: string): Promise<GetTaskQuery> {\n    const statement = `query GetTask($id: ID!) {\n        getTask(id: $id) {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          room {\n            __typename\n            id\n            companyID\n            name\n            description\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              content\n              createdAt\n              isSent\n              updatedAt\n            }\n            nextToken\n          }\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <GetTaskQuery>response.data.getTask;\n  }\n  async ListTasks(\n    filter?: ModelTaskFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise<ListTasksQuery> {\n    const statement = `query ListTasks($filter: ModelTaskFilterInput, $limit: Int, $nextToken: String) {\n        listTasks(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <ListTasksQuery>response.data.listTasks;\n  }\n  async GetMessage(id: string): Promise<GetMessageQuery> {\n    const statement = `query GetMessage($id: ID!) {\n        getMessage(id: $id) {\n          __typename\n          id\n          taskID\n          author {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          content\n          createdAt\n          isSent\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            room {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <GetMessageQuery>response.data.getMessage;\n  }\n  async ListMessages(\n    filter?: ModelMessageFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise<ListMessagesQuery> {\n    const statement = `query ListMessages($filter: ModelMessageFilterInput, $limit: Int, $nextToken: String) {\n        listMessages(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            taskID\n            author {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            content\n            createdAt\n            isSent\n            task {\n              __typename\n              id\n              authorID\n              roomID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <ListMessagesQuery>response.data.listMessages;\n  }\n  async GetUser(id: string): Promise<GetUserQuery> {\n    const statement = `query GetUser($id: ID!) {\n        getUser(id: $id) {\n          __typename\n          id\n          email\n          companyID\n          username\n          registered\n          authority\n          createdAt\n          updatedAt\n          positionName\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {\n      id\n    };\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <GetUserQuery>response.data.getUser;\n  }\n  async ListUsers(\n    filter?: ModelUserFilterInput,\n    limit?: number,\n    nextToken?: string\n  ): Promise<ListUsersQuery> {\n    const statement = `query ListUsers($filter: ModelUserFilterInput, $limit: Int, $nextToken: String) {\n        listUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n          __typename\n          items {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          nextToken\n        }\n      }`;\n    const gqlAPIServiceArguments: any = {};\n    if (filter) {\n      gqlAPIServiceArguments.filter = filter;\n    }\n    if (limit) {\n      gqlAPIServiceArguments.limit = limit;\n    }\n    if (nextToken) {\n      gqlAPIServiceArguments.nextToken = nextToken;\n    }\n    const response = (await API.graphql(\n      graphqlOperation(statement, gqlAPIServiceArguments)\n    )) as any;\n    return <ListUsersQuery>response.data.listUsers;\n  }\n  OnCreateCompanyListener: Observable<\n    OnCreateCompanySubscription\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateCompany {\n        onCreateCompany {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnCreateCompanySubscription>;\n\n  OnUpdateCompanyListener: Observable<\n    OnUpdateCompanySubscription\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateCompany {\n        onUpdateCompany {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnUpdateCompanySubscription>;\n\n  OnDeleteCompanyListener: Observable<\n    OnDeleteCompanySubscription\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteCompany {\n        onDeleteCompany {\n          __typename\n          id\n          name\n          domain\n          room {\n            __typename\n            items {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          members {\n            __typename\n            items {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnDeleteCompanySubscription>;\n\n  OnCreateRoomListener: Observable<OnCreateRoomSubscription> = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateRoom {\n        onCreateRoom {\n          __typename\n          id\n          companyID\n          name\n          description\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          tasks {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnCreateRoomSubscription>;\n\n  OnUpdateRoomListener: Observable<OnUpdateRoomSubscription> = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateRoom {\n        onUpdateRoom {\n          __typename\n          id\n          companyID\n          name\n          description\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          tasks {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnUpdateRoomSubscription>;\n\n  OnDeleteRoomListener: Observable<OnDeleteRoomSubscription> = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteRoom {\n        onDeleteRoom {\n          __typename\n          id\n          companyID\n          name\n          description\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          tasks {\n            __typename\n            items {\n              __typename\n              id\n              authorID\n              roomID\n              title\n              description\n              scheduleDate\n              priority\n              status\n              createdAt\n              updatedAt\n            }\n            nextToken\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnDeleteRoomSubscription>;\n\n  OnCreateTaskListener: Observable<OnCreateTaskSubscription> = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateTask {\n        onCreateTask {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          room {\n            __typename\n            id\n            companyID\n            name\n            description\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              content\n              createdAt\n              isSent\n              updatedAt\n            }\n            nextToken\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnCreateTaskSubscription>;\n\n  OnUpdateTaskListener: Observable<OnUpdateTaskSubscription> = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateTask {\n        onUpdateTask {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          room {\n            __typename\n            id\n            companyID\n            name\n            description\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              content\n              createdAt\n              isSent\n              updatedAt\n            }\n            nextToken\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnUpdateTaskSubscription>;\n\n  OnDeleteTaskListener: Observable<OnDeleteTaskSubscription> = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteTask {\n        onDeleteTask {\n          __typename\n          id\n          authorID\n          roomID\n          title\n          description\n          scheduleDate\n          priority\n          status\n          createdAt\n          members {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          room {\n            __typename\n            id\n            companyID\n            name\n            description\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            tasks {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          messages {\n            __typename\n            items {\n              __typename\n              id\n              taskID\n              content\n              createdAt\n              isSent\n              updatedAt\n            }\n            nextToken\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnDeleteTaskSubscription>;\n\n  OnCreateMessageListener: Observable<OnCreateMessageSubscription> = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateMessage {\n        onCreateMessage {\n          __typename\n          id\n          taskID\n          content\n          createdAt\n          isSent\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            room {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnCreateMessageSubscription>;\n\n  OnUpdateMessageListener: Observable<\n    OnUpdateMessageSubscription\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateMessage {\n        onUpdateMessage {\n          __typename\n          id\n          taskID\n          author {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          content\n          createdAt\n          isSent\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            room {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnUpdateMessageSubscription>;\n\n  OnDeleteMessageListener: Observable<\n    OnDeleteMessageSubscription\n  > = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteMessage {\n        onDeleteMessage {\n          __typename\n          id\n          taskID\n          author {\n            __typename\n            id\n            email\n            companyID\n            username\n            registered\n            authority\n            company {\n              __typename\n              id\n              name\n              domain\n              createdAt\n              updatedAt\n            }\n            createdAt\n            updatedAt\n          }\n          content\n          createdAt\n          isSent\n          task {\n            __typename\n            id\n            authorID\n            roomID\n            title\n            description\n            scheduleDate\n            priority\n            status\n            createdAt\n            members {\n              __typename\n              id\n              email\n              companyID\n              username\n              registered\n              authority\n              createdAt\n              updatedAt\n            }\n            room {\n              __typename\n              id\n              companyID\n              name\n              description\n              createdAt\n              updatedAt\n            }\n            messages {\n              __typename\n              nextToken\n            }\n            updatedAt\n          }\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnDeleteMessageSubscription>;\n\n  OnCreateUserListener: Observable<OnCreateUserSubscription> = API.graphql(\n    graphqlOperation(\n      `subscription OnCreateUser {\n        onCreateUser {\n          __typename\n          id\n          email\n          companyID\n          username\n          registered\n          authority\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnCreateUserSubscription>;\n\n  OnUpdateUserListener: Observable<OnUpdateUserSubscription> = API.graphql(\n    graphqlOperation(\n      `subscription OnUpdateUser {\n        onUpdateUser {\n          __typename\n          id\n          email\n          companyID\n          username\n          registered\n          authority\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnUpdateUserSubscription>;\n\n  OnDeleteUserListener: Observable<OnDeleteUserSubscription> = API.graphql(\n    graphqlOperation(\n      `subscription OnDeleteUser {\n        onDeleteUser {\n          __typename\n          id\n          email\n          companyID\n          username\n          registered\n          authority\n          company {\n            __typename\n            id\n            name\n            domain\n            room {\n              __typename\n              nextToken\n            }\n            members {\n              __typename\n              nextToken\n            }\n            createdAt\n            updatedAt\n          }\n          createdAt\n          updatedAt\n        }\n      }`\n    )\n  ) as Observable<OnDeleteUserSubscription>;\n}\n","import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Auth } from \"aws-amplify\";\nimport { Observable, from, BehaviorSubject, of } from \"rxjs\";\nimport { map, tap, catchError } from \"rxjs/operators\";\nimport { InterfaceSignup } from \"../../interfaces/signup.interface\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SessionService {\n  loggedIn: BehaviorSubject<boolean>;\n\n  constructor(private readonly router: Router) {\n    this.loggedIn = new BehaviorSubject<boolean>(false);\n  }\n\n  entryUserSignup(valueObj): Observable<any> {\n    return from(Auth.signUp(valueObj));\n  }\n\n  isAuthenticated(): Observable<boolean> {\n    return from(Auth.currentAuthenticatedUser()).pipe(\n      map(() => {\n        this.loggedIn.next(true);\n        return true;\n      }),\n      catchError(() => {\n        this.loggedIn.next(false);\n        return of(false);\n      })\n    );\n  }\n\n  confirmSignUp(username, code): Observable<void> {\n    return from(Auth.confirmSignUp(username, code));\n  }\n\n  resendConfirmNumberForSignUp(username): Observable<string> {\n    return from(Auth.resendSignUp(username));\n  }\n\n  userLogin(email, password): Observable<void> {\n    return from(Auth.signIn(email, password))\n      .pipe(tap(() => this.loggedIn.next(true)));\n  }\n\n  fetchCurrentUser(): Observable<any> {\n    return from(Auth.currentAuthenticatedUser());\n  }\n\n  signOut() {\n    return from(Auth.signOut())\n      .pipe(tap(() => this.loggedIn.next(false)));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { SessionService } from './service/session.service';\nimport { SharedLogicService } from './logic/shared-logic.service';\nimport { AddRoomModalComponent } from './component/modal/add-room-modal/add-room-modal.component';\nimport { AddTaskModalComponent } from './component/modal/add-task-modal/add-task-modal.component';\nimport { DeleteTaskModalComponent } from './component/modal/delete-task-modal/delete-task-modal.component';\nimport { EditProfileModalComponent } from './component/modal/edit-profile-modal/edit-profile-modal.component';\n\n\n@NgModule({\n  declarations: [\n    AddRoomModalComponent,\n    AddTaskModalComponent,\n    DeleteTaskModalComponent,\n    EditProfileModalComponent,\n  ],\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  entryComponents: [\n    AddRoomModalComponent,\n    AddTaskModalComponent,\n    DeleteTaskModalComponent,\n    EditProfileModalComponent,\n  ],\n  exports: [\n    AddRoomModalComponent,\n    AddTaskModalComponent,\n    DeleteTaskModalComponent,\n    EditProfileModalComponent,\n    ReactiveFormsModule,\n    FormsModule,\n  ],\n  providers: [\n    SessionService,\n    SharedLogicService,\n  ]\n})\nexport class SharedModule { }\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"ap-northeast-1\",\n    \"aws_cognito_identity_pool_id\": \"ap-northeast-1:1c83b07b-ce19-49f6-ae74-da6ffcc69554\",\n    \"aws_cognito_region\": \"ap-northeast-1\",\n    \"aws_user_pools_id\": \"ap-northeast-1_ByovDG4bt\",\n    \"aws_user_pools_web_client_id\": \"47bkbu7qf1aue8v7i0elq754tr\",\n    \"oauth\": {},\n    \"aws_appsync_graphqlEndpoint\": \"http://192.168.0.13:20002/graphql\",\n    \"aws_appsync_region\": \"ap-northeast-1\",\n    \"aws_appsync_authenticationType\": \"AMAZON_COGNITO_USER_POOLS\",\n    \"aws_appsync_apiKey\": \"da2-fakeApiId123456\",\n    \"aws_appsync_dangerously_connect_to_http_endpoint_for_testing\": true\n};\n\n\nexport default awsmobile;\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n// Amplify Config\nimport Amplify, { Auth } from 'aws-amplify';\nimport PubSub from '@aws-amplify/pubsub';\nimport API from '@aws-amplify/api';\nimport awsmobile from './aws-exports';\n\nAmplify.configure(awsmobile);\nAPI.configure(awsmobile);\nPubSub.configure(awsmobile);\nAuth.configure(awsmobile);\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}