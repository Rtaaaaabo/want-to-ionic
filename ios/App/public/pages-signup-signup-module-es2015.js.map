{"version":3,"sources":["./src/app/pages/signup/signup.page.html","./src/app/pages/signup/logic/signup-logic.service.ts","./src/app/pages/signup/signup-routing.module.ts","./src/app/pages/signup/signup.module.ts","./src/app/pages/signup/signup.page.scss","./src/app/pages/signup/signup.page.ts"],"names":[],"mappings":"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","file":"pages-signup-signup-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>新規登録</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"goBackToLogin()\\\">\\n        <ion-icon name=\\\"chevron-back-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"signUpForm\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-label for=\\\"email\\\" position=\\\"floating\\\">メールアドレス</ion-label>\\n        <ion-input type=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label for=\\\"passwordform\\\" position=\\\"floating\\\">パスワード</ion-label>\\n        <ion-input type=\\\"password\\\" formControlName=\\\"passwordform\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label for=\\\"confirmPasswordform\\\" position=\\\"floating\\\"\\n          >パスワード（確認）</ion-label\\n        >\\n        <ion-input\\n          type=\\\"password\\\"\\n          formControlName=\\\"confirmPasswordform\\\"\\n        ></ion-input>\\n      </ion-item>\\n    </ion-list>\\n  </form>\\n  <div class=\\\"register-button\\\">\\n    <ion-button\\n      (click)=\\\"onSubmit()\\\"\\n      [disabled]=\\\"signUpForm.invalid\\\"\\n      expand=\\\"block\\\"\\n      >登録</ion-button\\n    >\\n  </div>\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\nimport { SessionService } from '../../../shared/service/session.service';\nimport { AmplifyService } from '../../../shared/service/amplify.service';\nimport { v4 as uuid } from 'uuid';\nimport { Observable, from } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignupLogicService {\n\n  constructor(\n    private sessionService: SessionService,\n    private amplifyService: AmplifyService,\n  ) { }\n\n  entrySignupUser(value): Observable<any> {\n    const signupContent = {\n      username: value.email,\n      password: value.passwordform,\n      attributes: {\n        email: value.email,\n      }\n    }\n    return this.sessionService.entryUserSignup(signupContent);\n  }\n\n  /*\n  value = {\n    Session: null\n    authenticationFlowType: \"USER_SRP_AUTH\"\n    client: Client {endpoint: \"https://cognito-idp.ap-northeast-1.amazonaws.com/\", fetchOptions: {…}}\n    userDataKey: \"CognitoIdentityServiceProvider.47bkbu7qf1aue8v7i0elq754tr.r.taaaaabo+dev03@gmail.com.userData\"\n    username: \"r.taaaaabo+dev03@gmail.com\"\n  }\n  */\n  createUser(value, formValue, companyId): Observable<any> {\n    const isoNowDate = new Date().toISOString();\n    const createUser = {\n      id: `${isoNowDate}_${uuid()}`, // いつ作成されたUserであるのか判断できるようにした\n      email: formValue.email,\n      companyID: companyId,\n      username: formValue.username,\n      registered: false,\n      authority: 'member',\n    }\n    return from(this.amplifyService.CreateUser(createUser));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SignupPage } from './signup.page';\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignupPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { SharedModule } from '../../shared/shared.module';\nimport { SignupPageRoutingModule } from './signup-routing.module';\nimport { SignupPage } from './signup.page';\nimport { SignupLogicService } from './logic/signup-logic.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    ReactiveFormsModule,\n    SignupPageRoutingModule\n  ],\n  declarations: [SignupPage],\n  providers: [SignupLogicService],\n})\nexport class SignupPageModule { }\n","export default \".text-center {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90YWt1bmFrYWdhd2EvZGV2L2lvbmljL3dhbnRUby9zcmMvYXBwL3BhZ2VzL3NpZ251cC9zaWdudXAucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9zaWdudXAvc2lnbnVwLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9zaWdudXAvc2lnbnVwLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50ZXh0LWNlbnRlciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufSIsIi50ZXh0LWNlbnRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { SignupLogicService } from './logic/signup-logic.service';\nimport { InterfaceSignup } from '../../interfaces/signup.interface';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.page.html',\n  styleUrls: ['./signup.page.scss'],\n})\nexport class SignupPage implements OnInit {\n  signUpForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    passwordform: new FormControl('', [Validators.required, Validators.minLength(8)]),\n    confirmPasswordform: new FormControl('', [Validators.required, Validators.minLength(8)])\n  }, this.checkPasswords);\n\n  constructor(\n    private router: Router,\n    private location: Location,\n    private logic: SignupLogicService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  checkPasswords(group: FormGroup) {\n    let password = group.get('passwordform').value;\n    let confirmPassword = group.get('confirmPasswordform').value;\n    return password = confirmPassword ? null : { notSame: true }\n  }\n\n  onSubmit() {\n    const value: InterfaceSignup = this.signUpForm.value;\n    this.logic.entrySignupUser(value)\n      .subscribe(() => {\n        this.router.navigate(['/confirm'], { state: { data: { email: value.email } } });\n      })\n    if (this.signUpForm.invalid) {\n      return;\n    }\n  }\n\n  goBackToLogin() {\n    this.location.back();\n  }\n\n}\n"],"sourceRoot":"webpack:///"}