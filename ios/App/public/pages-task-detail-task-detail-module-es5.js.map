{"version":3,"sources":["webpack:///src/app/pages/task-detail/task-detail.page.html","webpack:///src/app/pages/task-detail/logic/task-detail-logic.service.ts","webpack:///src/app/pages/task-detail/service/task-detail-service.service.ts","webpack:///src/app/pages/task-detail/task-detail-routing.module.ts","webpack:///src/app/pages/task-detail/task-detail.module.ts","webpack:///src/app/pages/task-detail/task-detail.page.scss","webpack:///src/app/pages/task-detail/task-detail.page.ts"],"names":["TaskDetailLogicService","taskDetailService","taskId","getTask","filterContent","taskID","eq","fetchMessagePerTask","taskItem","status","content","id","updateTaskItem","messageContent","inputContent","isSent","createMessageItem","onMessageListener","providedIn","TaskDetailServiceService","amplifyService","GetTask","filterInfo","ListMessages","UpdateTask","CreateMessage","OnCreateMessageListener","routes","path","component","redirectTo","pathMatch","TaskDetailPageRoutingModule","imports","forChild","exports","TaskDetailPageModule","declarations","TaskDetailPage","location","logic","route","scroll","modalCtrl","actionSheetCtrl","toastCtrl","platform","link","fragmentComment","newMsg","initializeApp","subscribe","onCreateMessageListener","result","message","items","snapshot","paramMap","get","segment","testHref","fetchAnyTask","data","taskDetail","sendNewMessage","create","duration","toast","present","fragment","scrollToAnchor","componentProps","modal","presentToast","presentDoneToast","pipe","presentMoveTask","cssClass","buttons","text","handler","doneTask","presentModalEditTask","role","deleteTask","activeActionSheet","moveTask","doneActionSheet","console","log","back","ready","HTMLElement","selector","template"],"mappings":"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","file":"pages-task-detail-task-detail-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>タスクの詳細</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"goBackToRoom()\\\">\\n        <ion-icon name=\\\"chevron-back-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"presentActionSheet(taskDetail)\\\">\\n        <ion-icon name=\\\"ellipsis-horizontal-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n    <ion-icon\\n      class=\\\"ion-padding\\\"\\n      *ngIf=\\\"taskDetail?.status > 0\\\"\\n      size=\\\"large\\\"\\n      name=\\\"checkmark-circle\\\"\\n      color=\\\"secondary\\\"\\n    ></ion-icon>\\n    <ion-card-header class=\\\"card-title\\\">\\n      <ion-card-title>{{ taskDetail?.title }}</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-item class=\\\"card-background\\\" lines=\\\"none\\\">\\n        <ion-text>{{ taskDetail?.description}}</ion-text>\\n      </ion-item>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <!-- ここから下はCommentとMessage -->\\n  <ion-list>\\n    <ion-list-header>\\n      <ion-label>コメント</ion-label>\\n    </ion-list-header>\\n    <ion-item *ngFor=\\\"let item of message\\\">\\n      <ion-avatar slot=\\\"start\\\">\\n        <img src=\\\"../../../assets/svg/anonymous.svg\\\" />\\n      </ion-avatar>\\n      <ion-label>\\n        <h3>{{ item.content }}</h3>\\n        <p>送信者の名前</p>\\n      </ion-label>\\n    </ion-item>\\n    <!-- <ion-item> MEssage </ion-item>\\n    <ion-item> MEssage </ion-item> -->\\n  </ion-list>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar light=\\\"light\\\">\\n    <ion-row align-items-center class=\\\"ion-no-padding\\\">\\n      <ion-col class=\\\"center-align\\\" size=\\\"10\\\">\\n        <textarea\\n          autosize\\n          maxRows=\\\"2\\\"\\n          [(ngModel)]=\\\"newMsg\\\"\\n          class=\\\"message-input\\\"\\n        ></textarea>\\n      </ion-col>\\n      <ion-col class=\\\"center-align\\\" size=\\\"2\\\">\\n        <ion-button\\n          expand=\\\"block\\\"\\n          fill=\\\"clear\\\"\\n          color=\\\"primary\\\"\\n          [disabled]=\\\"newMsg === ''\\\"\\n          class=\\\"msg-btn\\\"\\n          (click)=\\\"sendMessage()\\\"\\n        >\\n          <ion-icon name=\\\"send\\\" slot=\\\"icon-only\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-toolbar>\\n</ion-footer>\\n\";","import { Injectable } from '@angular/core';\nimport { AmplifyService, OnCreateMessageSubscription } from '../../../shared/service/amplify.service';\nimport { TaskDetailServiceService } from '../service/task-detail-service.service';\nimport { Observable, from } from 'rxjs';\nimport { v4 as uuid } from 'uuid';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskDetailLogicService {\n\n  constructor(\n    private taskDetailService: TaskDetailServiceService,\n  ) { }\n\n  fetchAnyTask(taskId: string): Observable<any> {\n    return from(this.taskDetailService.getTask(taskId));\n  }\n\n  fetchMessagePerTask(taskId: string): Observable<any> {\n    const filterContent = {\n      taskID: {\n        eq: `${taskId}`\n      }\n    }\n    return from(this.taskDetailService.fetchMessagePerTask(filterContent))\n  }\n\n  updateTaskItem(taskItem, status): Observable<any> {\n    const content = {\n      id: taskItem.id,\n      status: status,\n    }\n    return this.taskDetailService.updateTaskItem(content);\n  }\n\n  sendNewMessage(taskId, messageContent): Observable<any> {\n    const inputContent = {\n      id: `${uuid()}`,\n      content: messageContent,\n      taskID: taskId,\n      isSent: true,\n    }\n    return this.taskDetailService.createMessageItem(inputContent);\n  }\n\n  // OnCreateMessageSubscription\n  onCreateMessageListener() {\n    return this.taskDetailService.onMessageListener();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AmplifyService, GetTaskQuery, OnCreateMessageSubscription } from '../../../shared/service/amplify.service';\nimport { Observable, from } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskDetailServiceService {\n\n  constructor(\n    private amplifyService: AmplifyService,\n  ) { }\n\n  getTask(taskId: string): Observable<GetTaskQuery> {\n    return from(this.amplifyService.GetTask(taskId))\n  }\n\n  fetchMessagePerTask(filterInfo): Observable<any> {\n    return from(this.amplifyService.ListMessages(filterInfo));\n  }\n\n  updateTaskItem(inputContent): Observable<any> {\n    return from(this.amplifyService.UpdateTask(inputContent));\n  }\n\n  createMessageItem(inputContent): Observable<any> {\n    return from(this.amplifyService.CreateMessage(inputContent));\n  }\n\n  onMessageListener() {\n    return this.amplifyService.OnCreateMessageListener;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, ExtraOptions } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { TaskDetailPage } from './task-detail.page';\n\nconst routes: Routes = [\n  {\n    path: ':id/:segment',\n    component: TaskDetailPage\n  },\n  {\n    path: '',\n    redirectTo: ':id',\n    pathMatch: 'full'\n  }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TaskDetailPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { TaskDetailPageRoutingModule } from './task-detail-routing.module';\n\nimport { TaskDetailPage } from './task-detail.page';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    TaskDetailPageRoutingModule\n  ],\n  declarations: [TaskDetailPage]\n})\nexport class TaskDetailPageModule { }\n","export default \".my-custom-class .action-sheet-group {\\n  background: #e5e5e5;\\n}\\n\\n.card-background {\\n  --background: \\\"#1c1c1d\\\";\\n}\\n\\n.end-done-icon {\\n  margin-left: auto;\\n  margin-right: 50px;\\n}\\n\\n.message-input {\\n  width: 100%;\\n  border: 1px solid var(--ion-color-medium);\\n  border-radius: 10px;\\n  background: #fff;\\n  resize: none;\\n  padding-left: 10px;\\n  padding-right: 10px;\\n}\\n\\n.msg-btn {\\n  --padding-start: 0.5em;\\n  --padding-end: 0.5em;\\n}\\n\\n.card-title {\\n  font-size: medium;\\n}\\n\\n.center-align {\\n  margin-top: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90YWt1bmFrYWdhd2EvZGV2L2lvbmljL3dhbnRUby9zcmMvYXBwL3BhZ2VzL3Rhc2stZGV0YWlsL3Rhc2stZGV0YWlsLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvdGFzay1kZXRhaWwvdGFzay1kZXRhaWwucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQUE7QUNDSjs7QURFQTtFQUNJLHVCQUFBO0FDQ0o7O0FERUE7RUFDSSxpQkFBQTtFQUNBLGtCQUFBO0FDQ0o7O0FERUE7RUFDSSxXQUFBO0VBQ0EseUNBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7QUNDSjs7QURFQTtFQUNJLHNCQUFBO0VBQ0Esb0JBQUE7QUNDSjs7QURFQTtFQUNJLGlCQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdGFzay1kZXRhaWwvdGFzay1kZXRhaWwucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm15LWN1c3RvbS1jbGFzcyAuYWN0aW9uLXNoZWV0LWdyb3VwIHtcbiAgICBiYWNrZ3JvdW5kOiAjZTVlNWU1O1xufVxuXG4uY2FyZC1iYWNrZ3JvdW5kIHtcbiAgICAtLWJhY2tncm91bmQ6ICcjMWMxYzFkJztcbn1cblxuLmVuZC1kb25lLWljb24ge1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogNTBweDtcbn1cblxuLm1lc3NhZ2UtaW5wdXQge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWlvbi1jb2xvci1tZWRpdW0pO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICByZXNpemU6IG5vbmU7XG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG59XG5cbi5tc2ctYnRuIHtcbiAgICAtLXBhZGRpbmctc3RhcnQ6IDAuNWVtO1xuICAgIC0tcGFkZGluZy1lbmQ6IDAuNWVtO1xufVxuXG4uY2FyZC10aXRsZSB7XG4gICAgZm9udC1zaXplOiBtZWRpdW07XG59XG5cbi5jZW50ZXItYWxpZ24ge1xuICAgIG1hcmdpbi10b3A6IGF1dG87XG59IiwiLm15LWN1c3RvbS1jbGFzcyAuYWN0aW9uLXNoZWV0LWdyb3VwIHtcbiAgYmFja2dyb3VuZDogI2U1ZTVlNTtcbn1cblxuLmNhcmQtYmFja2dyb3VuZCB7XG4gIC0tYmFja2dyb3VuZDogXCIjMWMxYzFkXCI7XG59XG5cbi5lbmQtZG9uZS1pY29uIHtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogNTBweDtcbn1cblxuLm1lc3NhZ2UtaW5wdXQge1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0taW9uLWNvbG9yLW1lZGl1bSk7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIHJlc2l6ZTogbm9uZTtcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xufVxuXG4ubXNnLWJ0biB7XG4gIC0tcGFkZGluZy1zdGFydDogMC41ZW07XG4gIC0tcGFkZGluZy1lbmQ6IDAuNWVtO1xufVxuXG4uY2FyZC10aXRsZSB7XG4gIGZvbnQtc2l6ZTogbWVkaXVtO1xufVxuXG4uY2VudGVyLWFsaWduIHtcbiAgbWFyZ2luLXRvcDogYXV0bztcbn0iXX0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Location, ViewportScroller } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { ModalController, ActionSheetController, ToastController, IonContent, Platform } from '@ionic/angular';\nimport { from, Observable } from 'rxjs';\nimport { TaskDetailLogicService } from './logic/task-detail-logic.service';\nimport { AddTaskModalComponent } from 'src/app/shared/component/modal/add-task-modal/add-task-modal.component';\nimport { flatMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-task-detail',\n  templateUrl: './task-detail.page.html',\n  styleUrls: ['./task-detail.page.scss'],\n})\nexport class TaskDetailPage implements OnInit {\n  @ViewChild('comment') child: HTMLElement;\n  @ViewChild(IonContent, { static: false }) content: IonContent;\n  taskId: string;\n  segment: string;\n  taskDetail;\n  link = \"comment\"\n  testHref;\n  fragmentComment = '\u001d';\n  newMsg: string = '';\n  message;\n\n\n  constructor(\n    private location: Location,\n    private logic: TaskDetailLogicService,\n    private route: ActivatedRoute,\n    private scroll: ViewportScroller,\n    private modalCtrl: ModalController,\n    private actionSheetCtrl: ActionSheetController,\n    private toastCtrl: ToastController,\n    private platform: Platform,\n  ) {\n    this.initializeApp()\n      .subscribe(() => {\n        this.logic.onCreateMessageListener()\n          .subscribe(() => {\n            this.logic.fetchMessagePerTask(this.taskId)\n              .subscribe((result) => {\n                this.message = result.items\n              })\n          });\n      });\n  }\n\n  ngOnInit() {\n    this.taskId = this.route.snapshot.paramMap.get('id');\n    this.segment = this.route.snapshot.paramMap.get('segment');\n    this.testHref = `task-detail/${this.taskId}#comment`;\n    this.logic.fetchAnyTask(this.taskId).subscribe((data) => {\n      this.taskDetail = data;\n    });\n    this.logic.fetchMessagePerTask(this.taskId).subscribe((data) => {\n      this.message = data.items;\n    })\n  }\n\n  sendMessage() {\n    this.logic.sendNewMessage(this.taskId, this.newMsg)\n      .subscribe(() => this.newMsg = '');\n  }\n\n  async presentDoneToast(): Promise<void> {\n    const toast = await this.toastCtrl.create({\n      message: 'おつかれさまでした！',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  async presentMoveTask(): Promise<void> {\n    const toast = await this.toastCtrl.create({\n      message: '再度、戻しました。',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  ngAfterViewInit(): void {\n    this.route.fragment.subscribe((result) => {\n      this.scroll.scrollToAnchor(result);\n    });\n  }\n\n  async presentModalEditTask(taskDetail) {\n    const modal = await this.modalCtrl.create({\n      component: AddTaskModalComponent,\n      componentProps: { taskDetail: taskDetail },\n    });\n    return modal.present();\n  }\n\n  doneTask(taskDetail) {\n    const presentToast = from(this.presentDoneToast());\n    this.logic.updateTaskItem(taskDetail, 10)\n      .pipe(flatMap(() => this.logic.fetchAnyTask(taskDetail.id)))\n      .pipe(tap(() => presentToast)).subscribe((data) => this.taskDetail = data);\n  }\n\n  moveTask(taskDetail) {\n    const presentToast = from(this.presentMoveTask());\n    this.logic.updateTaskItem(taskDetail, 0)\n      .pipe(flatMap(() => this.logic.fetchAnyTask(taskDetail.id)))\n      .pipe(tap(() => presentToast)).subscribe((data) => this.taskDetail = data);\n  }\n\n  async presentActionSheet(taskDetail) {\n\n    const activeActionSheet = await this.actionSheetCtrl.create({\n      cssClass: 'my-custom-class',\n      buttons: [\n        {\n          text: '完了',\n          handler: () => {\n            this.doneTask(taskDetail);\n          }\n        },\n        {\n          text: '編集',\n          handler: () => {\n            this.presentModalEditTask(taskDetail)\n          }\n        },\n        {\n          text: '削除',\n          role: 'destructive',\n          handler: () => {\n            this.deleteTask(taskDetail)\n          }\n        },\n        {\n          text: 'キャンセル',\n          role: 'cancel',\n        }\n      ]\n    });\n\n    const doneActionSheet = await this.actionSheetCtrl.create({\n      cssClass: 'my-custom-class',\n      buttons: [\n        {\n          text: 'Activeに移動',\n          handler: () => {\n            this.moveTask(taskDetail);\n          }\n        },\n        {\n          text: '編集',\n          handler: () => {\n            this.presentModalEditTask(taskDetail)\n          }\n        },\n        {\n          text: '削除',\n          role: 'destructive',\n          handler: () => {\n            this.deleteTask(taskDetail)\n          }\n        },\n        {\n          text: 'キャンセル',\n          role: 'cancel',\n        }\n      ]\n    });\n\n    if (this.segment === 'active') {\n      await activeActionSheet.present();\n    } else if (this.segment === 'done') {\n      await doneActionSheet.present();\n    }\n  }\n\n  deleteTask(taskDetail) {\n    console.log('削除します。', taskDetail);\n  }\n\n  goBackToRoom() {\n    this.location.back();\n  }\n\n\n  initializeApp(): Observable<string> {\n    return from(this.platform.ready());\n  }\n\n}\n"]}