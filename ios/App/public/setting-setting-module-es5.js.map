{"version":3,"sources":["webpack:///src/app/pages/setting/setting.page.html","webpack:///src/app/pages/setting/logic/setting-logic.service.ts","webpack:///src/app/pages/setting/service/setting-service.service.ts","webpack:///src/app/pages/setting/setting-routing.module.ts","webpack:///src/app/pages/setting/setting.module.ts","webpack:///src/app/pages/setting/setting.page.scss","webpack:///src/app/pages/setting/setting.page.ts"],"names":["SettingLogic","sessionService","settingService","signOut","pipe","error","fetchCurrentUser","userId","fetchUserInfo","providedIn","SettingService","amplifyService","GetUser","routes","path","component","SettingPageRoutingModule","imports","forChild","exports","SettingPageModule","declarations","SettingPage","actionSheetCtrl","logic","router","modalCtrl","result","username","subscribe","data","console","log","user","create","cssClass","buttons","text","role","handler","actionLogout","logoutActionSheet","present","navigate","componentProps","status","modal","observable","onDidDismiss","selector","template"],"mappings":"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","file":"setting-setting-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>設定</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-item>\\n    <ion-avatar class=\\\"profile-icon\\\">\\n      <img src=\\\"../../../assets/svg/anonymous.svg\\\" />\\n    </ion-avatar>\\n    <ion-label class=\\\"margin-left\\\">\\n      <h2>{{ user?.username }}</h2>\\n      <p>{{ user?.positionName }}</p>\\n      <a (click)=\\\"presentEditModal()\\\">編集</a>\\n    </ion-label>\\n  </ion-item>\\n  <!-- <ion-card>\\n    <ion-card-content>\\n      <p>test</p>\\n      <ion-list>\\n        <ion-item> TEST </ion-item>\\n        <ion-item> TEST </ion-item>\\n        <ion-item> TEST </ion-item>\\n        <ion-item lines=\\\"none\\\"> TEST </ion-item>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card> -->\\n  <ion-item\\n    class=\\\"logout-line\\\"\\n    lines=\\\"none\\\"\\n    color=\\\"danger\\\"\\n    (click)=\\\"confirmLogout()\\\"\\n    >ログアウト</ion-item\\n  >\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\nimport { SessionService } from '../../../shared/service/session.service';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { SettingService } from '../service/setting-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingLogic {\n\n  constructor(\n    private sessionService: SessionService,\n    private settingService: SettingService,\n  ) { }\n\n  signOut(): Observable<any> {\n    return this.sessionService.signOut()\n      .pipe(catchError((error) => { return error }))\n  }\n\n  fetchCurrentUser(): Observable<any> {\n    return this.sessionService.fetchCurrentUser();\n  }\n\n  fetchUserInfo(userId): Observable<any> {\n    return this.settingService.fetchUserInfo(userId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { AmplifyService } from '../../../shared/service/amplify.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingService {\n\n  constructor(\n    private amplifyService: AmplifyService,\n  ) { }\n\n  fetchUserInfo(userId): Observable<any> {\n    return from(this.amplifyService.GetUser(userId));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingPage } from './setting.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingPageRoutingModule } from './setting-routing.module';\n\nimport { SettingPage } from './setting.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingPageRoutingModule\n  ],\n  declarations: [SettingPage]\n})\nexport class SettingPageModule {}\n","export default \".margin-left {\\n  margin-left: 20px;\\n}\\n\\n.profile-icon {\\n  width: 48px;\\n  height: 48px;\\n}\\n\\n.logout-line {\\n  margin: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90YWt1bmFrYWdhd2EvZGV2L2lvbmljL3dhbnRUby9zcmMvYXBwL3BhZ2VzL3NldHRpbmcvc2V0dGluZy5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3NldHRpbmcvc2V0dGluZy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBQTtBQ0NKOztBREVBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7QUNDSjs7QURFQTtFQUNJLFlBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NldHRpbmcvc2V0dGluZy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFyZ2luLWxlZnQge1xuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xufVxuXG4ucHJvZmlsZS1pY29uIHtcbiAgICB3aWR0aDogNDhweDtcbiAgICBoZWlnaHQ6IDQ4cHg7XG59XG5cbi5sb2dvdXQtbGluZSB7XG4gICAgbWFyZ2luOiAxMHB4O1xufSIsIi5tYXJnaW4tbGVmdCB7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xufVxuXG4ucHJvZmlsZS1pY29uIHtcbiAgd2lkdGg6IDQ4cHg7XG4gIGhlaWdodDogNDhweDtcbn1cblxuLmxvZ291dC1saW5lIHtcbiAgbWFyZ2luOiAxMHB4O1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActionSheetController, ModalController } from '@ionic/angular';\nimport { SettingLogic } from './logic/setting-logic.service';\nimport { EditProfileModalComponent } from '../../shared/component/modal/edit-profile-modal/edit-profile-modal.component';\nimport { from } from 'rxjs';\nimport { flatMap } from 'rxjs/operators';\n\n// interface User\ninterface OwnUser {\n  authority: string;\n  companyID: string;\n  createdAt: string;\n  positionName: string;\n  email: string;\n  id: string;\n  registered?: boolean\n  updatedAt: string;\n  username: string;\n  __typename: string;\n}\n\n@Component({\n  selector: 'app-setting',\n  templateUrl: './setting.page.html',\n  styleUrls: ['./setting.page.scss'],\n})\nexport class SettingPage implements OnInit {\n\n  user: OwnUser;\n\n  constructor(\n    private actionSheetCtrl: ActionSheetController,\n    private logic: SettingLogic,\n    private router: Router,\n    private modalCtrl: ModalController,\n  ) { }\n\n  ngOnInit() {\n    this.logic.fetchCurrentUser()\n      .pipe(flatMap((result) => this.logic.fetchUserInfo(result.username)))\n      .subscribe((data) => {\n        console.log(data);\n        this.user = data;\n      });\n  }\n\n  async confirmLogout() {\n    const logoutActionSheet = await this.actionSheetCtrl.create({\n      cssClass: 'my-custom-class',\n      buttons: [\n        {\n          text: '\bログアウト',\n          role: 'destructive',\n          handler: () => {\n            this.actionLogout()\n          }\n        },\n        {\n          text: 'キャンセル',\n          role: 'cancel',\n        }\n      ]\n    });\n    return logoutActionSheet.present();\n  }\n\n  actionLogout() {\n    this.logic.signOut().subscribe(() => this.router.navigate(['/login']));\n  }\n\n  async presentEditModal(): Promise<void> {\n    const modal = await this.modalCtrl.create({\n      component: EditProfileModalComponent,\n      componentProps: {\n        status: 'already',\n        user: this.user,\n      }\n    });\n    const observable = from(modal.onDidDismiss());\n    return modal.present();\n  }\n\n}\n"]}