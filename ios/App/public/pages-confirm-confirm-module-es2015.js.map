{"version":3,"sources":["./src/app/pages/confirm/confirm.page.html","./src/app/pages/confirm/confirm-routing.module.ts","./src/app/pages/confirm/confirm.module.ts","./src/app/pages/confirm/confirm.page.scss","./src/app/pages/confirm/confirm.page.ts","./src/app/pages/confirm/logic/confirm-logic.service.ts"],"names":[],"mappings":"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","file":"pages-confirm-confirm-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>ユーザーの確認</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding content-margin\\\">\\n  <form [formGroup]=\\\"confirmForm\\\">\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">確認コード</ion-label>\\n      <ion-input\\n        required\\n        type=\\\"text\\\"\\n        formControlName=\\\"confirmNumber\\\"\\n      ></ion-input>\\n    </ion-item>\\n    <ion-button type=\\\"submit\\\" (click)=\\\"confirmSignup()\\\" expand=\\\"block\\\"\\n      >確認</ion-button\\n    >\\n  </form>\\n\\n  <div class=\\\"center-signup\\\">\\n    <a (click)=\\\"reSendSignup()\\\">再度送る</a>\\n  </div>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ConfirmPage } from './confirm.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConfirmPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConfirmPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ConfirmPageRoutingModule } from './confirm-routing.module';\nimport { ConfirmPage } from './confirm.page';\nimport { ConfirmLogicService } from './logic/confirm-logic.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    ConfirmPageRoutingModule\n  ],\n  declarations: [ConfirmPage],\n  providers: [ConfirmLogicService],\n})\nexport class ConfirmPageModule { }\n","export default \".center-signup {\\n  text-align: center;\\n  margin-top: 20px;\\n}\\n\\n.content-margin {\\n  margin: 30% 10% 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90YWt1bmFrYWdhd2EvZGV2L2lvbmljL3dhbnRUby9zcmMvYXBwL3BhZ2VzL2NvbmZpcm0vY29uZmlybS5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL2NvbmZpcm0vY29uZmlybS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtFQUNBLGdCQUFBO0FDQ0o7O0FERUE7RUFDSSxpQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvY29uZmlybS9jb25maXJtLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jZW50ZXItc2lnbnVwIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbn1cblxuLmNvbnRlbnQtbWFyZ2luIHtcbiAgICBtYXJnaW46IDMwJSAxMCUgMDtcbn0iLCIuY2VudGVyLXNpZ251cCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjBweDtcbn1cblxuLmNvbnRlbnQtbWFyZ2luIHtcbiAgbWFyZ2luOiAzMCUgMTAlIDA7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ConfirmLogicService } from './logic/confirm-logic.service';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.page.html',\n  styleUrls: ['./confirm.page.scss'],\n})\n\nexport class ConfirmPage implements OnInit {\n  confirmTargetEmail: string;\n  confirmForm = new FormGroup({\n    confirmNumber: new FormControl('', [Validators.required])\n  });\n\n  constructor(\n    private logic: ConfirmLogicService,\n    private router: Router,\n  ) {\n  }\n\n  ngOnInit() {\n    this.confirmTargetEmail = this.router.getCurrentNavigation().extras.state.data.email;\n  }\n\n  confirmSignup() {\n    this.logic.sendConfirmUser(this.confirmTargetEmail, this.confirmForm.get('confirmNumber').value).subscribe(() => {\n      this.router.navigate(['/login']);\n    })\n  }\n\n  reSendSignup() {\n    console.log('reSendSignup');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { SessionService } from '../../../shared/service/session.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmLogicService {\n\n  constructor(\n    private sessionService: SessionService,\n  ) { }\n\n  sendConfirmUser(username, code): Observable<void> {\n    return this.sessionService.confirmSignUp(username, code);\n  }\n\n  resendConfirm(username): Observable<string> {\n    return this.sessionService.resendConfirmNumberForSignUp(username);\n  }\n}\n"],"sourceRoot":"webpack:///"}