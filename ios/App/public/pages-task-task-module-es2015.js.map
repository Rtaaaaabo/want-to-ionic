{"version":3,"sources":["./src/app/pages/task/task.page.html","./src/app/pages/task/logic/task-logic.service.ts","./src/app/pages/task/service/task-service.service.ts","./src/app/pages/task/task-routing.module.ts","./src/app/pages/task/task.module.ts","./src/app/pages/task/task.page.scss","./src/app/pages/task/task.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,iHAAkD,aAAa,kpDAAkpD,cAAc,4BAA4B,kBAAkB,gdAAgd,cAAc,0BAA0B,kBAAkB,o2DAAo2D,cAAc,wBAAwB,kBAAkB,+HAA+H,E;;;;;;;;;;;;;;;;;;;;;;;ACAtxI;AAC0B;AAC/B;AACmC;AAEA;AACvC;AAKlC,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAE3B,YACU,WAA+B,EAC/B,cAA8B;QAD9B,gBAAW,GAAX,WAAW,CAAoB;QAC/B,mBAAc,GAAd,cAAc,CAAgB;IACpC,CAAC;IAEL,aAAa,CAAC,MAAc;QAC1B,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAChD,CAAC;IAED,oBAAoB;QAClB,OAAO,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,0DAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACzF,CAAC;IAED,gBAAgB,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK;QACzC,MAAM,aAAa,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;QACjD,IAAI,WAAW,KAAK,SAAS,EAAE;YAC7B,OAAO,+CAAE,CAAC,EAAE,CAAC,CAAC;SACf;aAAM;YACL,MAAM,OAAO,GAAG;gBACd,EAAE,EAAE,GAAG,+CAAI,EAAE,EAAE;gBACf,QAAQ,EAAE,GAAG,KAAK,EAAE;gBACpB,MAAM,EAAE,GAAG,MAAM,EAAE;gBACnB,KAAK,EAAE,WAAW,CAAC,QAAQ;gBAC3B,WAAW,EAAE,WAAW,CAAC,eAAe;gBACxC,YAAY,EAAE,WAAW,CAAC,gBAAgB;gBAC1C,SAAS,EAAE,aAAa;gBACxB,MAAM,EAAE,CAAC;gBACT,QAAQ,EAAE,CAAC;aACZ;YACD,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;SACjD;IACH,CAAC;IAED,sBAAsB,CAAC,MAAM;QAC3B,MAAM,aAAa,GAAG;YACpB,MAAM,EAAE;gBACN,EAAE,EAAE,GAAG,MAAM,EAAE;aAChB;SACF;QACD,OAAO,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,aAAa,CAAC;aACzD,IAAI,CAAC,+DAAQ,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aAClC,IAAI,CAAC,6DAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;aACtC,IAAI,CAAC,8DAAO,EAAE,CAAC,CAAC;IACrB,CAAC;IAED,oBAAoB,CAAC,MAAM;QACzB,MAAM,aAAa,GAAG;YACpB,MAAM,EAAE;gBACN,EAAE,EAAE,GAAG,MAAM,EAAE;aAChB;SACF;QACD,OAAO,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,aAAa,CAAC;aACzD,IAAI,CAAC,+DAAQ,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aAClC,IAAI,CAAC,6DAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC;aACxC,IAAI,CAAC,8DAAO,EAAE,CAAC,CAAC;IACrB,CAAC;IAED,cAAc,CAAC,QAAQ,EAAE,MAAM;QAC7B,MAAM,OAAO,GAAG;YACd,EAAE,EAAE,QAAQ,CAAC,EAAE;YACf,MAAM,EAAE,MAAM;SACf;QACD,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IAClD,CAAC;IAED,cAAc,CAAC,MAAc;QAC3B,MAAM,OAAO,GAAG;YACd,EAAE,EAAE,GAAG,MAAM,EAAE;SAChB;QACD,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IAClD,CAAC;CACF;;YAtEwB,gFAAkB;YACf,8EAAc;;AAJ7B,gBAAgB;IAH5B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAIuB,gFAAkB;QACf,8EAAc;GAJ7B,gBAAgB,CAyE5B;AAzE4B;;;;;;;;;;;;;;;;;;;;ACXc;AAC4D;AAC/D;AAKxC,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAE7B,YACU,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IACpC,CAAC;IAEL,aAAa,CAAC,MAAc;QAC1B,OAAO,iDAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,cAAc,CAAC,OAAO;QACpB,OAAO,iDAAI,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,cAAc,CAAC,OAAO;QACpB,OAAO,iDAAI,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,qBAAqB,CAAC,OAAO;QAC3B,OAAO,iDAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,cAAc,CAAC,OAAO;QACpB,OAAO,iDAAI,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IACvD,CAAC;CACF;;YAtB2B,8EAAc;;AAH7B,kBAAkB;IAH9B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAI0B,8EAAc;GAH7B,kBAAkB,CAyB9B;AAzB8B;;;;;;;;;;;;;;;;;;;;ACPU;AACc;AAEhB;AAEvC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,mDAAQ;KACpB;CACF,CAAC;AAMF,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;CAAI;AAAzB,qBAAqB;IAJjC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,qBAAqB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;AChBO;AACM;AACF;AAEA;AAEiB;AAEvB;AACuB;AACM;AAYpE,IAAa,cAAc,GAA3B,MAAa,cAAc;CAAI;AAAlB,cAAc;IAV1B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,0EAAqB;SACtB;QACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;QACxB,SAAS,EAAE,CAAC,0EAAgB,EAAE,gFAAkB,CAAC;KAClD,CAAC;GACW,cAAc,CAAI;AAAJ;;;;;;;;;;;;;ACtB3B;AAAe,6EAAc,qBAAqB,qBAAqB,GAAG,wBAAwB,sBAAsB,yBAAyB,GAAG,sBAAsB,8BAA8B,GAAG,oBAAoB,uBAAuB,GAAG,6CAA6C,mkCAAmkC,E;;;;;;;;;;;;;;;;;;;;;;;;ACAvzC;AACP;AACc;AACgC;AACzD;AAC0B;AAEmD;AAE/C;AAO9D,IAAa,QAAQ,GAArB,MAAa,QAAQ;IASnB,YACU,MAAc,EACd,SAA0B,EAC1B,KAAqB,EACrB,QAAkB,EAClB,KAAuB,EACvB,SAA0B,EAC1B,eAAsC;QANtC,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAiB;QAC1B,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAClB,UAAK,GAAL,KAAK,CAAkB;QACvB,cAAS,GAAT,SAAS,CAAiB;QAC1B,oBAAe,GAAf,eAAe,CAAuB;QAfhD,SAAI,GAAG,EAAkB,CAAC;IAgBtB,CAAC;IAEL,QAAQ;IAER,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC;aAClC,SAAS,CAAC,CAAC,QAAsB,EAAE,EAAE;YACpC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QACvB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;QAC/E,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC;aAC3C,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/B,CAAC,CAAC;QAEJ,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC;aACzC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC7B,CAAC,CAAC;IACN,CAAC;IAEK,gBAAgB;;YACpB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACxC,OAAO,EAAE,YAAY;gBACrB,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;KAAA;IAEK,cAAc;;YAClB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACxC,SAAS,EAAE,qHAAqB;gBAChC,cAAc,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;aACpC,CAAC,CAAC;YACH,MAAM,iBAAiB,GAAG,iDAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;YACrD,iBAAiB;iBACd,IAAI,CAAC,8DAAO,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;iBAC3F,IAAI,CAAC,8DAAO,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;iBACnE,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;gBACnB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC/B,CAAC,CAAC,CAAC;YACL,OAAO,KAAK,CAAC,OAAO,EAAE,CAAC;QACzB,CAAC;KAAA;IAED,YAAY;QACV,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACnC,CAAC;IAED,WAAW,CAAC,EAAE;QACZ,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;QACvD,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;IACvB,CAAC;IAED,oBAAoB,CAAC,IAAI,EAAE,OAAO;QAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;IACnE,CAAC;IAED,sBAAsB,CAAC,IAAI;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC;IAC9E,CAAC;IAED,cAAc,CAAC,EAAE;QACf,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;IACjC,CAAC;IAED,QAAQ,CAAC,QAAQ;QACf,MAAM,YAAY,GAAG,iDAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,EAAE,EAAE,CAAC;aACpC,IAAI,CAAC,8DAAO,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;aACnE,IAAI,CAAC,0DAAG,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC;IACpF,CAAC;IAGK,oBAAoB,CAAC,IAAI;;YAC7B,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBACpD,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,IAAI;wBACV,IAAI,EAAE,aAAa;wBACnB,IAAI,EAAE,OAAO;wBACb,OAAO,EAAE,GAAG,EAAE;4BACZ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;wBACvB,CAAC;qBACF;oBACD;wBACE,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF,CAAC;YACF,OAAO,WAAW,CAAC,OAAO,EAAE,CAAC;QAC/B,CAAC;KAAA;IAED,UAAU,CAAC,IAAI;QACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC;aAC/B,IAAI,CAAC,8DAAO,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;aACnE,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,CAAC;IAC1D,CAAC;CAEF;;YAtHmB,sDAAM;YACH,8DAAe;YACnB,8DAAc;YACX,wDAAQ;YACX,0EAAgB;YACZ,8DAAe;YACT,oEAAqB;;AAhBrC,QAAQ;IALpB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,oNAA+B;;KAEhC,CAAC;mFAWkB,sDAAM;QACH,8DAAe;QACnB,8DAAc;QACX,wDAAQ;QACX,0EAAgB;QACZ,8DAAe;QACT,oEAAqB;GAhBrC,QAAQ,CAgIpB;AAhIoB","file":"pages-task-task-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title> {{ room.name }} </ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"goBackToRoom()\\\">\\n        <ion-icon name=\\\"chevron-back-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-buttons *ngIf=\\\"segment === 'active'\\\" slot=\\\"end\\\">\\n      <ion-button (click)=\\\"sortTaskItem()\\\">\\n        <ion-icon *ngIf=\\\"!isReorder\\\" name=\\\"swap-vertical-sharp\\\"></ion-icon>\\n        <ion-icon *ngIf=\\\"isReorder\\\" name=\\\"checkmark-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n  <ion-toolbar *ngIf=\\\"!isReorder\\\">\\n    <ion-segment [value]=\\\"segment\\\" (ionChange)=\\\"segmentChanged($event)\\\">\\n      <ion-segment-button value=\\\"active\\\">\\n        <ion-label>Active</ion-label>\\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"done\\\">\\n        <ion-label>Done</ion-label>\\n      </ion-segment-button>\\n    </ion-segment>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content *ngIf=\\\"segment === 'active'\\\">\\n  <ion-list>\\n    <ion-reorder-group\\n      (ionItemReorder)=\\\"reorderTask($event)\\\"\\n      [disabled]=\\\"!isReorder\\\"\\n    >\\n      <ion-card *ngFor=\\\"let item of taskActiveItems\\\">\\n        <ion-card-content\\n          class=\\\"task-card-content\\\"\\n          (click)=\\\"navigateToTaskDetail(item, segment)\\\"\\n        >\\n          <ion-reorder *ngIf=\\\"isReorder\\\">\\n            <ion-item class=\\\"card-background\\\" lines=\\\"none\\\">\\n              <ion-avatar slot=\\\"start\\\">\\n                <img\\n                  src=\\\"https://gravatar.com/avatar/dba6bae8c566f9d4041fb9cd9ada7741?d=identicon&f=y\\\"\\n                />\\n              </ion-avatar>\\n              <ion-label>\\n                <h2 class=\\\"task-title\\\">{{ item.title }}</h2>\\n                <p>{{item.description}}</p>\\n              </ion-label>\\n            </ion-item>\\n          </ion-reorder>\\n          <ion-item *ngIf=\\\"!isReorder\\\" class=\\\"card-background\\\" lines=\\\"none\\\">\\n            <ion-avatar slot=\\\"start\\\">\\n              <img\\n                src=\\\"https://gravatar.com/avatar/dba6bae8c566f9d4041fb9cd9ada7741?d=identicon&f=y\\\"\\n              />\\n            </ion-avatar>\\n            <ion-label *ngIf=\\\"!isReorder\\\">\\n              <h2 class=\\\"task-title\\\">{{ item.title }}</h2>\\n              <p>{{item.description}}</p>\\n            </ion-label>\\n          </ion-item>\\n        </ion-card-content>\\n        <ion-row *ngIf=\\\"!isReorder\\\" class=\\\"cardfooter\\\">\\n          <ion-col class=\\\"button-center\\\">\\n            <ion-button\\n              (click)=\\\"addCommentToTaskDetail(item)\\\"\\n              fill=\\\"clear\\\"\\n              color=\\\"primary\\\"\\n            >\\n              <ion-icon name=\\\"chatbubbles-outline\\\"></ion-icon>\\n            </ion-button>\\n          </ion-col>\\n          <ion-col class=\\\"button-center\\\">\\n            <ion-button (click)=\\\"doneTask(item)\\\" fill=\\\"clear\\\" color=\\\"primary\\\">\\n              <ion-icon name=\\\"checkmark-circle-outline\\\"></ion-icon>\\n            </ion-button>\\n          </ion-col>\\n          <ion-col class=\\\"button-center\\\">\\n            <ion-button\\n              (click)=\\\"presentConfirmDelete(item)\\\"\\n              fill=\\\"clear\\\"\\n              color=\\\"danger\\\"\\n            >\\n              <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n            </ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-card>\\n    </ion-reorder-group>\\n  </ion-list>\\n</ion-content>\\n<ion-fab *ngIf=\\\"segment === 'active'\\\" vertical=\\\"bottom\\\" horizontal=\\\"end\\\">\\n  <ion-fab-button (click)=\\\"presentAddTask()\\\">\\n    <ion-icon name=\\\"add-sharp\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab>\\n\\n<ion-content *ngIf=\\\"segment === 'done'\\\">\\n  <ion-list>\\n    <ion-card *ngFor=\\\"let item of taskDoneItems\\\">\\n      <ion-card-content\\n        class=\\\"task-card-content\\\"\\n        (click)=\\\"navigateToTaskDetail(item, segment)\\\"\\n      >\\n        <ion-item class=\\\"card-background\\\" lines=\\\"none\\\">\\n          <ion-avatar slot=\\\"start\\\">\\n            <img\\n              src=\\\"https://gravatar.com/avatar/dba6bae8c566f9d4041fb9cd9ada7741?d=identicon&f=y\\\"\\n            />\\n          </ion-avatar>\\n          <ion-label>\\n            <h2 class=\\\"task-title\\\">{{ item.title }}</h2>\\n            <p>{{item.description}}</p>\\n          </ion-label>\\n        </ion-item>\\n      </ion-card-content>\\n    </ion-card>\\n  </ion-list>\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\nimport { TaskServiceService } from '../service/task-service.service';\nimport { Observable, of } from 'rxjs';\nimport { map, filter, flatMap, mergeMap, toArray } from 'rxjs/operators';\nimport { GetRoomQuery } from 'src/app/shared/service/amplify.service';\nimport { SessionService } from '../../../shared/service/session.service';\nimport { v4 as uuid } from 'uuid';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskLogicService {\n\n  constructor(\n    private taskService: TaskServiceService,\n    private sessionService: SessionService,\n  ) { }\n\n  fetchRoomInfo(roomId: string): Observable<GetRoomQuery> {\n    return this.taskService.fetchRoomInfo(roomId);\n  }\n\n  fetchCurrentUserInfo(): Observable<string> {\n    return this.sessionService.fetchCurrentUser().pipe(map((res) => res.attributes.email));\n  }\n\n  createTaskToRoom(dismissData, roomId, email): Observable<any> {\n    const iosStringDate = (new Date()).toISOString();\n    if (dismissData === undefined) {\n      return of({});\n    } else {\n      const content = {\n        id: `${uuid()}`,\n        authorID: `${email}`,\n        roomID: `${roomId}`,\n        title: dismissData.nameItem,\n        description: dismissData.descriptionItem,\n        scheduleDate: dismissData.scheduleDateItem,\n        createdAt: iosStringDate,\n        status: 0,\n        priority: 1\n      }\n      return this.taskService.createTaskItem(content);\n    }\n  }\n\n  fetchActiveTaskPerRoom(roomId): Observable<any> {\n    const filterContent = {\n      roomID: {\n        eq: `${roomId}`\n      }\n    }\n    return this.taskService.fetchTaskItemsPerRoom(filterContent)\n      .pipe(mergeMap((res) => res.items))\n      .pipe(filter(data => data.status < 10))\n      .pipe(toArray());\n  }\n\n  fetchDoneTaskPerRoom(roomId): Observable<any> {\n    const filterContent = {\n      roomID: {\n        eq: `${roomId}`\n      }\n    }\n    return this.taskService.fetchTaskItemsPerRoom(filterContent)\n      .pipe(mergeMap((res) => res.items))\n      .pipe(filter(data => data.status === 10))\n      .pipe(toArray());\n  }\n\n  updateTaskItem(taskItem, status): Observable<any> {\n    const content = {\n      id: taskItem.id,\n      status: status,\n    }\n    return this.taskService.updateTaskItem(content);\n  }\n\n  deleteTaskItem(taskId: string): Observable<any> {\n    const content = {\n      id: `${taskId}`,\n    }\n    return this.taskService.deleteTaskItem(content);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AmplifyService, GetRoomQuery, ListTasksQuery } from '../../../shared/service/amplify.service';\nimport { Observable, from } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskServiceService {\n\n  constructor(\n    private amplifyService: AmplifyService\n  ) { }\n\n  fetchRoomInfo(roomId: string): Observable<GetRoomQuery> {\n    return from(this.amplifyService.GetRoom(roomId));\n  }\n\n  createTaskItem(content): Observable<any> {\n    return from(this.amplifyService.CreateTask(content));\n  }\n\n  updateTaskItem(content): Observable<any> {\n    return from(this.amplifyService.UpdateTask(content));\n  }\n\n  fetchTaskItemsPerRoom(content): Observable<ListTasksQuery> {\n    return from(this.amplifyService.ListTasks(content));\n  }\n\n  deleteTaskItem(content): Observable<any> {\n    return from(this.amplifyService.DeleteTask(content));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TaskPage } from './task.page';\n\nconst routes: Routes = [\n  {\n    path: ':id',\n    component: TaskPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TaskPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TaskPageRoutingModule } from './task-routing.module';\n\nimport { TaskPage } from './task.page';\nimport { TaskLogicService } from './logic/task-logic.service';\nimport { TaskServiceService } from './service/task-service.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TaskPageRoutingModule\n  ],\n  declarations: [TaskPage],\n  providers: [TaskLogicService, TaskServiceService],\n})\nexport class TaskPageModule { }\n","export default \".task-title {\\n  font-weight: 500;\\n  font-size: large;\\n}\\n\\n.task-card-content {\\n  padding-top: 30px;\\n  padding-bottom: 10px;\\n}\\n\\n.card-background {\\n  --background: \\\"#1c1c1d\\\";\\n}\\n\\n.button-center {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy90YWt1bmFrYWdhd2EvZGV2L2lvbmljL3dhbnRUby9zcmMvYXBwL3BhZ2VzL3Rhc2svdGFzay5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3Rhc2svdGFzay5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtFQUNBLGdCQUFBO0FDQ0o7O0FERUE7RUFDSSxpQkFBQTtFQUNBLG9CQUFBO0FDQ0o7O0FERUE7RUFDSSx1QkFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Rhc2svdGFzay5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGFzay10aXRsZSB7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LXNpemU6IGxhcmdlO1xufVxuXG4udGFzay1jYXJkLWNvbnRlbnQge1xuICAgIHBhZGRpbmctdG9wOiAzMHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4XG59XG5cbi5jYXJkLWJhY2tncm91bmQge1xuICAgIC0tYmFja2dyb3VuZDogJyMxYzFjMWQnO1xufVxuXG4uYnV0dG9uLWNlbnRlciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufSIsIi50YXNrLXRpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiBsYXJnZTtcbn1cblxuLnRhc2stY2FyZC1jb250ZW50IHtcbiAgcGFkZGluZy10b3A6IDMwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAxMHB4O1xufVxuXG4uY2FyZC1iYWNrZ3JvdW5kIHtcbiAgLS1iYWNrZ3JvdW5kOiBcIiMxYzFjMWRcIjtcbn1cblxuLmJ1dHRvbi1jZW50ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ModalController, ToastController, ActionSheetController } from '@ionic/angular';\nimport { from, of } from 'rxjs';\nimport { flatMap, catchError, tap } from 'rxjs/operators';\nimport { GetRoomQuery } from 'src/app/shared/service/amplify.service';\nimport { AddTaskModalComponent } from '../../shared/component/modal/add-task-modal/add-task-modal.component';\nimport { DeleteTaskModalComponent } from '../../shared/component/modal/delete-task-modal/delete-task-modal.component';\nimport { TaskLogicService } from './logic/task-logic.service';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.page.html',\n  styleUrls: ['./task.page.scss'],\n})\nexport class TaskPage implements OnInit {\n  room = {} as GetRoomQuery;\n  roomId: string;\n  userEmail: string;\n  taskActiveItems;\n  taskDoneItems;\n  isReorder: boolean;\n  segment;\n\n  constructor(\n    private router: Router,\n    private modalCtrl: ModalController,\n    private route: ActivatedRoute,\n    private location: Location,\n    private logic: TaskLogicService,\n    private toastCtrl: ToastController,\n    private actionSheetCtrl: ActionSheetController,\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  ionViewWillEnter() {\n    this.isReorder = false;\n    this.segment = 'active';\n    this.roomId = this.route.snapshot.paramMap.get('id');\n    this.logic.fetchRoomInfo(this.roomId)\n      .subscribe((roomInfo: GetRoomQuery) => {\n        this.room = roomInfo;\n      });\n    this.logic.fetchCurrentUserInfo().subscribe((email) => this.userEmail = email);\n    this.logic.fetchActiveTaskPerRoom(this.roomId)\n      .subscribe((items) => {\n        this.taskActiveItems = items;\n      })\n\n    this.logic.fetchDoneTaskPerRoom(this.roomId)\n      .subscribe((items) => {\n        this.taskDoneItems = items;\n      })\n  }\n\n  async presentDoneToast(): Promise<void> {\n    const toast = await this.toastCtrl.create({\n      message: 'おつかれさまでした！',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  async presentAddTask() {\n    const modal = await this.modalCtrl.create({\n      component: AddTaskModalComponent,\n      componentProps: { room: this.room },\n    });\n    const dismissObservable = from(modal.onDidDismiss());\n    dismissObservable\n      .pipe(flatMap(({ data }) => this.logic.createTaskToRoom(data, this.roomId, this.userEmail)))\n      .pipe(flatMap(() => this.logic.fetchActiveTaskPerRoom(this.roomId)))\n      .subscribe((items) => {\n        this.taskActiveItems = items;\n      });\n    return modal.present();\n  }\n\n  goBackToRoom(): void {\n    this.location.back();\n  }\n\n  sortTaskItem(): void {\n    this.isReorder = !this.isReorder;\n  }\n\n  reorderTask(ev): void {\n    const itemMove = this.taskActiveItems.splice(ev.detail.from, 1)[0];\n    this.taskActiveItems.splice(ev.detail.to, 0, itemMove);\n    ev.detail.complete();\n  }\n\n  navigateToTaskDetail(task, segment): void {\n    this.router.navigate(['task-detail', `${task.id}`, `${segment}`])\n  }\n\n  addCommentToTaskDetail(task): void {\n    this.router.navigate(['task-detail', `${task.id}`], { fragment: 'comment' })\n  }\n\n  segmentChanged(ev): void {\n    this.segment = ev.detail.value;\n  }\n\n  doneTask(taskItem): void {\n    const presentToast = from(this.presentDoneToast());\n    this.logic.updateTaskItem(taskItem, 10)\n      .pipe(flatMap(() => this.logic.fetchActiveTaskPerRoom(this.roomId)))\n      .pipe(tap(() => presentToast)).subscribe((data) => this.taskActiveItems = data);\n  }\n\n\n  async presentConfirmDelete(task) {\n    const actionSheet = await this.actionSheetCtrl.create({\n      buttons: [\n        {\n          text: '削除',\n          role: 'destructive',\n          icon: 'trash',\n          handler: () => {\n            this.deleteTask(task)\n          }\n        },\n        {\n          text: 'キャンセル',\n          icon: 'close',\n          role: 'cancel',\n        }\n      ]\n    })\n    return actionSheet.present();\n  }\n\n  deleteTask(task) {\n    console.log(task);\n    this.logic.deleteTaskItem(task.id)\n      .pipe(flatMap(() => this.logic.fetchActiveTaskPerRoom(this.roomId)))\n      .subscribe((result) => this.taskActiveItems = result);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}