type Company @model {
  id: ID!
  name: String!
  domain: String!
  room: [Room] @connection(name: "CompanyRoom")
  companyMembers: [User] @connection(name: "CompanyMembers")
}

type Room @model {
  id: ID!
  name: String!
  companyID: ID!
  company: Company! @connection(name: "CompanyRoom", fields: ["companyID"])
  description: String!
  tasks: [Task] @connection(name: "RoomTask", fields: ["id"])
  roomMembers: [User] @connection(name: "RoomMembers", fields: ["id"])
}

type Task @model {
  id: ID!
  authorID: ID!
  chargePersonID: ID
  roomID: ID!
  title: String!
  description: String
  scheduleDate: AWSDateTime
  priority: Int
  status: Int
  createdAt: AWSDateTime
  taskMembers: [User] @connection(name: "TaskMembers")
  chargePerson: User
    @connection(name: "chargeMember", fields: ["chargePersonID"])
  room: Room! @connection(name: "RoomTask", fields: ["roomID"])
  messages: [Message] @connection(name: "TaskMessages", fields: ["id"])
}

type Message @model {
  id: ID!
  taskID: ID!
  author: User
  content: String!
  createdAt: AWSDateTime
  isSent: Boolean
  task: Task! @connection(name: "TaskMessages", fields: ["taskID"])
}

type User @model {
  id: ID!
  email: String!
  companyID: ID!
  username: String!
  tel: String
  positionName: String
  iconImage: String
  registered: Boolean
  authority: String
  company: Company! @connection(name: "CompanyMembers", fields: ["companyID"])
  task: Task @connection(name: "TaskMembers")
  chargeTask: [Task] @connection(name: "chargeMember")
  room: Room @connection(name: "RoomMembers")
}
